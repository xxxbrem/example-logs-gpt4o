2025-05-07 05:02:35 - Thread-12 (execute) - INFO - [Exploration]
```sql
--Description: 1)  Inspect a few raw GFS-0.25 forecast rows (creation time, location & whole forecast array)
SELECT 
    "creation_time",
    TO_GEOGRAPHY("geography")        AS "geo_point",
    "forecast"
FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25"
LIMIT 20;
```

```sql
--Description: 2)  Explode the forecast array to see individual elements & available keys
SELECT 
    "creation_time",
    f.value                             AS "fc_raw"
FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25",
     LATERAL FLATTEN(input => "forecast") f
LIMIT 20;
```

```sql
--Description: 3)  Pick common weather fields from every forecast record
SELECT 
    "creation_time",
    ST_Y(TO_GEOGRAPHY("geography"))     AS "lat",
    ST_X(TO_GEOGRAPHY("geography"))     AS "lon",
    f.value:"hours"::INT                AS "lead_hours",
    f.value:"time"::NUMBER              AS "fc_valid_time",
    f.value:"temperature_2m_above_ground"::FLOAT  AS "temp_c",
    f.value:"total_precipitation_surface"::FLOAT  AS "precip_mm",
    f.value:"total_cloud_cover_entire_atmosphere"::FLOAT AS "tcc_pct"
FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25",
     LATERAL FLATTEN(input => "forecast") f
LIMIT 20;
```

```sql
--Description: 4)  Restrict to a 5-km (~0.045°) radius around 26.75 N, 51.50 E
SELECT 
    *
FROM (
    SELECT 
        "creation_time",
        f.value:"hours"::INT      AS "lead_hours",
        ST_Y(TO_GEOGRAPHY("geography")) AS "lat",
        ST_X(TO_GEOGRAPHY("geography")) AS "lon",
        f.value
    FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25",
         LATERAL FLATTEN(input => "forecast") f
) t
WHERE "lat" BETWEEN 26.705 AND 26.795
  AND "lon" BETWEEN 51.455 AND 51.545
LIMIT 20;
```

```sql
--Description: 5)  Keep only forecasts *issued* in July-2019
SELECT DISTINCT 
    TO_TIMESTAMP("creation_time"/1000000)  AS "creation_ts",
    "creation_time"
FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25"
WHERE "creation_time" BETWEEN 1561939200000000     -- 2019-07-01 00:00:00
                         AND 1564617599000000     -- 2019-07-31 23:59:59
LIMIT 20;
```

```sql
--Description: 6)  From July-2019 runs, select next-day forecasts (lead 24-47 h)
SELECT 
    "creation_time",
    f.value:"hours"::INT        AS "lead_hours",
    f.value:"time"::NUMBER      AS "valid_time"
FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25",
     LATERAL FLATTEN(input => "forecast") f
WHERE "creation_time" BETWEEN 1561939200000000 AND 1564617599000000   -- July 2019
  AND f.value:"hours"::INT BETWEEN 24 AND 47
LIMIT 20;
```

```sql
--Description: 7)  Add local valid-date & hour-of-day for daylight cloud-cover (10–17 UTC assumed)
SELECT 
    TO_TIMESTAMP(f.value:"time"/1000000)               AS "valid_ts",
    DATE_TRUNC('day', TO_TIMESTAMP(f.value:"time"/1000000)) AS "valid_date",
    DATE_PART('hour', TO_TIMESTAMP(f.value:"time"/1000000)) AS "valid_hour",
    f.value:"temperature_2m_above_ground"::FLOAT       AS "temp_c",
    f.value:"total_cloud_cover_entire_atmosphere"::FLOAT AS "tcc_pct"
FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25",
     LATERAL FLATTEN(input => "forecast") f
WHERE "creation_time" BETWEEN 1561939200000000 AND 1564617599000000
  AND f.value:"hours"::INT BETWEEN 24 AND 47
LIMIT 20;
```

```sql
--Description: 8)  Aggregate per (creation-run, valid_date) the basic metrics we need
SELECT 
    DATE_TRUNC('day', TO_TIMESTAMP(f.value:"time"/1000000))       AS "valid_date",
    MAX(f.value:"temperature_2m_above_ground"::FLOAT)             AS "max_temp_c",
    MIN(f.value:"temperature_2m_above_ground"::FLOAT)             AS "min_temp_c",
    AVG(f.value:"temperature_2m_above_ground"::FLOAT)             AS "avg_temp_c",
    SUM(f.value:"total_precipitation_surface"::FLOAT)             AS "tot_precip_mm"
FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25",
     LATERAL FLATTEN(input => "forecast") f
WHERE "creation_time" BETWEEN 1561939200000000 AND 1564617599000000
  AND f.value:"hours"::INT BETWEEN 24 AND 47
  AND ST_Y(TO_GEOGRAPHY("geography")) BETWEEN 26.705 AND 26.795
  AND ST_X(TO_GEOGRAPHY("geography")) BETWEEN 51.455 AND 51.545
GROUP BY "valid_date"
LIMIT 20;
```

```sql
--Description: 9)  Day-time (10–17h) mean cloud cover for each valid_date
SELECT 
    DATE_TRUNC('day', TO_TIMESTAMP(f.value:"time"/1000000))       AS "valid_date",
    AVG(f.value:"total_cloud_cover_entire_atmosphere"::FLOAT)     AS "avg_tcc_pct_10_17"
FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25",
     LATERAL FLATTEN(input => "forecast") f
WHERE "creation_time" BETWEEN 1561939200000000 AND 1564617599000000
  AND f.value:"hours"::INT BETWEEN 24 AND 47
  AND ST_Y(TO_GEOGRAPHY("geography")) BETWEEN 26.705 AND 26.795
  AND ST_X(TO_GEOGRAPHY("geography")) BETWEEN 51.455 AND 51.545
  AND DATE_PART('hour', TO_TIMESTAMP(f.value:"time"/1000000)) BETWEEN 10 AND 17
GROUP BY "valid_date"
LIMIT 20;
```

```sql
--Description: 10)  Final daily weather summary for the area (snowfall/rainfall split by 32 °F ≈ 0 °C)
SELECT
    t."valid_date",
    t."max_temp_c",
    t."min_temp_c",
    t."avg_temp_c",
    t."tot_precip_mm",
    cc."avg_tcc_pct_10_17",
    CASE WHEN (t."avg_temp_c" * 9/5 + 32) < 32 THEN t."tot_precip_mm" ELSE 0 END  AS "snowfall_mm",
    CASE WHEN (t."avg_temp_c" * 9/5 + 32) >= 32 THEN t."tot_precip_mm" ELSE 0 END AS "rainfall_mm"
FROM (
    -- daily temp + precip
    SELECT 
        DATE_TRUNC('day', TO_TIMESTAMP(f.value:"time"/1000000))       AS "valid_date",
        MAX(f.value:"temperature_2m_above_ground"::FLOAT)             AS "max_temp_c",
        MIN(f.value:"temperature_2m_above_ground"::FLOAT)             AS "min_temp_c",
        AVG(f.value:"temperature_2m_above_ground"::FLOAT)             AS "avg_temp_c",
        SUM(f.value:"total_precipitation_surface"::FLOAT)             AS "tot_precip_mm"
    FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25",
         LATERAL FLATTEN(input => "forecast") f
    WHERE "creation_time" BETWEEN 1561939200000000 AND 1564617599000000     -- July 2019 runs
      AND f.value:"hours"::INT BETWEEN 24 AND 47                            -- next-day forecasts
      AND ST_Y(TO_GEOGRAPHY("geography")) BETWEEN 26.705 AND 26.795         -- 5-km radius ≈ bbox
      AND ST_X(TO_GEOGRAPHY("geography")) BETWEEN 51.455 AND 51.545
    GROUP BY "valid_date"
) t
LEFT JOIN (
    -- day-time cloud cover
    SELECT 
        DATE_TRUNC('day', TO_TIMESTAMP(f.value:"time"/1000000))       AS "valid_date",
        AVG(f.value:"total_cloud_cover_entire_atmosphere"::FLOAT)     AS "avg_tcc_pct_10_17"
    FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25",
         LATERAL FLATTEN(input => "forecast") f
    WHERE "creation_time" BETWEEN 1561939200000000 AND 1564617599000000
      AND f.value:"hours"::INT BETWEEN 24 AND 47
      AND ST_Y(TO_GEOGRAPHY("geography")) BETWEEN 26.705 AND 26.795
      AND ST_X(TO_GEOGRAPHY("geography")) BETWEEN 51.455 AND 51.545
      AND DATE_PART('hour', TO_TIMESTAMP(f.value:"time"/1000000)) BETWEEN 10 AND 17
    GROUP BY "valid_date"
) cc
ON t."valid_date" = cc."valid_date"
ORDER BY t."valid_date"
LIMIT 20;
```
[Exploration]
2025-05-07 05:02:35 - Thread-12 (execute) - INFO - [Try to execute]
--Description: 1)  Inspect a few raw GFS-0.25 forecast rows (creation time, location & whole forecast array)
SELECT 
    "creation_time",
    TO_GEOGRAPHY("geography")        AS "geo_point",
    "forecast"
FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25"
LIMIT 20;
[Try to execute]
2025-05-07 05:02:43 - Thread-12 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 1)  Inspect a few raw GFS-0.25 forecast rows (creation time, location & whole forecast array)
SELECT 
    "creation_time",
    TO_GEOGRAPHY("geography")        AS "geo_point",
    "forecast"
FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25"
LIMIT 20;
Results:
creation_time,geo_point,forecast
1639353600000000,"{
  ""coordinates"": [
    -9.200000000000000e+01,
    -2.575000000000000e+01
  ],
  ""type"": ""Point""
}","[
  {
    ""hours"": 0,
    ""precipitable_water_entire_atmosphere"": 1.658517074584961e+01,
    ""relative_humidity_2m_above_ground"": 6.890000152587891e+01,
    ""specific_humidity_2m_above_ground"": 9.044583886861801e-03,
    ""temperature_2m_above_ground"": 1.865105590820315e+01,
    ""time"": 1639353600000000,
    ""u_component_of_w

[Successfully executed]
2025-05-07 05:02:43 - Thread-12 (execute) - INFO - [Try to execute]
--Description: 2)  Explode the forecast array to see individual elements & available keys
SELECT 
    "creation_time",
    f.value                             AS "fc_raw"
FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25",
     LATERAL FLATTEN(input => "forecast") f
LIMIT 20;
[Try to execute]
2025-05-07 05:02:44 - Thread-12 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 2)  Explode the forecast array to see individual elements & available keys
SELECT 
    "creation_time",
    f.value                             AS "fc_raw"
FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25",
     LATERAL FLATTEN(input => "forecast") f
LIMIT 20;
Results:
creation_time,fc_raw
1510790400000000,"{
  ""hours"": 0,
  ""precipitable_water_entire_atmosphere"": 6.599999904632568e+00,
  ""relative_humidity_2m_above_ground"": 9.064664459228516e+01,
  ""specific_humidity_2m_above_ground"": 2.658329205587506e-03,
  ""temperature_2m_above_ground"": -3.592321777343727e+00,
  ""time"": 1510790400000000,
  ""u_component_of_wind_10m_above_ground"": -2.230129241943359e+00,
  ""v_component_of_wind_10m_above_ground"": -3.146760225296021e+00
}"
1510790400000000,"{

[Successfully executed]
2025-05-07 05:02:44 - Thread-12 (execute) - INFO - [Try to execute]
--Description: 3)  Pick common weather fields from every forecast record
SELECT 
    "creation_time",
    ST_Y(TO_GEOGRAPHY("geography"))     AS "lat",
    ST_X(TO_GEOGRAPHY("geography"))     AS "lon",
    f.value:"hours"::INT                AS "lead_hours",
    f.value:"time"::NUMBER              AS "fc_valid_time",
    f.value:"temperature_2m_above_ground"::FLOAT  AS "temp_c",
    f.value:"total_precipitation_surface"::FLOAT  AS "precip_mm",
    f.value:"total_cloud_cover_entire_atmosphere"::FLOAT AS "tcc_pct"
FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25",
     LATERAL FLATTEN(input => "forecast") f
LIMIT 20;
[Try to execute]
2025-05-07 05:02:47 - Thread-12 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 3)  Pick common weather fields from every forecast record
SELECT 
    "creation_time",
    ST_Y(TO_GEOGRAPHY("geography"))     AS "lat",
    ST_X(TO_GEOGRAPHY("geography"))     AS "lon",
    f.value:"hours"::INT                AS "lead_hours",
    f.value:"time"::NUMBER              AS "fc_valid_time",
    f.value:"temperature_2m_above_ground"::FLOAT  AS "temp_c",
    f.value:"total_precipitation_surface"::FLOAT  AS "precip_mm",
    f.value:"total_cloud_cover_entire_atmosphere"::FLOAT AS "tcc_pct"
FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25",
     LATERAL FLATTEN(input => "forecast") f
LIMIT 20;
Results:
creation_time,lat,lon,lead_hours,fc_valid_time,temp_c,precip_mm,tcc_pct
1474394400000000,42.5,-155.75,0,1474394400000000,17.950006103515648,0.00011600000289035961,450.0
1474394400000000,42.5,-155.75,1,1474398000000000,20.850000000000023,0.0,98.0
1474394400000000,42.5,-155.75,2,1474401600000000,20.950006103515648,0.0,99.0
1474394400000000,42.5,-155.75,3,1474405200000000,21.050012207031273,0.10999999940395355,99.0
1474394400000000,42.5,-155.75,4,1474408800000000,21.150018310546898,0.219999998

[Successfully executed]
2025-05-07 05:02:47 - Thread-12 (execute) - INFO - [Try to execute]
--Description: 4)  Restrict to a 5-km (~0.045°) radius around 26.75 N, 51.50 E
SELECT 
    *
FROM (
    SELECT 
        "creation_time",
        f.value:"hours"::INT      AS "lead_hours",
        ST_Y(TO_GEOGRAPHY("geography")) AS "lat",
        ST_X(TO_GEOGRAPHY("geography")) AS "lon",
        f.value
    FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25",
         LATERAL FLATTEN(input => "forecast") f
) t
WHERE "lat" BETWEEN 26.705 AND 26.795
  AND "lon" BETWEEN 51.455 AND 51.545
LIMIT 20;
[Try to execute]
2025-05-07 05:02:48 - Thread-12 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 4)  Restrict to a 5-km (~0.045°) radius around 26.75 N, 51.50 E
SELECT 
    *
FROM (
    SELECT 
        "creation_time",
        f.value:"hours"::INT      AS "lead_hours",
        ST_Y(TO_GEOGRAPHY("geography")) AS "lat",
        ST_X(TO_GEOGRAPHY("geography")) AS "lon",
        f.value
    FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25",
         LATERAL FLATTEN(input => "forecast") f
) t
WHERE "lat" BETWEEN 26.705 AND 26.795
  AND "lon" BETWEEN 51.455 AND 51.545
LIMIT 20;
Results:
creation_time,lead_hours,lat,lon,VALUE
1717351200000000,0,26.75,51.5,"{
  ""hours"": 0,
  ""precipitable_water_entire_atmosphere"": 9.617400169372559e+00,
  ""relative_humidity_2m_above_ground"": 6.279999923706055e+01,
  ""specific_humidity_2m_above_ground"": 1.734437607228756e-02,
  ""temperature_2m_above_ground"": 3.065599975585940e+01,
  ""time"": 1717351200000000,
  ""u_component_of_wind_10m_above_ground"": 6.009037971496582e+00,
  ""v_component_of_wind_10m_above_ground"": -4.99015140533447

[Successfully executed]
2025-05-07 05:02:48 - Thread-12 (execute) - INFO - [Try to execute]
--Description: 5)  Keep only forecasts *issued* in July-2019
SELECT DISTINCT 
    TO_TIMESTAMP("creation_time"/1000000)  AS "creation_ts",
    "creation_time"
FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25"
WHERE "creation_time" BETWEEN 1561939200000000     -- 2019-07-01 00:00:00
                         AND 1564617599000000     -- 2019-07-31 23:59:59
LIMIT 20;
[Try to execute]
2025-05-07 05:02:49 - Thread-12 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 5)  Keep only forecasts *issued* in July-2019
SELECT DISTINCT 
    TO_TIMESTAMP("creation_time"/1000000)  AS "creation_ts",
    "creation_time"
FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25"
WHERE "creation_time" BETWEEN 1561939200000000     -- 2019-07-01 00:00:00
                         AND 1564617599000000     -- 2019-07-31 23:59:59
LIMIT 20;
Results:
creation_ts,creation_time
2019-07-10 00:00:00,1562716800000000
2019-07-21 06:00:00,1563688800000000
2019-07-15 18:00:00,1563213600000000
2019-07-10 12:00:00,1562760000000000
2019-07-24 06:00:00,1563948000000000
2019-07-24 00:00:00,1563926400000000
2019-07-21 12:00:00,1563710400000000
2019-07-10 06:00:00,1562738400000000
2019-07-06 00:00:00,1562371200000000

[Successfully executed]
2025-05-07 05:02:49 - Thread-12 (execute) - INFO - [Try to execute]
--Description: 6)  From July-2019 runs, select next-day forecasts (lead 24-47 h)
SELECT 
    "creation_time",
    f.value:"hours"::INT        AS "lead_hours",
    f.value:"time"::NUMBER      AS "valid_time"
FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25",
     LATERAL FLATTEN(input => "forecast") f
WHERE "creation_time" BETWEEN 1561939200000000 AND 1564617599000000   -- July 2019
  AND f.value:"hours"::INT BETWEEN 24 AND 47
LIMIT 20;
[Try to execute]
2025-05-07 05:02:49 - Thread-12 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 6)  From July-2019 runs, select next-day forecasts (lead 24-47 h)
SELECT 
    "creation_time",
    f.value:"hours"::INT        AS "lead_hours",
    f.value:"time"::NUMBER      AS "valid_time"
FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25",
     LATERAL FLATTEN(input => "forecast") f
WHERE "creation_time" BETWEEN 1561939200000000 AND 1564617599000000   -- July 2019
  AND f.value:"hours"::INT BETWEEN 24 AND 47
LIMIT 20;
Results:
creation_time,lead_hours,valid_time
1563710400000000,24,1563796800000000
1563710400000000,25,1563800400000000
1563710400000000,26,1563804000000000
1563710400000000,27,1563807600000000
1563710400000000,28,1563811200000000
1563710400000000,29,1563814800000000
1563710400000000,30,1563818400000000
1563710400000000,31,1563822000000000
1563710400000000,32,1563825600000000
1563710400000000,33,1563829200000000
1563710400000000,34,1563832800000000
1563710400000000,35,1563836400000000
1563710

[Successfully executed]
2025-05-07 05:02:49 - Thread-12 (execute) - INFO - [Try to execute]
--Description: 7)  Add local valid-date & hour-of-day for daylight cloud-cover (10–17 UTC assumed)
SELECT 
    TO_TIMESTAMP(f.value:"time"/1000000)               AS "valid_ts",
    DATE_TRUNC('day', TO_TIMESTAMP(f.value:"time"/1000000)) AS "valid_date",
    DATE_PART('hour', TO_TIMESTAMP(f.value:"time"/1000000)) AS "valid_hour",
    f.value:"temperature_2m_above_ground"::FLOAT       AS "temp_c",
    f.value:"total_cloud_cover_entire_atmosphere"::FLOAT AS "tcc_pct"
FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25",
     LATERAL FLATTEN(input => "forecast") f
WHERE "creation_time" BETWEEN 1561939200000000 AND 1564617599000000
  AND f.value:"hours"::INT BETWEEN 24 AND 47
LIMIT 20;
[Try to execute]
2025-05-07 05:02:50 - Thread-12 (execute) - INFO - [Error occurred]
{'status': 'error', 'error_msg': "##ERROR##001007 (22023): SQL compilation error:\ninvalid type [TO_TIMESTAMP((TO_DOUBLE(GET(F.VALUE, 'time'))) / (TO_DOUBLE(1000000)))] for parameter 'TO_TIMESTAMP_NTZ'"}
[Error occurred]
2025-05-07 05:07:26 - Thread-12 (execute) - INFO - [Corrected SQL]
```sql
--Description: 
-- Goal: verify that DATEADD( 'microsecond', <epoch_us>, '1970-01-01' ) converts the JSON “time”
--        values into Snowflake TIMESTAMPs without overflow; at the same time pull the date, hour,
--        temperature (°C) and cloud-cover (%) for NEXT-DAY forecast hours (24-47 h lead) that were
--        generated by model runs INITIALISED in July-2019 and whose grid-point lies within ~5 km of
--        26.75 N , 51.50 E.  Limiting to 20 rows for inspection.
SELECT
       DATEADD(microsecond, f.value:"time"::NUMBER, '1970-01-01 00:00:00')      AS "valid_ts",
       DATE_TRUNC('day',
                  DATEADD(microsecond, f.value:"time"::NUMBER, '1970-01-01 00:00:00')
       )                                                                        AS "valid_date",
       DATE_PART('hour',
                 DATEADD(microsecond, f.value:"time"::NUMBER, '1970-01-01 00:00:00')
       )                                                                        AS "valid_hour",
       f.value:"temperature_2m_above_ground"::FLOAT                             AS "temp_c",
       f.value:"total_cloud_cover_entire_atmosphere"::FLOAT                     AS "tcc_pct"
FROM NOAA_GLOBAL_FORECAST_SYSTEM.NOAA_GLOBAL_FORECAST_SYSTEM."NOAA_GFS0P25",
     LATERAL FLATTEN(input => "forecast") f
WHERE "creation_time" BETWEEN 1561939200000000        -- 2019-07-01 00:00:00 UTC
                        AND 1564617599000000        -- 2019-07-31 23:59:59 UTC
  AND f.value:"hours"::INT BETWEEN 24 AND 47          -- next-day lead hours
  AND ST_Y(TO_GEOGRAPHY("geography")) BETWEEN 26.705 AND 26.795   -- ≈5 km latitude window
  AND ST_X(TO_GEOGRAPHY("geography")) BETWEEN 51.455 AND 51.545   -- ≈5 km longitude window
LIMIT 20;
```
[Corrected SQL]
2025-05-07 05:09:17 - Thread-12 (execute) - INFO - [Results for corrected sql]
No data found for the specified query.

[Results for corrected sql]
