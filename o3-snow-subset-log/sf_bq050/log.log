2025-05-07 05:00:40 - Thread-24 (execute) - INFO - [Exploration]
```sql
--Description: 1) Look at a few 2014 Citibike trips (micro-second epoch between 2014-01-01 and 2014-12-31)
SELECT 
  "tripduration",
  "starttime",
  "stoptime",
  "start_station_id",
  "end_station_id",
  "start_station_latitude",
  "start_station_longitude",
  "end_station_latitude",
  "end_station_longitude"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_TRIPS
WHERE "starttime" BETWEEN 1388534400000000 AND 1420070399000000
LIMIT 20;
```

```sql
--Description: 2) Distinct station IDs that appear in 2014 trips (quick idea of node universe)
SELECT DISTINCT 
  "start_station_id"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_TRIPS
WHERE "starttime" BETWEEN 1388534400000000 AND 1420070399000000
LIMIT 20;
```

```sql
--Description: 3) Sample of current station table with names & coordinates
SELECT 
  "station_id",
  "name",
  "latitude",
  "longitude",
  "capacity"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_STATIONS
LIMIT 20;
```

```sql
--Description: 4) Explore GEO_US_BOUNDARIES ZIP code polygons for NYC area (state_code NY)
SELECT 
  "zip_code",
  "city",
  "borough",
  "neighborhood"
FROM NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ZIP_CODES
WHERE "state_code" = 'NY'
LIMIT 20;
```

```sql
--Description: 5) Show Cyclistic ZIP code look-up (to capture borough & neighborhood text)
SELECT 
  "zip",
  "borough",
  "neighborhood"
FROM NEW_YORK_CITIBIKE_1.CYCLISTIC.ZIP_CODES
LIMIT 20;
```

```sql
--Description: 6) Locate the Central Park GSOD station used for NYC weather
SELECT 
  "usaf",
  "wban",
  "name",
  "state",
  "lat",
  "lon",
  "begin",
  "end"
FROM NEW_YORK_CITIBIKE_1.NOAA_GSOD.STATIONS
WHERE "name" ILIKE '%CENTRAL%PARK%' 
  AND "state" = 'NY'
LIMIT 20;
```

```sql
--Description: 7) Inspect 2014 daily weather rows for the Central Park station (replace ‘xxxxxx’ with real USAF code seen above)
SELECT 
  "stn",
  "wban",
  "year",
  "mo",
  "da",
  "temp",
  "wdsp",
  "prcp",
  "max",
  "min"
FROM NEW_YORK_CITIBIKE_1.NOAA_GSOD.GSOD2014
WHERE "stn" = 'xxxxxx'
  AND "year" = '2014'
LIMIT 20;
```

```sql
--Description: 8) Quick look at wind-speed & precip distributions for Central Park 2014
SELECT 
  "wdsp",
  "prcp"
FROM NEW_YORK_CITIBIKE_1.NOAA_GSOD.GSOD2014
WHERE "stn" = 'xxxxxx'
LIMIT 20;
```

```sql
--Description: 9) Check how many trips in 2014 can already be linked to a station record (inner join on ID)
SELECT 
  COUNT(*) AS "trip_cnt"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_TRIPS t
JOIN NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_STATIONS s
  ON s."station_id"::NUMBER = t."start_station_id"
WHERE t."starttime" BETWEEN 1388534400000000 AND 1420070399000000;
```

```sql
--Description: 10) First try at attaching a ZIP polygon (centroid-within test) for a handful of start-stations
SELECT 
  s."station_id",
  s."name",
  s."latitude",
  s."longitude",
  z."zip_code"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_STATIONS s
JOIN NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ZIP_CODES z
  ON ST_CONTAINS(z."zip_code_geom", TO_GEOGRAPHY(POINT(s."longitude", s."latitude")))
WHERE z."state_code" = 'NY'
LIMIT 20;
```
[Exploration]
2025-05-07 05:00:40 - Thread-24 (execute) - INFO - [Try to execute]
--Description: 1) Look at a few 2014 Citibike trips (micro-second epoch between 2014-01-01 and 2014-12-31)
SELECT 
  "tripduration",
  "starttime",
  "stoptime",
  "start_station_id",
  "end_station_id",
  "start_station_latitude",
  "start_station_longitude",
  "end_station_latitude",
  "end_station_longitude"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_TRIPS
WHERE "starttime" BETWEEN 1388534400000000 AND 1420070399000000
LIMIT 20;
[Try to execute]
2025-05-07 05:00:41 - Thread-24 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 1) Look at a few 2014 Citibike trips (micro-second epoch between 2014-01-01 and 2014-12-31)
SELECT 
  "tripduration",
  "starttime",
  "stoptime",
  "start_station_id",
  "end_station_id",
  "start_station_latitude",
  "start_station_longitude",
  "end_station_latitude",
  "end_station_longitude"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_TRIPS
WHERE "starttime" BETWEEN 1388534400000000 AND 1420070399000000
LIMIT 20;
Results:
tripduration,starttime,stoptime,start_station_id,end_station_id,start_station_latitude,start_station_longitude,end_station_latitude,end_station_longitude
649,1397995463000000,1397996112000000,350,320,40.71559509,-73.9870295,40.717571,-74.005549
689,1413883430000000,1413884119000000,350,320,40.71559509,-73.9870295,40.717571,-74.005549
734,1408018863000000,1408019597000000,497,320,40.73704984,-73.99009296,40.717571,-74.005549
346,1410172330000000,1410172676000000,151,320,40.7218158,-73.9972030

[Successfully executed]
2025-05-07 05:00:41 - Thread-24 (execute) - INFO - [Try to execute]
--Description: 2) Distinct station IDs that appear in 2014 trips (quick idea of node universe)
SELECT DISTINCT 
  "start_station_id"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_TRIPS
WHERE "starttime" BETWEEN 1388534400000000 AND 1420070399000000
LIMIT 20;
[Try to execute]
2025-05-07 05:00:41 - Thread-24 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 2) Distinct station IDs that appear in 2014 trips (quick idea of node universe)
SELECT DISTINCT 
  "start_station_id"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_TRIPS
WHERE "starttime" BETWEEN 1388534400000000 AND 1420070399000000
LIMIT 20;
Results:
start_station_id
342
366
348
466
229
446
473
241
359
320
492
223
128
247
540
253
388
173
380
2004

[Successfully executed]
2025-05-07 05:00:41 - Thread-24 (execute) - INFO - [Try to execute]
--Description: 3) Sample of current station table with names & coordinates
SELECT 
  "station_id",
  "name",
  "latitude",
  "longitude",
  "capacity"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_STATIONS
LIMIT 20;
[Try to execute]
2025-05-07 05:00:42 - Thread-24 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 3) Sample of current station table with names & coordinates
SELECT 
  "station_id",
  "name",
  "latitude",
  "longitude",
  "capacity"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_STATIONS
LIMIT 20;
Results:
station_id,name,latitude,longitude,capacity
66dc0dab-0aca-11e7-82f6-3863bb44ef7c,W 59 St & 10 Ave,40.770513,-73.988038,117
39f756c2-3904-463e-95a8-8d8e3540e845,W 25 St & 9 Ave,40.74783260583772,-74.0005722643582,38
66db4282-0aca-11e7-82f6-3863bb44ef7c,W 11 St & 6 Ave,40.73532427,-73.99800419,47
66ddb6d9-0aca-11e7-82f6-3863bb44ef7c,University Pl & E 8 St,40.73143724085228,-73.99490341544151,79
4ad1714c-528e-4200-882f-82082c4d85b0,Creston Ave & E 178 St,40.850885,-73.906469,28
9b70cbe2-25fc-

[Successfully executed]
2025-05-07 05:00:42 - Thread-24 (execute) - INFO - [Try to execute]
--Description: 4) Explore GEO_US_BOUNDARIES ZIP code polygons for NYC area (state_code NY)
SELECT 
  "zip_code",
  "city",
  "borough",
  "neighborhood"
FROM NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ZIP_CODES
WHERE "state_code" = 'NY'
LIMIT 20;
[Try to execute]
2025-05-07 05:00:42 - Thread-24 (execute) - INFO - [Error occurred]
{'status': 'error', 'error_msg': '##ERROR##000904 (42000): SQL compilation error: error line 4 at position 2\ninvalid identifier \'"borough"\''}
[Error occurred]
2025-05-07 05:02:14 - Thread-24 (execute) - INFO - [Corrected SQL]
```sql
--Description: We need the USAF/WBAN identifiers for Central Park’s weather-observing station (commonly used for NYC climate analyses)
--to join 2014 GSOD daily data later.  Search the NOAA_GSOD.STATIONS table for names containing ‘CENTRAL PARK’ in New York State.
SELECT
  "usaf",
  "wban",
  "name",
  "state",
  "lat",
  "lon",
  "begin",
  "end"
FROM NEW_YORK_CITIBIKE_1.NOAA_GSOD.STATIONS
WHERE "name" ILIKE '%CENTRAL%PARK%'
  AND "state" = 'NY'
LIMIT 20;
```
[Corrected SQL]
2025-05-07 05:02:14 - Thread-24 (execute) - INFO - [Results for corrected sql]
usaf,wban,name,state,lat,lon,begin,end
725033,94728,NYC CENTRAL PARK,NY,40.779,-73.969,19431201,20100817
725060,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969,20100817,20120430
999999,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969,19650101,20120731
725053,94728,CENTRAL PARK,NY,40.779,-73.969,20050101,20210921

[Results for corrected sql]
2025-05-07 05:04:11 - Thread-24 (execute) - INFO - [Corrected other sqls]
```sql
--Description: 5) Cyclistic ZIP-code lookup showing borough and neighborhood labels
SELECT
  "zip",
  "borough",
  "neighborhood"
FROM NEW_YORK_CITIBIKE_1.CYCLISTIC.ZIP_CODES
LIMIT 20;
```

```sql
--Description: 6) Identify Central Park weather-station rows in NOAA_GSOD.STATIONS (NY only)
SELECT
  "usaf",
  "wban",
  "name",
  "state",
  "lat",
  "lon",
  "begin",
  "end"
FROM NEW_YORK_CITIBIKE_1.NOAA_GSOD.STATIONS
WHERE "name" ILIKE '%CENTRAL%PARK%'
  AND "state" = 'NY'
LIMIT 20;
```

```sql
--Description: 7) Inspect 2014 daily GSOD values for the Central Park station (replace 'XXXXXX' with actual USAF code)
SELECT
  "stn",
  "wban",
  "year",
  "mo",
  "da",
  "temp",
  "wdsp",
  "prcp",
  "max",
  "min"
FROM NEW_YORK_CITIBIKE_1.NOAA_GSOD.GSOD2014
WHERE "stn" = 'XXXXXX'           -- Central Park USAF code
  AND "year" = '2014'
LIMIT 20;
```

```sql
--Description: 8) Quick look at wind-speed & precipitation for Central Park in 2014
SELECT
  "wdsp",
  "prcp"
FROM NEW_YORK_CITIBIKE_1.NOAA_GSOD.GSOD2014
WHERE "stn" = 'XXXXXX'           -- Central Park USAF code
  AND "year" = '2014'
LIMIT 20;
```

```sql
--Description: 9) How many 2014 trips have a start-station ID that matches a numeric value inside the stations table
SELECT
  COUNT(*) AS "trip_cnt"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_TRIPS t
JOIN NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_STATIONS s
  ON TRY_TO_NUMBER(s."station_id") = t."start_station_id"
WHERE t."starttime" BETWEEN 1388534400000000 AND 1420070399000000;
```

```sql
--Description: 10) Prototype spatial join: assign a New York ZIP code to each Citibike station via point-within-polygon
SELECT
  s."station_id",
  s."name",
  s."latitude",
  s."longitude",
  z."zip_code"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_STATIONS       s
JOIN NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ZIP_CODES               z
  ON ST_CONTAINS(z."zip_code_geom",
                 TO_GEOGRAPHY(POINT(s."longitude", s."latitude")))
WHERE z."state_code" = 'NY'
LIMIT 20;
```
[Corrected other sqls]
2025-05-07 05:04:11 - Thread-24 (execute) - INFO - [Successfully corrected]
Successfully corrected. SQL:
--Description: We need the USAF/WBAN identifiers for Central Park’s weather-observing station (commonly used for NYC climate analyses)
--to join 2014 GSOD daily data later.  Search the NOAA_GSOD.STATIONS table for names containing ‘CENTRAL PARK’ in New York State.
SELECT
  "usaf",
  "wban",
  "name",
  "state",
  "lat",
  "lon",
  "begin",
  "end"
FROM NEW_YORK_CITIBIKE_1.NOAA_GSOD.STATIONS
WHERE "name" ILIKE '%CENTRAL%PARK%'
  AND "state" = 'NY'
LIMIT 20;
Results:
usaf,wban,name,state,lat,lon,begin,end
725033,94728,NYC CENTRAL PARK,NY,40.779,-73.969,19431201,20100817
725060,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969,20100817,20120430
999999,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969,19650101,20120731
725053,94728,CENTRAL PARK,NY,40.779,-73.969,20050101,20210921

[Successfully corrected]
2025-05-07 05:04:11 - Thread-24 (execute) - INFO - [Try to execute]
--Description: 5) Cyclistic ZIP-code lookup showing borough and neighborhood labels
SELECT
  "zip",
  "borough",
  "neighborhood"
FROM NEW_YORK_CITIBIKE_1.CYCLISTIC.ZIP_CODES
LIMIT 20
[Try to execute]
2025-05-07 05:04:12 - Thread-24 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 5) Cyclistic ZIP-code lookup showing borough and neighborhood labels
SELECT
  "zip",
  "borough",
  "neighborhood"
FROM NEW_YORK_CITIBIKE_1.CYCLISTIC.ZIP_CODES
LIMIT 20
Results:
zip,borough,neighborhood
10458,Bronx,Bronx Park and Fordham
10467,Bronx,Bronx Park and Fordham
10468,Bronx,Bronx Park and Fordham
10453,Bronx,Central Bronx
10457,Bronx,Central Bronx
10460,Bronx,Central Bronx
10451,Bronx,High Bridge and Morrisania
10452,Bronx,High Bridge and Morrisania
10456,Bronx,High Bridge and Morrisania
10454,Bronx,Hunts Point and Mott Haven
10455,Bronx,Hunts Point and Mott Haven
10459,Bronx,Hunts Point and Mott Haven

[Successfully executed]
2025-05-07 05:04:12 - Thread-24 (execute) - INFO - [Try to execute]
--Description: 6) Identify Central Park weather-station rows in NOAA_GSOD.STATIONS (NY only)
SELECT
  "usaf",
  "wban",
  "name",
  "state",
  "lat",
  "lon",
  "begin",
  "end"
FROM NEW_YORK_CITIBIKE_1.NOAA_GSOD.STATIONS
WHERE "name" ILIKE '%CENTRAL%PARK%'
  AND "state" = 'NY'
LIMIT 20
[Try to execute]
2025-05-07 05:04:12 - Thread-24 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 6) Identify Central Park weather-station rows in NOAA_GSOD.STATIONS (NY only)
SELECT
  "usaf",
  "wban",
  "name",
  "state",
  "lat",
  "lon",
  "begin",
  "end"
FROM NEW_YORK_CITIBIKE_1.NOAA_GSOD.STATIONS
WHERE "name" ILIKE '%CENTRAL%PARK%'
  AND "state" = 'NY'
LIMIT 20
Results:
usaf,wban,name,state,lat,lon,begin,end
725033,94728,NYC CENTRAL PARK,NY,40.779,-73.969,19431201,20100817
725060,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969,20100817,20120430
999999,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969,19650101,20120731
725053,94728,CENTRAL PARK,NY,40.779,-73.969,20050101,20210921

[Successfully executed]
2025-05-07 05:04:12 - Thread-24 (execute) - INFO - [Try to execute]
--Description: 7) Inspect 2014 daily GSOD values for the Central Park station (replace 'XXXXXX' with actual USAF code)
SELECT
  "stn",
  "wban",
  "year",
  "mo",
  "da",
  "temp",
  "wdsp",
  "prcp",
  "max",
  "min"
FROM NEW_YORK_CITIBIKE_1.NOAA_GSOD.GSOD2014
WHERE "stn" = 'XXXXXX'           -- Central Park USAF code
  AND "year" = '2014'
LIMIT 20
[Try to execute]
2025-05-07 05:04:13 - Thread-24 (execute) - INFO - [Error occurred]
No data found for the specified query.

[Error occurred]
2025-05-07 05:06:20 - Thread-24 (execute) - INFO - [Corrected SQL]
```sql
--Description: Quickly test whether any 2014 Central Park weather rows exist by dropping the year filter;
--return the first 20 records with WBAN 94728 from GSOD2014 (if none, result will still be empty).
SELECT
  "stn",
  "wban",
  "year",
  "mo",
  "da",
  "temp",
  "wdsp",
  "prcp",
  "max",
  "min"
FROM NEW_YORK_CITIBIKE_1.NOAA_GSOD.GSOD2014
WHERE "wban" = '94728'
LIMIT 20;
```
[Corrected SQL]
2025-05-07 05:06:21 - Thread-24 (execute) - INFO - [Results for corrected sql]
stn,wban,year,mo,da,temp,wdsp,prcp,max,min
725053,94728,2014,01,18,37.6,999.9,0.0,41.0,32.0
725053,94728,2014,01,20,39.0,999.9,0.0,44.6,35.6
725053,94728,2014,01,16,39.4,999.9,0.0,41.0,36.1
725053,94728,2014,01,22,12.3,999.9,0.46,17.6,6.8
725053,94728,2014,01,25,21.8,6.2,0.0,28.0,15.8
725053,94728,2014,01,30,21.2,3.1,0.0,30.0,14.0
725053,94728,2014,01,17,37.8,999.9,0.0,44.6,32.7
725053,94728,2014,01,04,15.8,4.0,0.02,28.0,8.1

[Results for corrected sql]
2025-05-07 05:07:18 - Thread-24 (execute) - INFO - [Corrected other sqls]
```sql
--Description: 8) Examine wind-speed and precipitation for Central Park during 2014  
SELECT
  "wdsp",
  "prcp"
FROM NEW_YORK_CITIBIKE_1.NOAA_GSOD.GSOD2014
WHERE "wban" = '94728'      -- Central Park WBAN
  AND "year" = '2014'
LIMIT 20;
```

```sql
--Description: 9) Count 2014 trips whose start-station ID can be matched to a numeric value in the stations table  
SELECT
  COUNT(*) AS "trip_cnt"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_TRIPS  t
JOIN NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_STATIONS s
  ON TRY_TO_NUMBER(s."station_id") = t."start_station_id"
WHERE t."starttime" BETWEEN 1388534400000000 AND 1420070399000000;
```

```sql
--Description: 10) Prototype spatial join assigning a New York ZIP code to each Citibike station  
SELECT
  s."station_id",
  s."name",
  s."latitude",
  s."longitude",
  z."zip_code"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_STATIONS s
JOIN NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ZIP_CODES       z
  ON ST_CONTAINS(
       z."zip_code_geom",
       TO_GEOGRAPHY(POINT(s."longitude", s."latitude"))
     )
WHERE z."state_code" = 'NY'
LIMIT 20;
```
[Corrected other sqls]
2025-05-07 05:07:18 - Thread-24 (execute) - INFO - [Successfully corrected]
Successfully corrected. SQL:
--Description: Quickly test whether any 2014 Central Park weather rows exist by dropping the year filter;
--return the first 20 records with WBAN 94728 from GSOD2014 (if none, result will still be empty).
SELECT
  "stn",
  "wban",
  "year",
  "mo",
  "da",
  "temp",
  "wdsp",
  "prcp",
  "max",
  "min"
FROM NEW_YORK_CITIBIKE_1.NOAA_GSOD.GSOD2014
WHERE "wban" = '94728'
LIMIT 20;
Results:
stn,wban,year,mo,da,temp,wdsp,prcp,max,min
725053,94728,2014,01,18,37.6,999.9,0.0,41.0,32.0
725053,94728,2014,01,20,39.0,999.9,0.0,44.6,35.6
725053,94728,2014,01,16,39.4,999.9,0.0,41.0,36.1
725053,94728,2014,01,22,12.3,999.9,0.46,17.6,6.8
725053,94728,2014,01,25,21.8,6.2,0.0,28.0,15.8
725053,94728,2014,01,30,21.2,3.1,0.0,30.0,14.0
725053,94728,2014,01,17,37.8,999.9,0.0,44.6,32.7
725053,94728,2014,01,04,15.8,4.0,0.02,28.0,8.1

[Successfully corrected]
2025-05-07 05:07:18 - Thread-24 (execute) - INFO - [Try to execute]
--Description: 8) Examine wind-speed and precipitation for Central Park during 2014  
SELECT
  "wdsp",
  "prcp"
FROM NEW_YORK_CITIBIKE_1.NOAA_GSOD.GSOD2014
WHERE "wban" = '94728'      -- Central Park WBAN
  AND "year" = '2014'
LIMIT 20
[Try to execute]
2025-05-07 05:07:18 - Thread-24 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 8) Examine wind-speed and precipitation for Central Park during 2014  
SELECT
  "wdsp",
  "prcp"
FROM NEW_YORK_CITIBIKE_1.NOAA_GSOD.GSOD2014
WHERE "wban" = '94728'      -- Central Park WBAN
  AND "year" = '2014'
LIMIT 20
Results:
wdsp,prcp
999.9,0.0
999.9,0.0
999.9,0.02
3.3,0.38
6.9,0.04
6.3,0.0
2.6,0.49
10.1,0.58
5.7,0.04
4.4,0.19
2.9,0.0
4.7,0.0
3.4,0.07
3.1,0.02
6.1,0.09
4.5,1.23
2.0,1.0
8.9,0.04
11.0,0.35
7.3,0.69

[Successfully executed]
2025-05-07 05:07:18 - Thread-24 (execute) - INFO - [Try to execute]
--Description: 9) Count 2014 trips whose start-station ID can be matched to a numeric value in the stations table  
SELECT
  COUNT(*) AS "trip_cnt"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_TRIPS  t
JOIN NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_STATIONS s
  ON TRY_TO_NUMBER(s."station_id") = t."start_station_id"
WHERE t."starttime" BETWEEN 1388534400000000 AND 1420070399000000
[Try to execute]
2025-05-07 05:09:17 - Thread-24 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 9) Count 2014 trips whose start-station ID can be matched to a numeric value in the stations table  
SELECT
  COUNT(*) AS "trip_cnt"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_TRIPS  t
JOIN NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_STATIONS s
  ON TRY_TO_NUMBER(s."station_id") = t."start_station_id"
WHERE t."starttime" BETWEEN 1388534400000000 AND 1420070399000000
Results:
trip_cnt
0

[Successfully executed]
2025-05-07 05:09:17 - Thread-24 (execute) - INFO - [Try to execute]
--Description: 10) Prototype spatial join assigning a New York ZIP code to each Citibike station  
SELECT
  s."station_id",
  s."name",
  s."latitude",
  s."longitude",
  z."zip_code"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_STATIONS s
JOIN NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ZIP_CODES       z
  ON ST_CONTAINS(
       z."zip_code_geom",
       TO_GEOGRAPHY(POINT(s."longitude", s."latitude"))
     )
WHERE z."state_code" = 'NY'
LIMIT 20
[Try to execute]
2025-05-07 05:09:17 - Thread-24 (execute) - INFO - [Error occurred]
{'status': 'error', 'error_msg': '##ERROR##002140 (42601): SQL compilation error:\nUnknown function POINT'}
[Error occurred]
2025-05-07 05:11:17 - Thread-24 (execute) - INFO - [Corrected SQL]
```sql
--Description: Map Citibike stations to NY ZIP codes via point-in-polygon.
--Snowflake requires a WKT text point:  'POINT(longitude latitude)'.  We turn each
--station’s lon/lat into that string, cast to GEOGRAPHY, then test ST_CONTAINS
--against each ZIP polygon (also cast to GEOGRAPHY).  Result: sample 20 rows.

SELECT
  s."station_id",
  s."name",
  s."latitude",
  s."longitude",
  z."zip_code"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_STATIONS AS s
JOIN NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ZIP_CODES        AS z
  ON ST_CONTAINS(
       TO_GEOGRAPHY(z."zip_code_geom"),
       TO_GEOGRAPHY('POINT(' || s."longitude" || ' ' || s."latitude" || ')')
     )
WHERE z."state_code" = 'NY'
LIMIT 20;
```
[Corrected SQL]
2025-05-07 05:12:26 - Thread-24 (execute) - INFO - [Results for corrected sql]
station_id,name,latitude,longitude,zip_code
39f756c2-3904-463e-95a8-8d8e3540e845,W 25 St & 9 Ave,40.74783260583772,-74.0005722643582,10001
66db4282-0aca-11e7-82f6-3863bb44ef7c,W 11 St & 6 Ave,40.73532427,-73.99800419,10011
66ddb6d9-0aca-11e7-82f6-3863bb44ef7c,University Pl & E 8 St,40.73143724085228,-73.99490341544151,10003
b516fedb-3ced-4683-8c17-7e5f6dadf04d,Congress St & Hicks St,40.6893952,-73.9995126,11201
1d440638-ec50-4ccb-9a82-0e3247a87c63,8 Ave & W 24 St,40.74591072834279,-73.99807

[Results for corrected sql]
2025-05-07 05:12:26 - Thread-24 (execute) - INFO - [Successfully corrected]
Successfully corrected. SQL:
--Description: Map Citibike stations to NY ZIP codes via point-in-polygon.
--Snowflake requires a WKT text point:  'POINT(longitude latitude)'.  We turn each
--station’s lon/lat into that string, cast to GEOGRAPHY, then test ST_CONTAINS
--against each ZIP polygon (also cast to GEOGRAPHY).  Result: sample 20 rows.

SELECT
  s."station_id",
  s."name",
  s."latitude",
  s."longitude",
  z."zip_code"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_STATIONS AS s
JOIN NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ZIP_CODES        AS z
  ON ST_CONTAINS(
       TO_GEOGRAPHY(z."zip_code_geom"),
       TO_GEOGRAPHY('POINT(' || s."longitude" || ' ' || s."latitude" || ')')
     )
WHERE z."state_code" = 'NY'
LIMIT 20;
Results:
station_id,name,latitude,longitude,zip_code
39f756c2-3904-463e-95a8-8d8e3540e845,W 25 St & 9 Ave,40.74783260583772,-74.0005722643582,10001
66db4282-0aca-11e7-82f6-3863bb44ef7c,W 11 St & 6 Ave,40.73532427,-73.99800419,10011
66ddb6d9-0aca-11e7-82f6-3863bb44ef7c,University Pl & E 8 St,40.73143724085228,-73.99490341544151,10003
b516fedb-3ced-4683-8c17-7e5f6dadf04d,Congress St & Hicks St,40.6893952,-73.9995126,11201
1d440638-ec50-4ccb-9a82-0e3247a87c63,8 Ave & W 24 St,40.74591072834279,-73.99807

[Successfully corrected]
2025-05-07 05:12:26 - Thread-24 (execute) - INFO - itercount: 0
2025-05-07 05:12:26 - Thread-24 (execute) - INFO - [Self-refine]
Table full name: NEW_YORK_CITIBIKE_1.CYCLISTIC.STATE_FIPS
Column name: state Type: TEXT
Column name: postal_code Type: TEXT
Column name: fips Type: NUMBER
Sample rows:
[{'state': 'Alabama', 'postal_code': 'AL', 'fips': 1}, {'state': 'Alaska', 'postal_code': 'AK', 'fips': 2}, {'state': 'Arkansas', 'postal_code': 'AR', 'fips': 5}, {'state': 'California', 'postal_code': 'CA', 'fips': 6}, {'state': 'Colorado', 'postal_code': 'CO', 'fips': 8}]
--------------------------------------------------
Table full name: NEW_YORK_CITIBIKE_1.CYCLISTIC.ZIP_CODES
Column name: zip Type: NUMBER
Column name: borough Type: TEXT
Column name: neighborhood Type: TEXT
Sample rows:
[{'zip': 10458, 'borough': 'Bronx', 'neighborhood': 'Bronx Park and Fordham'}, {'zip': 10468, 'borough': 'Bronx', 'neighborhood': 'Bronx Park and Fordham'}, {'zip': 10453, 'borough': 'Bronx', 'neighborhood': 'Central Bronx'}, {'zip': 10457, 'borough': 'Bronx', 'neighborhood': 'Central Bronx'}, {'zip': 10456, 'borough': 'Bronx', 'neighborhood': 'High Bridge and Morrisania'}]
--------------------------------------------------
Table full name: NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ADJACENT_COUNTIES
Column name: neighbors_fips_code Type: VARIANT
Column name: county_fips_code Type: TEXT
Column name: neighbors Type: VARIANT
Column name: neighbors_state Type: VARIANT
Column name: state Type: TEXT
Column name: county Type: TEXT
Sample rows:
[{'county': 'Audubon County', 'state': 'Iowa', 'county_fips_code': '19009', 'neighbors': '[\n  "Shelby",\n  "Adair",\n  "Guthrie",\n  "Crawford",\n  "Cass",\n  "Carroll"\n]', 'neighbors_state': '[\n  "Iowa",\n  "Iowa",\n  "Iowa",\n  "Iowa",\n  "Iowa",\n  "Iowa"\n]', 'neighbors_fips_code': '[\n  "19165",\n  "19001",\n  "19077",\n  "19047",\n  "19029",\n  "19027"\n]'}, {'county': 'Bremer County', 'state': 'Iowa', 'county_fips_code': '19017', 'neighbors': '[\n  "Floyd",\n  "Chickasaw",\n  "Buchanan",\n  "Butler",\n  "Fayette",\n  "Black Hawk"\n]', 'neighbors_state': '[\n  "Iowa",\n  "Iowa",\n  "Iowa",\n  "Iowa",\n  "Iowa",\n  "Iowa"\n]', 'neighbors_fips_code': '[\n  "19067",\n  "19037",\n  "19019",\n  "19023",\n  "19065",\n  "19013"\n]'}, {'county': 'Cedar County', 'state': 'Iowa', 'county_fips_code': '19031', 'neighbors': '[\n  "Scott",\n  "Jones",\n  "Clinton",\n  "Johnson",\n  "Muscatine",\n  "Linn"\n]', 'neighbors_state': '[\n  "Iowa",\n  "Iowa",\n  "Iowa",\n  "Iowa",\n  "Iowa",\n  "Iowa"\n]', 'neighbors_fips_code': '[\n  "19163",\n  "19105",\n  "19045",\n  "19103",\n  "19139",\n  "19113"\n]'}, {'county': 'Grundy County', 'state': 'Iowa', 'county_fips_code': '19075', 'neighbors': '[\n  "Franklin",\n  "Hardin",\n  "Butler",\n  "Marshall",\n  "Black Hawk",\n  "Tama"\n]', 'neighbors_state': '[\n  "Iowa",\n  "Iowa",\n  "Iowa",\n  "Iowa",\n  "Iowa",\n  "Iowa"\n]', 'neighbors_fips_code': '[\n  "19069",\n  "19083",\n  "19023",\n  "19127",\n  "19013",\n  "19171"\n]'}, {'county': 'Hamilton County', 'state': 'Iowa', 'county_fips_code': '19079', 'neighbors': '[\n  "Boone",\n  "Hardin",\n  "Story",\n  "Wright",\n  "Webster",\n  "Franklin"\n]', 'neighbors_state': '[\n  "Iowa",\n  "Iowa",\n  "Iowa",\n  "Iowa",\n  "Iowa",\n  "Iowa"\n]', 'neighbors_fips_code': '[\n  "19015",\n  "19083",\n  "19169",\n  "19197",\n  "19187",\n  "19069"\n]'}]
--------------------------------------------------
Table full name: NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.CNECTA
Column name: lsad Type: TEXT
Column name: geo_id Type: TEXT
Column name: mtfcc_feature_class_code Type: TEXT
Column name: cnecta_geom Type: BINARY
Column name: int_point_lat Type: FLOAT
Column name: int_point_lon Type: FLOAT
Column name: area_water_meters Type: NUMBER
Column name: name_lsad Type: TEXT
Column name: name Type: TEXT
Column name: cnecta_fips_code Type: TEXT
Column name: area_land_meters Type: NUMBER
Sample rows:
[{'geo_id': '710', 'cnecta_fips_code': '710', 'name': 'Augusta-Waterville, ME', 'name_lsad': 'Augusta-Waterville, ME Combined NECTA', 'lsad': 'M4', 'mtfcc_feature_class_code': 'G3200', 'area_land_meters': 2155036649, 'area_water_meters': 183936850, 'int_point_lat': 44.4092939, 'int_point_lon': -69.6901717, 'cnecta_geom': 'bytearray(b\'\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00?\\r\\x00\\x00\\xfe\\xb5\\xbcr\\xbdrQ\\xc0\\xf3\\x7f\\x0e\\xf3\\xe5IF@\\x18<L\\xfb\\xe6rQ\\xc0\\x0b\\xf9g\\x06\\xf1IF@t\\xb1i\\xa5\\x10sQ\\xc0\\xe3N\\xe9`\\xfdIF@\\x9f\\x17\\xee\\\\\\x18sQ\\xc0\\xdb)\\x1d\\xac\\xffIF@\\xae\\x9e\\x93\\xde7sQ\\xc0\\x8a \\xce\\xc3\\tJF@\\x05\\x85A\\x99FsQ\\xc0\\x8cA\\\'\\x84\\x0eJF@\\xf3\\xc126tsQ\\xc0\\x98\\xa42\\xc5\\x1cJF@\\x0b^\\xf4\\x15\\xa4sQ\\xc0\\r\\x8a\\xe6\\x01,JF@p\\xcbGR\\xd2sQ\\xc0X\\xdc\\x7fd:JF@"\\x88\\xf3p\\x02tQ\\xc0\\xf7\\x88\\x98\\x12IJF@.\\xc4\\xea\\x8f0tQ\\xc0}\\xd9=yXJF@\\x16\\xbc\\xe8+HtQ\\xc0z\\xd5\\xca\\x84_JF@\\xd9$?\\xe2WtQ\\xc0\\xf6&\\x86\\xe4dJF@\\xa44\\x9b\\xc7atQ\\xc0\\xdbb~nhJF@n\\xbf|\\xb2btQ\\xc0\\x0e\\x08t&mJF@\\x97\\x1eM\\xf5dtQ\\xc0\\xdfO\\x8d\\x97nJF@<\\x9f\\x01\\xf5ftQ\\xc0\\xaf\\x97\\xa6\\x08pJF@\\x11\\xbe\\xf77htQ\\xc0=\\xf01XqJF@\\xee\\xcdo\\x98htQ\\xc0;\\x88\\x9d)tJF@*\\x00\\xc63htQ\\xc0t\\x1e\\x15\\xffwJF@\\xef\\x01\\xba/gtQ\\xc0m\\xc5\\xfe\\xb2{JF@\\xea\\x92q\\x8cdtQ\\xc0\\xb7\\xc6g\\xb2\\x7fJF@cE\\r\\xa6atQ\\xc0;q9^\\x81JF@\\xc3\\xb5\\xda\\xc3^tQ\\xc0o\\xb2\\r\\xdc\\x81JF@,\\x99cyWtQ\\xc0\\xfb\\xe9?k~JF@E)!XUtQ\\xc0\\xd0\\xee\\x90b\\x80JF@\\xc2J\\x05\\x15UtQ\\xc0b\\xd0\\t\\xa1\\x83JF@3\\x8a\\xe5\\x96VtQ\\xc0\\x18T\\x1b\\x9c\\x88JF@n\\xbc;2VtQ\\xc0\\x18\\xec\\x86m\\x8bJF@\\xda\\x8c\\xd3\\x10UtQ\\xc0\\xc8\\x1a\\xf5\\x10\\x8dJF@\\x17\\r\\x19\\x8fRtQ\\xc0\\xe7\\xffUG\\x8eJF@\\x07\\xf0\\x16HPtQ\\xc0E\\xd4D\\x9f\\x8fJF@\\r\\xe1\\x98eOtQ\\xc0\\tn\\xa4l\\x91JF@N\\xd0&\\x87OtQ\\xc0/\\x99*\\x18\\x95JF@\\r\\xe1\\x98eOtQ\\xc0o $\\x0b\\x98JF@\\xef\\xe1\\x92\\xe3NtQ\\xc0.\\xc9\\x01\\xbb\\x9aJF@\\xa9\\x83\\xbc\\x1eLtQ\\xc0<\\xcc^\\xb6\\x9dJF@\\xfdE\\xd0\\x98ItQ\\xc0\\x1b\\xc21\\xcb\\x9eJF@\\xe0F\\xca\\x16ItQ\\xc0\\xfat<f\\xa0JF@\\x99f\\xba\\xd7ItQ\\xc0\\x82\\xdcE\\x98\\xa2JF@2\\x05k\\x9cMtQ\\xc0\\xe6\\x05\\xd8G\\xa7JF@<e5]OtQ\\xc0lm\\xe1y\\xa9JF@wcAaPtQ\\xc08\\xc4x\\xcd\\xabJF@\\xd1\\x94\\x9d~PtQ\\xc0!\\xf1\\xf2t\\xaeJF@\\xa2DK\\x1eOtQ\\xc0\\x80\\xc5\\xe1\\xcc\\xafJF@\\x13\\x06e\\x1aMtQ\\xc0\\xbc\\xf77h\\xafJF@\\x86\\xc7~\\x16KtQ\\xc0(\\xae*\\xfb\\xaeJF@\\x99f\\xba\\xd7ItQ\\xc0\\x9a\\xed\\n}\\xb0JF@\\xf8\\x88\\x98\\x12ItQ\\xc0-\\xcf\\x83\\xbb\\xb3JF@\\xd4\\x98\\x10sItQ\\xc0\\xbf\\xb0\\xfc\\xf9\\xb6JF@\\xd4\\x98\\x10sItQ\\xc0\\xad\\xddv\\xa1\\xb9JF@3\\xbb\\xee\\xadHtQ\\xc0\\xb2fd\\x90\\xbbJF@\\x05k\\x9cMGtQ\\xc0\\xf8\\xde\\xdf\\xa0\\xbdJF@S<.\\xaaEtQ\\xc0b->\\x05\\xc0JF@`\\x1e2\\xe5CtQ\\xc0dN\\x97\\xc5\\xc4JF@\\x8a\\xff;\\xa2BtQ\\xc0c\\xe6\\x02\\x97\\xc7JF@\\xe40\\x98\\xbfBtQ\\xc0\\x8b\\x11\\x89B\\xcbJF@\\xdd?\\x16\\xa2CtQ\\xc0\\xd1\\x89\\x04S\\xcdJF@\\x0c\\x90h\\x02EtQ\\xc0\\xa7\\xc2\\x9f\\xe1\\xcdJF@e\\x8dz\\x88FtQ\\xc0\\x95W\\xae\\xb7\\xcdJF@p\\xedDIHtQ\\xc0r\\x81\\xcbc\\xcdJF@2m\\xff\\xcaJtQ\\xc0H\\xbaf\\xf2\\xcdJF@\\x02\\x9bs\\xf0LtQ\\xc0I"\\xfb \\xcbJF@\\xb3\\xc9\\xe1\\x93NtQ\\xc0\\x99\\xf3\\x8c}\\xc9JF@wI\\x9c\\x15QtQ\\xc0\\x0bg\\xb7\\x96\\xc9JF@\\xc3\\x98\\xf4\\xf7RtQ\\xc0=tA}\\xcbJF@\\x87\\x18\\xafyUtQ\\xc0\\xf6_\\xe7\\xa6\\xcdJF@\\xcdv\\x85>XtQ\\xc0c\\x03\\xe9b\\xd3JF@\\x96\\xe7\\xc1\\xddYtQ\\xc0\\x14\\x96x@\\xd9JF@\\xb4\\xe6\\xc7_ZtQ\\xc0M,\\xf0\\x15\\xddJF@\\x8a9\\x08:ZtQ\\xc02h\\xe8\\x9f\\xe0JF@0\\x08\\xac\\x1cZtQ\\xc0\\xc7Ia\\xde\\xe3JF@b\\xda7\\xf7WtQ\\xc0\\x88\\xe3\\xc0\\xab\\xe5JF@\\x15\\x8b\\xdf\\x14VtQ\\xc0Z_$\\xb4\\xe5JF@c\\\\qqTtQ\\xc0x\\xac\\x19\\x19\\xe4JF@\\xcf,\\tPStQ\\xc0\\xf0D\\x10\\xe7\\xe1JF@\\xe2\\xcbD\\x11RtQ\\xc0\\x15\\x83\\x87i\\xdfJF@S\\x8d^\\rPtQ\\xc0/\\xdf\\xfa\\xb0\\xdeJF@\\xa2^\\xf0iNtQ\\xc0L\\xc4[\\xe7\\xdfJF@s\\x0e\\x9e\\tMtQ\\xc0\\x08m9\\x97\\xe2JF@\\x1b\\x11\\x8c\\x83KtQ\\xc0\\xed\\xa81!\\xe6JF@c\\xf1\\x9b\\xc2JtQ\\xc0\\x93\\xf5\\x9b\\x89\\xe9JF@D\\xf2\\x95@JtQ\\xc0\\xce\\x8b\\x13_\\xedJF@\\x9e#\\xf2]JtQ\\xc0Y|\\n\\x80\\xf1JF@K\\xe3\\x17^ItQ\\xc0]\\x9dc@\\xf6JF@\\xd9UH\\xf9ItQ\\xc0\\x7f\\xd7g\\xce\\xfaJF@&\\xa5\\xa0\\xdbKtQ\\xc0\\xc0\\xc6\\xf5\\xef\\xfaJF@\\xb4\\xe3\\x86\\xdfMtQ\\xc0O\\x87\\x15n\\xf9JF@U\\xc1\\xa8\\xa4NtQ\\xc0\\xaf\\xc3\\x98\\xf4\\xf7JF@\\r\\xe1\\x98eOtQ\\xc0\\xff\\x94*Q\\xf6JF@`!sePtQ\\xc0\\xa7\\xb1\\xbd\\x16\\xf4JF@\\xdc\\x0e\\r\\x8bQtQ\\xc05r\\xdd\\x94\\xf2JF@\\xcao\\xd1\\xc9RtQ\\xc0}R\\xed\\xd3\\xf1JF@{\\x9e?mTtQ\\xc0\\xd0\\xacl\\x1f\\xf2JF@t\\xad\\xbdOUtQ\\xc0\\x0b\\xabx#\\xf3JF@i\\xff\\x03\\xacUtQ\\xc03\\xd6\\xfe\\xce\\xf6JF@\\x15\\xbf)\\xacTtQ\\xc0\\xc0\\xc6\\xf5\\xef\\xfaJF@\\xfe\\xb0\\xa5GStQ\\xc0\\xe24D\\x15\\xfeJF@)\\x92\\xaf\\x04RtQ\\xc0\\xc7\\x08\\xa8p\\x04KF@\\xc3\\xb2\\x99CRtQ\\xc0B\\x8e\\xadg\\x08KF@\\x17\\xf3sCStQ\\xc0\\xd5o&\\xa6\\x0bKF@;\\xe3\\xfb\\xe2RtQ\\xc0\\xc8\\x8d"k\\rKF@#\\xd5w~QtQ\\xc05D\\x15\\xfe\\x0cKF@N\\xb6\\x81;PtQ\\xc0\\x92\\x18\\x04V\\x0eKF@\\xd1\\x94\\x9d~PtQ\\xc0n\\xda\\x8c\\xd3\\x10KF@}\\x06\\xd4\\x9bQtQ\\xc0\\x00\\xbc\\x05\\x12\\x14KF@\\xf3\\x1c\\x91\\xefRtQ\\xc0\\xd0\\x03\\x1f\\x83\\x15KF@L4H\\xc1StQ\\xc0\\xcb\\x12\\x9de\\x16KF@3\\xa4\\x8a\\xe2UtQ\\xc0\\x8cx\\xb2\\x9b\\x19KF@\\xd23\\xbd\\xc4XtQ\\xc0\\x9c\\xdf0\\xd1 KF@\\x1f\\x83\\x15\\xa7ZtQ\\xc0\\\\EF\\x07$KF@\\x0c\\xe4\\xd9\\xe5[tQ\\xc0 \\xab[=\\\'KF@\\xb2~31]tQ\\xc0\\x84<\\x82\\x1b)KF@\\x9b"\\xc0\\xe9]tQ\\xc0\\x8f\\xb6\\xf1\\\'*KF@\\x81\\x92\\x02\\x0b`tQ\\xc0L+\\x85@.KF@\\x16\\xc2j,atQ\\xc0\\xdf\\x0c\\xfe~1KF@\\xe5#)\\xe9atQ\\xc0t\\xeev\\xbd4KF@\\xa44\\x9b\\xc7atQ\\xc0O\\xb0\\xff:7KF@\\x0f\\x053\\xa6`tQ\\xc0\\xfb\\xed\\xeb\\xc09KF@X\\xe5B\\xe5_tQ\\xc0VZF\\xea=KF@\\x0f\\x053\\xa6`tQ\\xc0\\xd9\\xd0\\xcd\\xfe@KF@\\xfde\\xf7\\xe4atQ\\xc0\\xac\\xa1\\xd4^DKF@\\xe5\\t\\x84\\x9dbtQ\\xc0\\x04\\x85A\\x99FKF@\\x08\\xc6\\xc1\\xa5ctQ\\xc0\\xc7\\xeaV\\xcfIKF@J\\xb5O\\xc7ctQ\\xc0\\x02\\x81\\xce\\xa4MKF@\\xea\\xc6\\xbb#ctQ\\xc0\\xe7\\xbc\\xc6.QKF@\\xd4\\xb87\\xbfatQ\\xc0\\x99\\xeb4\\xd2RKF@\\xedH\\xf5\\x9d_tQ\\xc0^\\xed(\\xceQKF@|\\t\\x15\\x1c^tQ\\xc0\\x00M\\x84\\rOKF@)\\xc9:\\x1c]tQ\\xc0\\x0e/\\x88HMKF@6\\xab>W[tQ\\xc0s\\xf4\\xf8\\xbdMKF@m:\\x02\\xb8YtQ\\xc0\\xddBW"PKF@s+\\x84\\xd5XtQ\\xc0-5B?SKF@b\\x0e\\x82\\x8eVtQ\\xc0\\x87\\x18\\xafyUKF@\\xe1\\xb1\\x9f\\xc5RtQ\\xc0\\x93K\\xe3\\x17^KF@M\\x827\\xa4QtQ\\xc0B\\x12\\xbd\\x8cbKF@\\xc3\\xb2\\x99CRtQ\\xc0\\x13\\xf2A\\xcffKF@\\xf3\\x02\\xec\\xa3StQ\\xc0@\\x0eJ\\x98iKF@\\xc8!\\xe2\\xe6TtQ\\xc0!\\xc1T3kKF@\\xb5\\x82\\xa6%VtQ\\xc0c\\xb0\\xe2TkKF@&\\xc2\\x86\\xa7WtQ\\xc0JTo\\rlKF@\\x19\\xe0\\x82lYtQ\\xc0P\\xa9\\x12eoKF@\\x19\\xe0\\x82lYtQ\\xc0\\x88?\\x8a:sKF@\\x14#K\\xe6XtQ\\xc0z\\xf5\\xf1\\xd0wKF@\\x1a\\x14\\xcd\\x03XtQ\\xc0 B\\\\9{KF@]\\x03[%XtQ\\xc0\\x17\\xe9E\\xed~KF@\\xaeC5%YtQ\\xc0\\xdbN[#\\x82KF@\\xdd\\x93\\x87\\x85ZtQ\\xc0\\x08kc\\xec\\x84KF@k\\xd2m\\x89\\\\tQ\\xc0\\xe3,\\xeci\\x87KF@\\xbc\\x90\\x0e\\x0fatQ\\xc0\\xcf%\\x1cz\\x8bKF@\\xeb\\xe0`obtQ\\xc0E"4\\x82\\x8dKF@!"5\\xedbtQ\\xc0\\x9d\\x05\\xa1\\xbc\\x8fKF@i\\x02E,btQ\\xc0\\xd2\\x12+\\xa3\\x91KF@\\xda\\xc3^(`tQ\\xc0\\x8f\\xbb\\x08S\\x94KF@qu\\x00\\xc4]tQ\\xc0y\\x93\\xdf\\xa2\\x93KF@\\x89\\x05\\xbe\\xa2[tQ\\xc0\\x95x@\\xd9\\x94KF@\\xad\\xf5EB[tQ\\xc0\\x10\\xfeE\\xd0\\x98KF@}W\\x04\\xff[tQ\\xc0\\xf1H\\xbc<\\x9dKF@d\\xc7F ^tQ\\xc0\\xbf\\x90\\xd5\\xad\\x9eKF@\\xe0\\xb4\\xe0E_tQ\\xc0SrN\\xec\\xa1KF@\\x16\\xf6\\xb4\\xc3_tQ\\xc0{\\x9d\\xd4\\x97\\xa5KF@\\xb7\\x07! _tQ\\xc0g\\xcaN?\\xa8KF@j\\xb8\\xc8=]tQ\\xc0\\x92)\\x1f\\x82\\xaaKF@$Z\\xf2xZtQ\\xc0\\xa6\\x1d\\xfe\\x9a\\xacKF@\\xaf\\xab\\xc9SVtQ\\xc0;3\\xc1p\\xaeKF@\\x11P\\xe1\\x08RtQ\\xc0!\\xa3\\x03\\x92\\xb0KF@\\xc4\\x00\\x89&PtQ\\xc0\\xd3i\\xdd\\x06\\xb5KF@l\\x03w\\xa0NtQ\\xc0\\xfe\\x1dQ\\xa1\\xbaKF@B"m\\xe3OtQ\\xc0\\xdeh\\xc7\\r\\xbfKF@)\\x92\\xaf\\x04RtQ\\xc0\\t\\xfc\\xe1\\xe7\\xbfKF@\\t\\x11p\\x08UtQ\\xc0,\\x06\\x0f\\xd3\\xbeKF@\\xfd.l\\xcdVtQ\\xc0\\x0f!\\xae\\x9c\\xbdKF@\\x8amR\\xd1XtQ\\xc0\\n\\x98\\xc0\\xad\\xbbKF@\\xb9\\xbd\\xa41ZtQ\\xc0\\xe6\\xc1\\xddY\\xbbKF@\\xb3\\xcc"\\x14[tQ\\xc0`G\\xe3P\\xbfKF@T\\xde\\x8epZtQ\\xc0\\xbe\\xb3=z\\xc3KF@\\xef\\xfex\\xafZtQ\\xc0K\\xa44\\x9b\\xc7KF@\\x1eO\\xcb\\x0f\\\\tQ\\xc0\\xbb\\xaf\\xca\\x85\\xcaKF@\\xf4m\\xc1R]tQ\\xc0I\\x08V\\xd5\\xcbKF@d\\xad\\xa1\\xd4^tQ\\xc0\\xd7`\\xe1$\\xcdKF@i\\x1c\\xeawatQ\\xc0\\x9d.\\x8b\\x89\\xcdKF@f\\x9a\\xb0\\xfddtQ\\xc0\\xfeW\\x1d9\\xd2KF@\\xef\\x1b_{ftQ\\xc0ir1\\x06\\xd6KF@0\\x0b\\xed\\x9cftQ\\xc0\\xfcS\\xaaD\\xd9KF@\\x90-\\xcb\\xd7etQ\\xc0\\xf9\\xeb\\x15\\x16\\xdcKF@a\\xddxwdtQ\\xc0\\xa6)\\x02\\x9c\\xdeKF@n\\xbf|\\xb2btQ\\xc0p\\xb4\\xe3\\x86\\xdfKF@?o*RatQ\\xc0\\xdaj\\xd6\\x19\\xdfKF@jP4\\x0f`tQ\\xc0\\xdaj\\xd6\\x19\\xdfKF@\\xf9\\x10T\\x8d^tQ\\xc0\\xa4\\xf5\\xb7\\x04\\xe0KF@\\x05\\xf3W\\xc8\\\\tQ\\xc0\\xce\\xbc\\x1cv\\xdfKF@\\x18\\x92\\x93\\x89[tQ\\xc0!\\x17\\x9c\\xc1\\xdfKF@`r\\xa3\\xc8ZtQ\\xc0&\\xa0\\x89\\xb0\\xe1KF@\\x1f\\x83\\x15\\xa7ZtQ\\xc0~\\x83\\xf6\\xea\\xe3KF@\\x1f\\x83\\x15\\xa7ZtQ\\xc0\\xac\\x9f\\xfe\\xb3\\xe6KF@T\\xc4\\xe9$[tQ\\xc0A\\x81w\\xf2\\xe9KF@f\\x156\\x03\\\\tQ\\xc0\\xb4\\x15\\xfb\\xcb\\xeeKF@\\x95e\\x88c]tQ\\xc0/\\x9b\\x00\\xc3\\xf2KF@\\x05\\xa5h\\xe5^tQ\\xc0\\x1d\\xc8zj\\xf5KF@\\x93\\xe3N\\xe9`tQ\\xc0\\x97\\xb5\\x14\\x90\\xf6KF@\\x9eC\\x19\\xaabtQ\\xc0\\xbbW\\xadL\\xf8KF@\\xb5Q\\x9d\\x0edtQ\\xc0\\xe3\\xea\\xc7&\\xf9KF@\\xa2\\xb2aMetQ\\xc0\\x19\\xf8Q\\r\\xfbKF@\\xc0\\xb1g\\xcfetQ\\xc0\\x0c\\x16N\\xd2\\xfcKF@Z\\xd2Q\\x0eftQ\\xc0\\x11\\x9f;\\xc1\\xfeKF@`\\xc3\\xd3+etQ\\xc0\\xbe\\xdc\\\'G\\x01LF@\\x01\\xd5?\\x88dtQ\\xc0V\\xaf"\\xa3\\x03LF@\\xc1\\xe5\\xb1fdtQ\\xc0\\x8c\\xbc\\xac\\x89\\x05LF@\\x9d\\xf5)\\xc7dtQ\\xc0p\\xf8\\xa4\\x13\\tLF@\\xba\\xf4/IetQ\\xc0^%\\x1f\\xbb\\x0bLF@\\x0c5\\nIftQ\\xc0Ca\\x17E\\x0fLF@\\x0c5\\nIftQ\\xc0 #\\xa0\\xc2\\x11LF@U\\x15\\x1a\\x88etQ\\xc0\\x90b\\x80D\\x13LF@\\xa3\\xe6\\xab\\xe4ctQ\\xc05\\x17\\x7f\\xdb\\x13LF@\\xd4\\xb87\\xbfatQ\\xc0sI\\xd5v\\x13LF@\\xc9Xm\\xfe_tQ\\xc0\\x91\\x96\\xca\\xdb\\x11LF@\\xbe\\xf8\\xa2=^tQ\\xc0\\xfeL\\xbdn\\x11LF@\\xad\\xdb\\xa0\\xf6[tQ\\xc0\\x84\\xe8\\x108\\x12LF@a\\x8cH\\x14ZtQ\\xc0\\x88q\\xfe&\\x14LF@I~\\xc4\\xafXtQ\\xc0\\x9bt["\\x17LF@t_\\xcelWt
--------------------------------------------------
Table full name: NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.CONGRESS_DISTRICT_116
Column name: lsad_name Type: TEXT
Column name: lsad_code Type: TEXT
Column name: congress_session Type: TEXT
Column name: district_geom Type: BINARY
Column name: int_point_lon Type: FLOAT
Column name: state_fips_code Type: TEXT
Column name: geo_id Type: TEXT
Column name: mtfcc_feature_class_code Type: TEXT
Column name: area_water_meters Type: NUMBER
Column name: int_point_lat Type: FLOAT
Column name: district_fips_code Type: TEXT
Column name: int_point_geom Type: BINARY
Column name: area_land_meters Type: NUMBER
Column name: functional_status Type: BOOLEAN
Sample rows:
[{'geo_id': '5308', 'state_fips_code': '53', 'district_fips_code': '08', 'lsad_name': 'Congressional District 8', 'lsad_code': 'C2', 'congress_session': '116', 'mtfcc_feature_class_code': 'G5200', 'functional_status': False, 'area_land_meters': 19060921511, 'area_water_meters': 369956145, 'int_point_lat': 47.3623847, 'int_point_lon': -121.0393849, 'int_point_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x004]>H\\x85B^\\xc0\\x0f\\x891\\x9fb\\xaeG@')", 'district_geom': 'bytearray(b\'\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x88I\\x00\\x00\\x07\\x8bQ\\xd7\\xda\\xa3^\\xc0r4GV~wG@\\n\\xe0\\xf4.\\xde\\xa3^\\xc0r\\x9c\\xdb\\x84{wG@%\\x90\\x12\\xbb\\xb6\\xa3^\\xc0\\xdd\\xc7\\xd1\\x1cYwG@\\xa4\\xff\\xe5Z\\xb4\\xa3^\\xc0g\\xcb\\xb9\\x14WwG@\\\\\\\'\\xbc\\x04\\xa7\\xa3^\\xc0\\x08rP\\xc2LwG@\\x0b5\\xd1\\xe7\\xa3\\xa3^\\xc0\\x9d#\\xf2]JwG@\\xae\\xe2\\x1b\\n\\x9f\\xa3^\\xc0\\x1by \\xb2HwG@\\x88P3\\xa4\\x8a\\xa3^\\xc0\\xef\\xf8\\xf6\\xaeAwG@q\\x90\\x9e"\\x87\\xa3^\\xc0\\x80\\xb9\\x16-@wG@\\xd19?\\xc5q\\xa3^\\xc0\\xcb\\x05.\\x8f5wG@%4\\x10\\xcbf\\xa3^\\xc0\\xb2\\xbc\\xab\\x1e0wG@cE\\r\\xa6a\\xa3^\\xc0\\x01\\x8e={.wG@\\xe1}U.T\\xa3^\\xc0_2U0*wG@z\\x8c\\x80\\nG\\xa3^\\xc0\\x03\\xc6\\xfa\\x06&wG@uYLl>\\xa3^\\xc0\\xa5%VF#wG@)c\\n\\xd68\\xa3^\\xc0\\xb2\\x07Z\\x81!wG@}\\xf3\\x1b&\\x1a\\xa3^\\xc0K\\x0e\\x9ft"wG@*\\x011\\t\\x17\\xa3^\\xc0q\\xe4\\x81\\xc8"wG@7\\xfd\\xd9\\x8f\\x14\\xa3^\\xc0\\n\\xeb\\xc6\\xbb#wG@\\x0f\\xa90\\xb6\\x10\\xa3^\\xc0\\x04\\xfaD\\x9e$wG@y\\x9b7N\\n\\xa3^\\xc0\\xd4u\\xa8\\xa6$wG@\\xe90\\xed\\x9b\\xfb\\xa2^\\xc0vmo\\xb7$wG@\\xd3pX\\x1a\\xf8\\xa2^\\xc0@`\\xe5\\xd0"wG@\\xe7\\x96VC\\xe2\\xa2^\\xc0\\x11\\x8b\\x18v\\x18wG@v\\x8b\\xc0X\\xdf\\xa2^\\xc0\\x832\\x8d&\\x17wG@s\\x1975\\xd0\\xa2^\\xc0\\xcb)\\x011\\twG@+x\\x98\\xf6\\xcd\\xa2^\\xc0\\r\\x81#\\x81\\x06wG@\\xa1\\xfe\\xb3\\xe6\\xc7\\xa2^\\xc0\\xcf\\x95\\x08T\\xffvG@\\xb5Ss\\xb9\\xc1\\xa2^\\xc0\\x80?\\xfc\\xfc\\xf7vG@M\\xc3~O\\xac\\xa2^\\xc0;\\xaa\\x9a \\xeavG@\\xaa\\x8dx\\xb2\\x9b\\xa2^\\xc0\\xf1xZ~\\xe0vG@\\xd7\\xab\\xc8\\xe8\\x80\\xa2^\\xc0Y\\xbd\\xc3\\xed\\xd0vG@\\xea\\xb2\\x98\\xd8|\\xa2^\\xc0\\xc1\\xea\\xc8\\x91\\xcevG@\\x82\\xd7\\xf5\\x0bv\\xa2^\\xc0[\\x8d\\xecJ\\xcbvG@D\\x03?\\xaaa\\xa2^\\xc0\\xd1l\\x1e\\x87\\xc1vG@h\\rl\\x95`\\xa2^\\xc0\\x9c+J\\t\\xc1vG@A0\\xd5\\xccZ\\xa2^\\xc0W\\x1bc\\\'\\xbcvG@<1\\xeb\\xc5P\\xa2^\\xc0\\xfcJ\\xe7\\xc3\\xb3vG@\\xdf\\xc4\\x90\\x9cL\\xa2^\\xc0\\xe6\\x8aRB\\xb0vG@\\x07}w+K\\xa2^\\xc0nZ\\xf0\\xa2\\xafvG@\\x80\\x870~\\x1a\\xa2^\\xc0\\t\\xf3\\x1eg\\x9avG@\\x12p\\x96\\x92\\xe5\\xa1^\\xc0$\\xe5\\xees|vG@\\xb6\\x9f\\x1a/\\xdd\\xa1^\\xc0"\\xc4\\x95\\xb3wvG@\\xfdS\\xaaD\\xd9\\xa1^\\xc0",*\\xe2tvG@H\\x04\\xe3\\xe0\\xd2\\xa1^\\xc0\\x91~\\xfb:pvG@\\xdd\\x0e\\x9b\\xc8\\xcc\\xa1^\\xc0{&\\xfb\\xe7ivG@\\x99\\xe4\\x0e\\x9b\\xc8\\xa1^\\xc0\\rO\\xaf\\x94evG@+P\\x8b\\xc1\\xc3\\xa1^\\xc0\\x89\\xeb\\x18W\\\\vG@\\x97:\\xc8\\xeb\\xc1\\xa1^\\xc0\\xbe\\xdb\\xbcqRvG@I\\xa8\\xa7\\x8f\\xc0\\xa1^\\xc0\\\\\\x1a\\xbf\\xf0JvG@E.8\\x83\\xbf\\xa1^\\xc0\\xea\\x9c\\x9f\\xe28vG@\\\\G\\xe3P\\xbf\\xa1^\\xc0\\x85?\\xc3\\x9b5vG@\\x1aXU/\\xbf\\xa1^\\xc0y\\xf9\\x9d&3vG@\\xe5J\\xcbH\\xbd\\xa1^\\xc0\\t\\x18]\\xde\\x1cvG@\\xa5\\xc3\\xd1U\\xba\\xa1^\\xc0\\xda\\x12\\xb9\\xe0\\x0cvG@Ytys\\xb8\\xa1^\\xc0\\xad*\\xfb\\xae\\x08vG@O\\x14\\xaf\\xb2\\xb6\\xa1^\\xc0\\x02!Y\\xc0\\x04vG@>\\xdd\\x07 \\xb5\\xa1^\\xc0d\\xf9\\xba\\x0c\\xffuG@$\\xf1\\xf2t\\xae\\xa1^\\xc0\\xac\\x9f\\xfe\\xb3\\xe6uG@\\x12w\\x83h\\xad\\xa1^\\xc0W$&\\xa8\\xe1uG@\\xba\\xad\\xbby\\xaa\\xa1^\\xc0!\\x92!\\xc7\\xd6uG@M\\x198\\xa0\\xa5\\xa1^\\xc0\\xad\\x14\\x02\\xb9\\xc4uG@Gg\\\'\\x83\\xa3\\xa1^\\xc0\\xcca\\xf7\\x1d\\xc3uG@\\xdc\\xe4~\\x87\\xa2\\xa1^\\xc0\\xf0\\xd3\\xb87\\xbfuG@;\\x07]\\xc2\\xa1\\xa1^\\xc0\\xe0\\xd0[<\\xbcuG@4R\\xef\\xa9\\x9c\\xa1^\\xc0L\\xd2\\xfc1\\xaduG@\\x87\\xc3\\xd2\\xc0\\x8f\\xa1^\\xc0\\x15jM\\xf3\\x8euG@\\xabH\\x85\\xb1\\x85\\xa1^\\xc0\\x9c/\\xf6^|uG@H\\x02\\r6u\\xa1^\\xc02\\xa7\\xcbbbuG@\\xe5\\xbe\\xd5:q\\xa1^\\xc0/\\xba\\xbc9\\\\uG@\\xb5\\xad\\xf4\\xdal\\xa1^\\xc0m\\xbc;2VuG@\\xd4\\xdd\\x03t_\\xa1^\\xc0\\xf4\\x81\\xe4\\x9dCuG@C\\x98i\\xfbW\\xa1^\\xc0\\xc5\\xac\\x17C9uG@\\xde\\xec\\x9d\\xd1V\\xa1^\\xc0\\x06\\xd0\\xef\\xfb7uG@\\xe8\\xa2!\\xe3Q\\xa1^\\xc0\\xbb\\x02\\xd1\\x932uG@\\x8cj\\x11QL\\xa1^\\xc0\\xac\\xffs\\x98/uG@\\x8a\\xcb\\xf1\\nD\\xa1^\\xc0+\\xbd6\\x1b+uG@ \\x88\\xba\\x0f@\\xa1^\\xc0\\x85\\x088\\x84*uG@8\\xad\\xa2?4\\xa1^\\xc0\\xc0n\\xd8\\xb6(uG@a\\xfe\\n\\x99+\\xa1^\\xc0`2U0*uG@r\\x90\\x10\\xe5\\x0b\\xa1^\\xc0\\n\\x08\\xad\\x87/uG@\\xf4\\x0b=b\\xf4\\xa0^\\xc0\\xe5\\xc95\\x052uG@\\xb2\\x89\\xcc\\\\\\xe0\\xa0^\\xc0Wq\\xaa\\xb50uG@\\xc5\\x1d\\xfd/\\xd7\\xa0^\\xc0p\\xcd\\x1d\\xfd/uG@\\xdcJ\\xaf\\xcd\\xc6\\xa0^\\xc0\\x9b0a4+uG@>#\\x11\\x1a\\xc1\\xa0^\\xc0\\x19\\x86\\x8f\\x88)uG@\\xaf\\xbb\\x07\\xe8\\xbe\\xa0^\\xc0m\\x14Yk(uG@*\\xe5\\xb5\\x12\\xba\\xa0^\\xc04J\\x97\\xfe%uG@\\x1dB#\\xd8\\xb8\\xa0^\\xc0\\xed\\x9d\\xd1V%uG@\\xf2\\xc1\\xf9\\xd4\\xb1\\xa0^\\xc0\\x05b\\xd9\\xcc!uG@\\x9d\\xd4\\x97\\xa5\\x9d\\xa0^\\xc0\\x96\\x9d~P\\x17uG@\\xc0\\x16\\x82\\x1c\\x94\\xa0^\\xc0\\xbcw\\xd4\\x98\\x10uG@_-wf\\x82\\xa0^\\xc0\\xd3\\xb6a\\x14\\x04uG@}\\x07\\xcd\\xae{\\xa0^\\xc0\\x94\\x97\\xfcO\\xfetG@\\xb6Q\\x9d\\x0ed\\xa0^\\xc0)?\\xa9\\xf6\\xe9tG@#\\xaf\\x95\\xd0]\\xa0^\\xc0\\x1a\\x0cuX\\xe1tG@PU\\xa1\\x81X\\xa0^\\xc0!\\xe0\\x10\\xaa\\xd4tG@\\xe7T2\\x00T\\xa0^\\xc0}\\xfb:p\\xcetG@u\\xd2\\x89\\x04S\\xa0^\\xc0N\\xab\\xe8\\x0f\\xcdtG@\\x8d.\\xfdKR\\xa0^\\xc0\\xe6(@\\x14\\xcctG@\\xb38*7Q\\xa0^\\xc0s\\xe9_\\x92\\xcatG@\\x02\\x81\\xce\\xa4M\\xa0^\\xc0^]\\x15\\xa8\\xc5tG@\\x89\\xb92\\xa86\\xa0^\\xc0\\xb6\\x06\\xb6J\\xb0tG@\\x1dD\\xf9\\x82\\x16\\xa0^\\xc0{\\xe1\\xce\\x85\\x91tG@\\xf9\\xa1`\\xc6\\x14\\xa0^\\xc0&\\xbb\\x99\\xd1\\x8ftG@\\xf0[;Q\\x12\\xa0^\\xc0]d\\x02~\\x8dtG@t\\xcb\\x0e\\xf1\\x0f\\xa0^\\xc0R\\x1e\\xdd\\x08\\x8btG@jvk\\x99\\x0c\\xa0^\\xc0\\xbf<d\\xca\\x87tG@\\x11\\x05\\xc1\\xe3\\xdb\\x9f^\\xc0h\\x19\\xa9\\xf7TtG@\\x9e\\xe7O\\x1b\\xd5\\x9f^\\xc0\\xdc\\xd7\\x81sFtG@\\x0b~\\x1bb\\xbc\\x9f^\\xc01\\x8e\\x91\\xec\\x11tG@\\xb0\\x9e!\\x1c\\xb3\\x9f^\\xc0\\x1d\\xe5`6\\x01tG@B\\x15\\xc5\\xab\\xac\\x9f^\\xc0o"\\xfa\\xb5\\xf5sG@\\x1blxz\\xa5\\x9f^\\xc0\\xaa\\x03 \\xee\\xeasG@\\x84\\x1b\\xb7\\x98\\x9f\\x9f^\\xc0\\x10\\xe0\\xf4.\\xdesG@y\\xa1G\\x8c\\x9e\\x9f^\\xc03e\\xa7\\x1f\\xd4sG@\\x8c5\\\\\\xe4\\x9e\\x9f^\\xc0\\x95\\xd5t=\\xd1sG@B,)w\\x9f\\x9f^\\xc0\\x1fA\\xf1c\\xccsG@L\\x8c\\xf37\\xa1\\x9f^\\xc0&f\\xbd\\x18\\xcasG@:\\xd3\\x12+\\xa3\\x9f^\\xc0\\xc8\\xc5\\x18X\\xc7sG@\\xf8\\xaf:r\\xa4\\x9f^\\xc0\\xd5\\xa7\\x1c\\x93\\xc5sG@Y\\xadL\\xf8\\xa5\\x9f^\\xc0\\xf9\\xb1I~\\xc4sG@K}Y\\xda\\xa9\\x9f^\\xc0\\x07\\xc8\\x97P\\xc1sG@\\xed\\x86\\xfb\\xc8\\xad\\x9f^\\xc0\\xe5YI+\\xbesG@a\\xe74\\x0b\\xb4\\x9f^\\xc0\\xffQ\\x9b8\\xb9sG@\\xcc\\xeeW\\x01\\xbe\\x9f^\\xc0\\x18]\\xde\\x1c\\xaesG@\\xd2\\x1e/\\xa4\\xc3\\x9f^\\xc0^\\xec\\xbd\\xf8\\xa2sG@\\x1a\\xe5\\x99\\x97\\xc3\\x9f^\\xc0E"4\\x82\\x8dsG@2\\\'h\\x93\\xc3\\x9f^\\xc0\\tkc\\xec\\x84sG@Bi6\\x8f\\xc3\\x9f^\\xc0\\xae\\xce1 {sG@Y\\xab\\x04\\x8b\\xc3\\x9f^\\xc0\\xfe;\\xa2BusG@Y\\xab\\x04\\x8b\\xc3\\x9f^\\xc0\\xbe\\xb4\\xa8OrsG@5\\xb0U\\x82\\xc5\\x9f^\\xc0\\x0b\\x01\\xc0\\xb1gsG@\\x08\\xd6\\xff9\\xcc\\x9f^\\xc0\\\\\\xe33\\xd9?sG@\\xf3\\xb4\\x8a\\xfe\\xd0\\x9f^\\xc0\\x13\\xc9W\\x02)sG@:-\\x06\\x0f\\xd3\\x9f^\\xc0\\xf5^|\\xd1\\x1esG@\\xe0\\xad\\xba\\x0e\\xd5\\x9f^\\xc0\\xd1\\xacl\\x1f\\xf2rG@\\xa0\\x1b\\x9a\\xb2\\xd3\\x9f^\\xc0\\xa1R%\\xca\\xderG@\\x9f5?\\xfe\\xd2\\x9f^\\xc0>\\xc5q\\xe0\\xd5rG@\\xaa\\xdcD-\\xcd\\x9f^\\xc0\\xfe7\\xf6\\xec\\xb9rG@\\xf0\\xad\\xd6\\x89\\xcb\\x9f^\\xc0\\x1c\\x98\\xdc(\\xb2rG@\\x10>\\x94h\\xc9\\x9f^\\xc0\\xfc-\\x01\\xf8\\xa7rG@.W?6\\xc9\\x9f^\\xc0Q\\xbc\\xca\\xda\\xa6rG@\\xcf%\\xe3\\x18\\xc9\\x9f^\\xc0_\\xd2\\x18\\xad\\xa3rG@\\xd5\\x16e6\\xc8\\x9f^\\xc0\\x8b5\\\\\\xe4\\x9erG@E\\xa44\\x9b\\xc7\\x9f^\\xc0\\xaa\\x1e0\\x0f\\x99rG@\\xff\\xf7n\\xf3\\xc6\\x9f^\\xc0wy:W\\x94rG@e\\xf1)\\x00\\xc6\\x9f^\\xc0\\xa4\\xa83\\xf7\\x90rG@Up\\x06\\x7f\\xbf\\x9f^\\xc0\\x85U\\xbc\\x91yrG@\\xfb>\\xaaa\\xbf\\x9f^\\xc0{\\xdbL\\x85xrG@\\xc2ZC\\xa9\\xbd\\x9f^\\xc0\\xd4\\xd5\\x1d\\x8bmrG@S*\\xe1\\t\\xbd\\x9f^\\xc0F\\xe5&jirG@Tx\\xd0\\xec\\xba\\x9f^\\xc0\\xd7\\r\\xdb\\x16erG@\\x80\\xf5\\xb8o\\xb5\\x9f^\\xc0\\x1e\\x9d\\xba\\xf2YrG@\\xfa\\xdb\\x9e \\xb1\\x9f^\\xc0\\x15\\xbf)\\xacTrG@\\xb6\\x8cb\\xb9\\xa5\\x9f^\\xc0]\\xb6\\x9d\\xb6FrG@\\xf5\\x83\\xbaH\\xa1\\x9f^\\xc0\\xaa\\x02\\xb5\\x18<rG@\\xbc\\xd3\\x9d\\\'\\x9e\\x9f^\\xc0ME*\\x8c-rG@[\\xd6\\x8b\\xa1\\x9c\\x9f^\\xc0\\xbe\\xcf\\xb8p rG@\\x85\\x9d\\xf0\\x12\\x9c\\x9f^\\xc0Q\\xf8l\\x1d\\x1crG@\\x1f\\xc6\\xa4\\xbf\\x97\\x9f^\\xc0H1@\\xa2\\trG@\\xa2\\xbeeN\\x97\\x9f^\\xc0\\x0c34\\x9e\\x08rG@\\\'\\x87O:\\x91\\x9f^\\xc0\\xc45>\\x93\\xfdqG@\\x02\\x88I\\xb8\\x90\\x9f^\\xc0\\xda\\x87\\xbc\\xe5\\xeaqG@\\xf1P\\xa2%\\x8f\\x9f^\\xc0?0G\\x8f\\xdfqG@\\xc9\\xe6\\xaay\\x8e\\x9f^\\xc0\\x0c\\x8bQ\\xd7\\xdaqG@b\\xf8\\x16\\xd6\\x8d\\x9f^\\xc0\\x1a\\xd5\\xe9@\\xd6qG@\\xbdl;m\\x8d\\x9f^\\xc0\\x8c|^\\xf1\\xd4qG@H\\x8a\\xc8\\xb0\\x8a\\x9f^\\xc0\\xeb\\xff\\x1c\\xe6\\xcbqG@\\x84\\xbc\\x1eL\\x8a\\x9f^\\xc0O\\xf9\\xd7\\xf2\\xcaqG@D\\x01\\xdb\\xc1\\x88\\x9f^\\xc0\\xebg\\xb1\\x14\\xc9qG@\\xcb\\xfd\\x0eE\\x81\\x9f^\\xc0\\xba^\\x9a"\\xc0qG@\\xe6\\x82\\xc15w\\x9f^\\xc0\\xa1}\\xac\\xe0\\xb7qG@\\x93\\xb2E\\xd2n\\x9f^\\xc0\\xd1\\xb0\\x18u\\xadqG@\\x03e\\xe1\\xebk\\x9f^\\xc0\\xb6J\\xb08\\x9cqG@\\xa4vMHk\\x9f^\\xc0z\\xb48c\\x98qG@\\xf9\\x13\\x95\\rk\\x9f^\\xc0|\\xe8\\x82\\xfa\\x96qG@:\\xda\\xff\\x00k\\x9f^\\xc0\\xac\\xa0i\\x89\\x95qG@\\x88\\xa0j\\xf4j\\x9f^\\xc0\\xaf\\x08\\xfe\\xb7\\x92qG@Q\\x1c\\xce\\xfcj\\x9f^\\xc03\\x83\\xf8\\xc0\\x8eqG@\\x99%\\x01jj\\x9f^\\xc0\\xd3\\x0c\\xa9\\xa2xqG@\\xcfL0\\x9ck\\x9f^\\xc0=\\xd0\\n\\x0cYqG@\\xe6@\\x0f\\xb5m\\x9f^\\xc0\\xf9n\\xf3\\xc6IqG@N\\x1b\\x9c\\x88~\\x9f^\\xc0\\xb3\\xc7\\x0b\\xe9\\xf0pG@|QI\\x9d\\x80\\x9f^\\xc0\\xb0\\xda\\xfc\\xbf\\xeapG@E\\xdc*\\x88\\x81\\x9f^\\xc0\\x0c\\x8e\\x92W\\xe7pG@\\xcfw~Q\\x82\\x9f^\\xc0\\x84Z\\xd3\\xbc\\xe3pG@\\x1d\\n\\x9f\\xad\\x83\\x9f^\\xc0\\x93p!\\x8f\\xe0pG@\\x15\\x19\\x1d\\x90\\x84\\x9f^\\xc0\\xd6\\xc7C\\xdf\\xddpG@\\xd9\\xb2|]\\x86\\x9f^\\xc0\\xf5\\xb0\\x17\\n\\xd8pG@$\\r\\xfc\\xa8\\x86\\x9f^\
--------------------------------------------------
Table full name: NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.NWS_FORECAST_REGIONS
Column name: fe_area Type: TEXT
Column name: name Type: TEXT
Column name: cwa Type: TEXT
Column name: shape_geometry Type: BINARY
Column name: shortname Type: TEXT
Column name: lon Type: FLOAT
Column name: state_zone Type: TEXT
Column name: state Type: TEXT
Column name: zone Type: TEXT
Column name: time_zone Type: TEXT
Column name: lat Type: FLOAT
Sample rows:
[{'state': 'MI', 'cwa': 'MQT', 'time_zone': 'E', 'fe_area': 'wu', 'zone': '001', 'name': 'Keweenaw', 'state_zone': 'MI001', 'lon': -88.4287, 'lat': 47.6104, 'shortname': 'Keweenaw', 'shape_geometry': 'bytearray(b\'\\x01\\x06\\x00\\x00\\x00;\\x00\\x00\\x00\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x0c\\x00\\x00\\x00\\x008\\x81\\xdf\\xa2&V\\xc0\\xb1 \\xff\\xffQ\\x12H@\\xc4Q\\x81\\xdf\\xdb&V\\xc0\\xc8\\x87\\xff\\xff5\\x12H@\\xf4b\\x81\\xdf\\x01\\\'V\\xc0\\xa8\\x9a\\x00\\x00\\x16\\x12H@,I\\x81\\xdf\\x08\\\'V\\xc0Ix\\x00\\x00\\n\\x12H@,I\\x81\\xdf\\x08\\\'V\\xc0a\\xdf\\x00\\x00\\xee\\x11H@(\\xafb\\xdf\\x18\\\'V\\xc0\\xf0T2\\x00\\xd4\\x11H@\\xb8\\\'\\x00\\xe0\\xe7&V\\xc0P\\xbb\\xff\\xff\\xe7\\x11H@4\\x86\\x00\\xe0X&V\\xc0Gx\\x00\\x00J\\x12H@\\x08\\xc0\\xc7\\xdfd&V\\xc0\\xd9\\x9e\\xda\\xffQ\\x12H@\\x14J\\x00\\xe0s&V\\xc0Hx\\x00\\x00J\\x12H@\\xacR\\x00\\xe0\\x86&V\\xc0\\xc0D\\x00\\x00X\\x12H@\\x008\\x81\\xdf\\xa2&V\\xc0\\xb1 \\xff\\xffQ\\x12H@\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x0c\\x00\\x00\\x00i\\xda\\xff\\xdf<#V\\xc0_\\xdf\\x00\\x00\\xee\\x14H@ \\x1f\\x00\\xe04#V\\xc0\\xb8\\x01\\x01\\x00\\xfa\\x14H@\\xf0f\\x11\\xe0-#V\\xc0\\xe0\\x8d\\xd0\\xff\\r\\x15H@\\xf8\\xa5\\x80\\xdf?#V\\xc00\\xce\\x00\\x00\\x08\\x15H@\\x80\\xd9\\x80\\xdfQ#V\\xc0\\xa8\\xdd\\xff\\xff\\xf3\\x14H@,\\xfa\\x7f\\xdfc#V\\xc0P\\xbb\\xff\\xff\\xe7\\x14H@\\xd0&\\x81\\xdf|#V\\xc0\\xe8\\x12\\x01\\x00\\xe0\\x14H@T\\xc8\\x80\\xdf\\x8b#V\\xc0\\x91\\xf0\\x00\\x00\\xd4\\x14H@\\xb0\\xea\\x80\\xdf\\xb7#V\\xc0\\x0fC\\xff\\xff\\x9d\\x14H@\\x88\\x19j\\xdf\\xbf#V\\xc0\\xc9\\x861\\x00\\x8c\\x14H@\\xe48\\x00\\xe0\\xad#V\\xc0\\xb0 \\xff\\xff\\x91\\x14H@i\\xda\\xff\\xdf<#V\\xc0_\\xdf\\x00\\x00\\xee\\x14H@\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\r\\x00\\x00\\x00pl\\x00\\xe0\\xbf\\x1fV\\xc00\\xce\\x00\\x00\\xc8\\x10H@ \\x1f\\x00\\xe0\\xb4\\x1fV\\xc0y\\x89\\x00\\x00\\xf0\\x10H@|A\\x00\\xe0\\xa0\\x1fV\\xc0\\xc8\\x87\\xff\\xff\\xf5\\x10H@\\x18\\x8d\\xff\\xdf\\x91\\x1fV\\xc0!\\xaa\\xff\\xff\\x01\\x11H@\\xb1\\x95\\xff\\xdf\\x84\\x1fV\\xc0\\x11C\\xff\\xff\\x1d\\x11H@Q{\\xc7\\xdf\\x8c\\x1fV\\xc0\\x00t\\xd5\\xff#\\x11H@h/\\x81\\xdf\\xaf\\x1fV\\xc0Hx\\x00\\x00\\n\\x11H@\\xf5b\\x81\\xdf\\xc1\\x1fV\\xc0\\xc8\\x87\\xff\\xff\\xf5\\x10H@\\x80\\xd9\\x80\\xdf\\xd1\\x1fV\\xc0\\xf0\\x98\\xff\\xff\\xdb\\x10H@\\xec\\xd0\\x80\\xdf\\xde\\x1fV\\xc0\\xa8\\x9a\\x00\\x00\\xd6\\x10H@4\\x8c\\x80\\xdf\\xe6\\x1fV\\xc0\\xb8\\x01\\x01\\x00\\xba\\x10H@\\\\\\x05\\x00\\xe0\\xdb\\x1fV\\xc0\\xb9\\x01\\x01\\x00\\xba\\x10H@pl\\x00\\xe0\\xbf\\x1fV\\xc00\\xce\\x00\\x00\\xc8\\x10H@\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\r\\x00\\x00\\x00 \\x1f\\x00\\xe0\\xf4\\x1aV\\xc0\\xc1D\\x00\\x00\\x98\\x15H@\\xb8\\\'\\x00\\xe0\\xe7\\x1aV\\xc0\\xe01\\xff\\xff\\xb7\\x15H@\\x14J\\x00\\xe0\\xd3\\x1aV\\xc0\\xe01\\xff\\xff\\xb7\\x15H@\\xa4\\xc0\\xff\\xdf\\xc3\\x1aV\\xc0`"\\x00\\x00\\xcc\\x15H@L\\x89\\x11\\xe0\\xb9\\x1aV\\xc0\\x19\\x1e\\xd5\\xff\\xe5\\x15H@\\xc4Q\\x81\\xdf\\xdb\\x1aV\\xc0\\xe8\\x12\\x01\\x00\\xe0\\x15H@\\x18\\xe2\\x80\\xdf\\xe4\\x1aV\\xc0\\xd9\\xee\\xff\\xff\\xd9\\x15H@\\xb4\\xe6\\xcba\\xf0\\x1aV\\xc0Xm\\xa1\\x12\\xb4\\x15H@\\xf4b\\x81\\xdf\\x01\\x1bV\\xc0\\x80\\x0f\\xff\\xff\\xab\\x15H@$\\xb7\\x80\\xdf%\\x1bV\\xc08T\\xff\\xff\\x83\\x15H@IHX\\xdf6\\x1bV\\xc0\\xf9;`\\x00\\\\\\x15H@\\xc4\\xfc\\xff\\xdf(\\x1bV\\xc0\\x18g\\x00\\x00d\\x15H@ \\x1f\\x00\\xe0\\xf4\\x1aV\\xc0\\xc1D\\x00\\x00\\x98\\x15H@\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x002\\x00\\x00\\x00\\xf4d\\x1f\\xe0`#V\\xc0P_\\x82\\xff_\\rH@h/\\x81\\xdfo#V\\xc0\\x90\\xf0\\x00\\x00T\\rH@\\xb0\\xea\\x80\\xdfw#V\\xc0\\x08\\x00\\x00\\x00@\\rH@\\xf8\\xa5\\x80\\xdf\\x7f#V\\xc0\\xb0 \\xff\\xff\\x11\\rH@4\\x8c\\x80\\xdf\\x86#V\\xc08T\\xff\\xff\\x03\\rH@\\xa4\\x15\\x81\\xdf\\x96#V\\xc0\\xf0U\\x00\\x00\\xfe\\x0cH@,I\\x81\\xdf\\xa8#V\\xc0\\x10C\\xff\\xff\\xdd\\x0cH@u\\x04\\x81\\xdf\\xd0#V\\xc0Hx\\x00\\x00\\xca\\x0cH@\\xc4Q\\x81\\xdf\\xdb#V\\xc0\\xd0\\xab\\x00\\x00\\xbc\\x0cH@\\xc4Q\\x81\\xdf\\xdb#V\\xc0\\x01\\xbd\\x00\\x00\\xa2\\x0cH@\\xf4b\\x81\\xdf\\x01$V\\xc0\\x01\\xbd\\x00\\x00\\xa2\\x0cH@T\\xc8\\x80\\xdf\\x0b$V\\xc0\\xa8\\x9a\\x00\\x00\\x96\\x0cH@H\\xf3\\x80\\xdf*$V\\xc0 \\xaa\\xff\\xff\\x81\\x0cH@\\x04{\\x80\\xdf $V\\xc0\\xb8\\x01\\x01\\x00z\\x0cH@Q\\x85\\x81\\xdf-$V\\xc0\\x90\\xf0\\x00\\x00T\\x0cH@8\\x1e\\x81\\xdfI$V\\xc0\\x08\\x00\\x00\\x00@\\x0cH@H\\xf3\\x80\\xdfJ$V\\xc0\\x80\\x0f\\xff\\xff+\\x0cH@t\\x04\\x81\\xdfp$V\\xc08\\xa8\\x08\\x00&\\x0cH@\\x18\\xe2\\x80\\xdf\\x84$V\\xc0\\xc0D\\x00\\x00\\x18\\x0cH@\\x14H\\xb8\\xdfm$V\\xc08\\r\\x1c\\x00\\x0c\\x0cH@\\x84\\x84\\xff\\xdf^$V\\xc0\\xb0 \\xff\\xff\\x11\\x0cH@H\\xf3\\x80\\xdfJ$V\\xc0\\xb0 \\xff\\xff\\x11\\x0cH@\\x90\\xae\\x80\\xdf2$V\\xc0`"\\x00\\x00\\x0c\\x0cH@5\\xe4\\xc3\\xdf\\x1b$V\\xc0H#)\\x00\\xfe\\x0bH@\\xacR\\x00\\xe0\\x06$V\\xc0`"\\x00\\x00\\x0c\\x0cH@pl\\x00\\xe0\\xff#V\\xc0(\\xed\\xfe\\xff\\x1f\\x0cH@\\x18\\x8d\\xff\\xdf\\x11$V\\xc0\\x81\\x0f\\xff\\xff+\\x0cH@P0\\x00\\xe0\\xfa#V\\xc0\\x903\\x00\\x002\\x0cH@\\x08u\\x00\\xe0\\xf2#V\\xc0X\\xfe\\xfe\\xffE\\x0cH@8\\x86\\x00\\xe0\\xd8#V\\xc0\\x90\\xf0\\x00\\x00T\\x0cH@D[\\x00\\xe0\\xd9#V\\xc0P\\xbb\\xff\\xffg\\x0cH@\\xb4\\xdc\\xe2\\xdf\\xbc#V\\xc0\\xb8\\xfd\\x1c\\x00`\\x0cH@ \\x1f\\x00\\xe0\\xb4#V\\xc0P\\xbb\\xff\\xffg\\x0cH@\\xe0\\xa6\\xff\\xdf\\xaa#V\\xc0 \\xaa\\xff\\xff\\x81\\x0cH@\\xc4\\xfc\\xff\\xdf\\xa8#V\\xc0\\xa8\\x9a\\x00\\x00\\x96\\x0cH@\\x88\\x16\\x00\\xe0\\xc1#V\\xc0\\xa8\\x9a\\x00\\x00\\x96\\x0cH@\\tu\\x00\\xe0\\xb2#V\\xc0x\\x89\\x00\\x00\\xb0\\x0cH@\\xc4\\xfc\\xff\\xdf\\xa8#V\\xc0\\xd0\\xab\\x00\\x00\\xbc\\x0cH@\\xbc\\xbf\\x80\\xdf\\x98#V\\xc0\\xd0\\xab\\x00\\x00\\xbc\\x0cH@\\xc8\\xec\\xc3\\xdf\\x8e#V\\xc0 U(\\x00\\xb6\\x0cH@h\\xda\\xff\\xdf|#V\\xc0 \\xaa\\xff\\xff\\xc1\\x0cH@|A\\x00\\xe0`#V\\xc0\\x10C\\xff\\xff\\xdd\\x0cH@\\xf5\\r\\x00\\xe0N#V\\xc0\\x10C\\xff\\xff\\xdd\\x0cH@\\xec{\\xff\\xdfK#V\\xc0x\\x89\\x00\\x00\\xf0\\x0cH@\\xc4\\xfc\\xff\\xdf(#V\\xc08T\\xff\\xff\\x03\\rH@P0\\x00\\xe0\\x1a#V\\xc0\\x8f3\\x00\\x002\\rH@\\xa8\\xb1\\xe7\\xdf,#V\\xc00\\x19\\xc8\\xffY\\rH@\\xb8|\\x81\\xdfZ#V\\xc0X\\xfe\\xfe\\xffE\\rH@\\xa0}\\x00\\xe0e#V\\xc0`"\\x00\\x00L\\rH@\\xf4d\\x1f\\xe0`#V\\xc0P_\\x82\\xff_\\rH@\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x07\\x00\\x00\\x00\\x8c|\\x00\\x803\\xfeU\\xc0\\xe0c\\x00\\xe0\\x0c\\xb0G@\\xda\\x04\\x18\\x96?\\xfeU\\xc0N\\x0b^\\xf4\\x15\\xb0G@A\\xb7\\x974F\\xfeU\\xc0N\\x0b^\\xf4\\x15\\xb0G@\\xc4\\x96\\xff?W\\xfeU\\xc0\\xe8]\\xff_\\t\\xb0G@\\xba\\xd7I}Y\\xfeU\\xc0\\xc0x\\x06\\r\\xfd\\xafG@\\x9az\\xdd"0\\xfeU\\xc0\\xc0x\\x06\\r\\xfd\\xafG@\\x8c|\\x00\\x803\\xfeU\\xc0\\xe0c\\x00\\xe0\\x0c\\xb0G@\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x07\\x00\\x00\\x00\\x0f\\xba\\x84Co\\x05V\\xc0\\x11\\xdf\\x89Y/\\xbcG@\\xa4,\\x01\\x00y\\x05V\\xc0\\x89\\x1e\\x0b (\\xbcG@\\xc4\\x19\\x00\\x00y\\x05V\\xc0\\xc1D\\x00\\x00\\x18\\xbcG@\\x8c\\x0f\\xb3\\x97m\\x05V\\xc0-\\xd1Yf\\x11\\xbcG@\\x19\\x8c\\x11\\x89B\\x05V\\xc0\\xff\\xd17i\\x1a\\xbcG@\\xe8\\xb8+\\x05.\\x05V\\xc0\\xff\\x9e\\xebw8\\xbcG@\\x0f\\xba\\x84Co\\x05V\\xc0\\x11\\xdf\\x89Y/\\xbcG@\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x07\\x00\\x00\\x00\\x94\\xf1\\r\\x8a\\x08\\xf9U\\xc0 \\xaa\\xff\\xff\\xc1\\xbcG@\\xbc\\x87\\xff\\xff5\\xf9U\\xc0 \\xaa\\xff\\xff\\xc1\\xbcG@\\xc0z"\\xd6B\\xf9U\\xc0xSR\\x13\\xbc\\xbcG@\\xec\\xca|\\xa7,\\xf9U\\xc0\\xc0\\xdd\\x99C\\xb1\\xbcG@\\x1d\\xc4\\xc9[\\x00\\xf9U\\xc0P\\xd8\\x7f\\xe9\\xa9\\xbcG@\\xdc\\xc3\\xff\\xff\\xfa\\xf8U\\xc0\\xc8\\x87\\xff\\xff\\xb5\\xbcG@\\x94\\xf1\\r\\x8a\\x08\\xf9U\\xc0 \\xaa\\xff\\xff\\xc1\\xbcG@\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x07\\x00\\x00\\x00\\xec{\\xff\\xdf\\xeb)V\\xc0a"\\x00\\x00\\x8c\\x11H@\\xc4Q\\x81\\xdf\\xfb)V\\xc0`"\\x00\\x00\\x8c\\x11H@h/\\x81\\xdf/*V\\xc0\\x8f3\\x00\\x00r\\x11H@\\xdc\\xfb\\x80\\xdf]*V\\xc0Hx\\x00\\x00J\\x11H@t_\\x84\\xdf\\\\*V\\xc0\\x88\\x077\\x008\\x11H@\\x88\\x16\\x00\\xe0A*V\\xc08T\\xff\\xffC\\x11H@\\xec{\\xff\\xdf\\xeb)V\\xc0a"\\x00\\x00\\x8c\\x11H@\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x1a\\x00\\x00\\x00\\xe5\\xe9\\xfe\\xdfh\\x1bV\\xc0`\\xdf\\x00\\x00.\\x16H@\\xe48\\x00\\xe0-\\x1bV\\xc0\\xf1U\\x00\\x00~\\x16H@\\x90\\x03\\xae\\xdf7\\x1bV\\xc0\\xd9\\xef\\xcd\\xff\\x83\\x16H@\\x18\\xe2\\x80\\xdfD\\x1bV\\xc0\\xc8\\x87\\xff\\xffu\\x16H@\\x04{\\x80\\xdf`\\x1bV\\xc0\\x19g\\x00\\x00d\\x16H@\\xb0\\xea\\x80\\xdfw\\x1bV\\xc00\\xce\\x00\\x00H\\x16H@`\\x9d\\x80\\xdf\\x8c\\x1bV\\xc0\\xc8\\x87\\xff\\xff5\\x16H@\\xc4Q\\x81\\xdf\\x9b\\x1bV\\xc0\\xef\\x98\\xff\\xff\\x1b\\x16H@|A\\x00\\xe0\\xa0\\x1bV\\xc0Q\\xbb\\xff\\xff\\\'\\x16H@!\\x1f\\x00\\xe0t\\x1bV\\xc0\\xf1\\x98\\xff\\xff[\\x16H@|\\x9d\\\'\\xe0o\\x1bV\\xc0\\x88\\x9fa\\xffo\\x16H@\\x18\\xe2\\x80\\xdf\\x84\\x1bV\\xc0\\xf1\\x98\\xff\\xff[\\x16H@\\xec\\xd0\\x80\\xdf\\x9e\\x1bV\\xc0\\x98v\\xff\\xffO\\x16H@,I\\x81\\xdf\\xa8\\x1bV\\xc0\\x1f\\xaa\\xff\\xffA\\x16H@\\xb0\\xea\\x80\\xdf\\xb7\\x1bV\\xc0\\xd1\\xab\\x00\\x00<\\x16H@!t\\x81\\xdf\\xc7\\x1bV\\xc0\\xf0\\x98\\xff\\xff\\x1b\\x16H@\\xbc\\xbf\\x80\\xdf\\xd8\\x1bV\\xc0\\x8f\\xf0\\x00\\x00\\x14\\x16H@\\xf8\\xa5\\x80\\xdf\\xff\\x1bV\\xc0`"\\x00\\x00\\xcc\\x15H@\\xe0\\xa2\\xc5\\xdf\\xf7\\x1bV\\xc0P\\x14g\\x00\\xc0\\x15H@\\xa0}\\x00\\xe0\\xe5\\x1bV\\xc0(\\xed\\xfe\\xff\\xdf\\x15H@<\\xc9\\xff\\xdf\\xd6\\x1bV\\xc09\\x11\\x00\\x00\\xe6\\x15H@\\xf4\\x06\\xb0\\xdf\\xcb\\x1bV\\xc0\\xf9\\xd7\\x1a\\x00\\xe0\\x15H@\\x00\\xe3\\xff\\xdf\\xaf\\x1bV\\xc0`\\xdf\\x00\\x00\\xee\\x15H@\\x14J\\x00\\xe0\\x93\\x1bV\\xc0\\x81\\xcc\\xff\\xff\\r\\x16H@\\x0c\\xb8\\xff\\xdf\\x90\\x1bV\\xc0\\x01\\xbd\\x00\\x00"\\x16H@\\xe5\\xe9\\xfe\\xdfh\\x1bV\\xc0`\\xdf\\x00\\x00.\\x16H@\\x01\\x03\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x12\\x00\\x00\\x00Q\\x85\\x81\\xdf\\xad\\x1bV\\xc0\\xa8\\xdd\\xff\\xff\\xf3\\x16H@\\xfc\\x13\\xf1\\x10\\xc5\\x1bV\\xc0_\\x8c\\xaa\\xf4\\xcd\\x16H@\\x18\\x8d\\xff\\xdf\\xd1\\x1bV\\xc0\\xb0 \\xff\\xff\\xd1\\x16H@4\\xe5\\xe7\\xdf\\xde\\x1bV\\xc0\\xe0\\xd0\\xcf\\xff\\xeb\\x16H@T\\xc8\\x80\\xdf\\xeb\\x1bV\\xc08\\x11\\x00\\x00\\xe6\\x16H@`\\x9d\\x80\\xdf\\x0c\\x1cV\\xc0\\xefU\\x00\\x00\\xbe\\x16H@\\x04{\\x80\\xdf \\x1cV\\xc0\\x80\\x0f\\xff\\xff\\xab\\x16H@\\x9c\\x83\\x80\\xdfS\\
--------------------------------------------------
Table full name: NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.COASTLINE
Column name: coastline_geom Type: BINARY
Column name: name Type: TEXT
Sample rows:
[{'name': 'Atlantic', 'coastline_geom': 'bytearray(b\'\\x01\\x02\\x00\\x00\\x00\\x0e\\x00\\x00\\x00\\xea\\xe1\\xcbD\\x11\\xf9R\\xc0\\xc7\\x83-v\\xfb\\xeeB@\\xea\\xe1\\xcbD\\x11\\xf9R\\xc0\\x0c\\xdf\\xc2\\xba\\xf1\\xeeB@ \\xefU+\\x13\\xf9R\\xc0\\x02\\x012t\\xec\\xeeB@\\xd5$xC\\x1a\\xf9R\\xc0\\x10\\x7f\\x14u\\xe6\\xeeB@\\xa6v\\x86\\xa9-\\xf9R\\xc0*\\xdb\\x87\\xbc\\xe5\\xeeB@t"\\xc1T3\\xf9R\\xc0\\xc1y8\\x81\\xe9\\xeeB@\\x90\\x85\\xe8\\x108\\xf9R\\xc0\\xdcZ&\\xc3\\xf1\\xeeB@\\xa8\\xc7\\xb6\\x0c8\\xf9R\\xc0\\xbd^a\\xc1\\xfd\\xeeB@\\x8e\\x1dT\\xe2:\\xf9R\\xc0\\x92\\x8c\\x9c\\x85=\\xefB@\\xf1\\xe2\\xc4W;\\xf9R\\xc0\\xf2M\\x9a\\x06E\\xefB@\\xd9\\xb3\\xe725\\xf9R\\xc0\\x84\\x934\\x7fL\\xefB@"J{\\x83/\\xf9R\\xc0\\x05Q\\xf7\\x01H\\xefB@\\xbb\\xcbE|\\\'\\xf9R\\xc0\\xb1\\r\\xdc\\x81:\\xefB@\\xea\\xe1\\xcbD\\x11\\xf9R\\xc0\\xc7\\x83-v\\xfb\\xeeB@\')'}, {'name': 'Atlantic', 'coastline_geom': 'bytearray(b\'\\x01\\x02\\x00\\x00\\x00\\x0c\\x00\\x00\\x00\\xfcO\\xfe\\xee\\x1d&Q\\xc0\\xd7\\x9eY\\x12\\xa0\\x14F@\\x8e\\xaf=\\xb3$&Q\\xc0\\xc9 w\\x11\\xa6\\x14F@\\x99CR\\x0b%&Q\\xc0u\\x92\\xad.\\xa7\\x14F@\\xbc\\xe5\\xea\\xc7&&Q\\xc0r\\xc2\\x84\\xd1\\xac\\x14F@\\xb0k{\\xbb%&Q\\xc0\\xab$\\xb2\\x0f\\xb2\\x14F@S\\xff \\x92!&Q\\xc0\\xb9\\\'\\x0f\\x0b\\xb5\\x14F@\\xc7\\\\\\x19T\\x1b&Q\\xc0\\xab$\\xb2\\x0f\\xb2\\x14F@\\x9a&l?\\x19&Q\\xc0\\xc9\\xa5\\xf1\\x0b\\xaf\\x14F@:R}\\xe7\\x17&Q\\xc0h\\x18>"\\xa6\\x14F@\\x89\\xef\\xc4\\xac\\x17&Q\\xc0W\\xe1\\x96\\x8f\\xa4\\x14F@\\xb6%r\\xc1\\x19&Q\\xc0\\xd5\\x9eY\\x12\\xa0\\x14F@\\xfcO\\xfe\\xee\\x1d&Q\\xc0\\xd7\\x9eY\\x12\\xa0\\x14F@\')'}, {'name': 'Atlantic', 'coastline_geom': 'bytearray(b\'\\x01\\x02\\x00\\x00\\x00.\\x00\\x00\\x00\\xcdx[\\xe9\\xb5\\x0fQ\\xc0\\x84n\\xf6\\x07\\xca\\x15F@p\\t\\xc0?\\xa5\\x0fQ\\xc0\\xd8,\\x97\\x8d\\xce\\x15F@\\xcbr\\xd9\\xe8\\x9c\\x0fQ\\xc09\\xee\\x94\\x0e\\xd6\\x15F@\\x86\\xfa]\\xd8\\x9a\\x0fQ\\xc0)p\\xb2\\r\\xdc\\x15F@\\xef\\xdd\\xe6\\x8d\\x93\\x0fQ\\xc0\\x0ct\\xed\\x0b\\xe8\\x15F@\\x1d\\xc0"\\xbf~\\x0fQ\\xc0>6\\xc9\\x8f\\xf8\\x15F@\\xdfR\\xce\\x17{\\x0fQ\\xc0\\xaeu\\xa9\\x11\\xfa\\x15F@R\\xb0\\xc6\\xd9t\\x0fQ\\xc0i\\x1a\\x14\\xcd\\x03\\x16F@\\xa3Q\\x81\\x93m\\x0fQ\\xc0\\x06\\xc3\\xb9\\x86\\x19\\x16F@\\xa9(^em\\x0fQ\\xc0\\\'\\x99\\x9c\\xda\\x19\\x16F@\\xf4\\xf2;Mf\\x0fQ\\xc0\\xc7E\\xb5\\x88(\\x16F@\\xc7\\xbc\\x8e8d\\x0fQ\\xc0\\xb8\\xc7\\xd2\\x87.\\x16F@4]Ot]\\x0fQ\\xc0\\xe1\\xab\\x1d\\xc59\\x16F@\\xde\\xad,\\xd1Y\\x0fQ\\xc0TpxAD\\x16F@\\xc5k^\\xd5Y\\x0fQ\\xc0\\xde\\x15\\xc1\\xffV\\x16F@\\xf4\\xa1\\x0b\\xea[\\x0fQ\\xc0\\xeax\\xcc@e\\x16F@\\x10Vc\\tk\\x0fQ\\xc0^\\xcc\\x96\\xac\\x8a\\x16F@\\xa1\\xb5\\xa2\\xcdq\\x0fQ\\xc0\\xe8\\xecdp\\x94\\x16F@\\x95>tA}\\x0fQ\\xc04R\\xef\\xa9\\x9c\\x16F@\\x96A\\xb5\\xc1\\x89\\x0fQ\\xc0b\\xd6\\x8b\\xa1\\x9c\\x16F@r\\xd6\\xa7\\x1c\\x93\\x0fQ\\xc0O\\xd3.\\xa6\\x99\\x16F@U\\xdd#\\x9b\\xab\\x0fQ\\xc0\\x01\\x9a\\x08\\x1b\\x9e\\x16F@72\\x8f\\xfc\\xc1\\x0fQ\\xc0 \\x1bH\\x17\\x9b\\x16F@\\xf2\\nDO\\xca\\x0fQ\\xc0>\\x9c\\x87\\x13\\x98\\x16F@ek}\\x91\\xd0\\x0fQ\\xc0\\xf8\\xbbw\\xd4\\x98\\x16F@\\r\\x10\\xcc\\xd1\\xe3\\x0fQ\\xc0~\\x9e\\x06\\x0c\\x92\\x16F@\\xa0o\\x0b\\x96\\xea\\x0fQ\\xc0\\xedXl\\x93\\x8a\\x16F@\\xfd\\xdbe\\xbf\\xee\\x0fQ\\xc0\\xf3\\xf8\\xbdM\\x7f\\x16F@\\x89N\\x96Z\\xef\\x0fQ\\xc0\\x1a\\xd3\\x13\\x96x\\x16F@\\x08pz\\x17\\xef\\x0fQ\\xc0\\xffl\\xabYg\\x16F@\\xe6\\xe7\\x86\\xa6\\xec\\x0fQ\\xc0\\x8f\\xa8P\\xdd\\\\\\x16F@\\xc93/\\x87\\xdd\\x0fQ\\xc0\\xf3\\xff\\xaa#G\\x16F@\\xc93/\\x87\\xdd\\x0fQ\\xc0I^\\x9dc@\\x16F@w^*6\\xe6\\x0fQ\\xc0\\xa8}:\\x1e3\\x16F@\\x89\\xc9\\x1b`\\xe6\\x0fQ\\xc0\\xf8\\x1a\\x82\\xe32\\x16F@\\xb2B\\x91\\xee\\xe7\\x0fQ\\xc0.\\xf84\\\'/\\x16F@\\xac\\x85Yh\\xe7\\x0fQ\\xc0L\\xf4\\xf9(#\\x16F@g[\\xcd:\\xe3\\x0fQ\\xc0k\\xf0\\xbe*\\x17\\x16F@\\xa1\\x08\\xa9\\xdb\\xd9\\x0fQ\\xc0Xh\\xe74\\x0b\\x16F@\\x0c\\xe9\\xf0\\x10\\xc6\\x0fQ\\xc0\\xafA_z\\xfb\\x15F@\\xe8)r\\x88\\xb8\\x0fQ\\xc0\\x12\\x99\\xb9\\xc0\\xe5\\x15F@\\x06)x\\n\\xb9\\x0fQ\\xc0I\\xf1\\xf1\\t\\xd9\\x15F@^\\xd8\\x9a\\xad\\xbc\\x0fQ\\xc0\\xe6/\\xf4\\x88\\xd1\\x15F@^\\xd8\\x9a\\xad\\xbc\\x0fQ\\xc0\\x07\\xb13\\x85\\xce\\x15F@\\x01l@\\x84\\xb8\\x0fQ\\xc0\\xcdN\\x06G\\xc9\\x15F@\\xcdx[\\xe9\\xb5\\x0fQ\\xc0\\x84n\\xf6\\x07\\xca\\x15F@\')'}, {'name': 'Atlantic', 'coastline_geom': 'bytearray(b"\\x01\\x02\\x00\\x00\\x00\\x08\\x00\\x00\\x00[\\x1d\\x00qWQT\\xc0\\x89\\x92W\\xe7\\x18T?@\\x07\\\'\\xa2_[QT\\xc0\\x12\\x98N\\xeb6T?@s_\\xcelWQT\\xc0&TpxAT?@\\x1eL\\x8a\\x8fOQT\\xc0\\xb7\\x99\\n\\xf1HT?@\\x86\\x934\\x7fLQT\\xc0\\xd5\\x95\\xcf\\xf2<T?@\\xe7\\xe9\\\\QJQT\\xc0k\\x96\\x92\\xe5$T?@\\x1eL\\x8a\\x8fOQT\\xc0k\\x11\\x18\\xeb\\x1bT?@[\\x1d\\x00qWQT\\xc0\\x89\\x92W\\xe7\\x18T?@")'}, {'name': 'Atlantic', 'coastline_geom': 'bytearray(b\'\\x01\\x02\\x00\\x00\\x00^\\x00\\x00\\x00\\x88\\xd8`\\xe1$CP\\xc0r\\xdfj\\x9d\\xb8h2@c\\xe8\\xd8A%CP\\xc0`\\xfdfb\\xbah2@\\x0et\\xb4\\xaa%CP\\xc0\\xe8\\xdb\\x82\\xa5\\xbah2@\\x87\\x8aq\\xfe&CP\\xc0$\\xcb\\x10\\xc7\\xbah2@\\x1a\\xba\\xd9\\x1f(CP\\xc0#\\xcb\\x10\\xc7\\xbah2@\\x9e\\x98\\xf5b(CP\\xc0\\x1fvmo\\xb7h2@\\xf6\\xc9Q\\x80(CP\\xc0\\x1a\\xfc\\xfdb\\xb6h2@\\xa2;\\x88\\x9d)CP\\xc0|\\xc1n\\xd8\\xb6h2@\\x1f)"\\xc3*CP\\xc0\\xd7\\xa4\\xdb\\x12\\xb9h2@\\xef\\x8a\\xe0\\x7f+CP\\xc0\\xc4\\xc2\\xd7\\xd7\\xbah2@\\x89\\xab\\xca\\xbe+CP\\xc0\\xf8z\\xbef\\xb9h2@\\x89\\xab\\xca\\xbe+CP\\xc0\\xc9*l\\x06\\xb8h2@\\x89\\xab\\xca\\xbe+CP\\xc0\\xfc\\xe2R\\x95\\xb6h2@\\x89\\x91%s,CP\\xc0\\x98\\x1d\\xe2\\x1f\\xb6h2@\\xfb\\xea\\xaa@-CP\\xc0\\xa1\\xff\\xe5Z\\xb4h2@\\xc92\\xc4\\xb1.CP\\xc0\\xfb7\\xf6\\xec\\xb9h2@\\xb7\\xad-</CP\\xc0\\x02%\\x05\\x16\\xc0h2@\\xb2\\xbc\\xab\\x1e0CP\\xc0\\xeb\\xb5\\xa0\\xf7\\xc6h2@\\x85\\xdb\\xa1a1CP\\xc0\\xb3pY\\x85\\xcdh2@z\\xf9\\x9d&3CP\\xc0|\\xfb:p\\xceh2@\\xc5b\\x9bT4CP\\xc0\\x8b\\x9av1\\xcdh2@\\xf0\\xf5\\xb5.5CP\\xc0\\x15\\x9e^)\\xcbh2@\\x84?\\xc3\\x9b5CP\\xc0GVE\\xb8\\xc9h2@I\\rm\\x006CP\\xc0\\x1a\\x06\\xf3W\\xc8h2@f\\x0cs\\x826CP\\xc0\\x87\\xf0/\\x82\\xc6h2@\\x07\\x1e\\xdf\\xde5CP\\xc0d\\x82\\xe1\\\\\\xc3h2@k\\xfd\\xf4\\x9f5CP\\xc0\\x9d\\xb47\\xf8\\xc2h2@\\x98\\xde\\xfe\\\\4CP\\xc052\\x8f\\xfc\\xc1h2@\\xa9}:\\x1e3CP\\xc0\\xce\\xaf\\xe6\\x00\\xc1h2@\\x04\\xfd\\x85\\x1e1CP\\xc0\\x1eQ\\xa1\\xba\\xb9h2@\\x8e\\xcc#\\x7f0CP\\xc0Pq\\x1cx\\xb5h2@d9\\t\\xa5/CP\\xc0\\xe1\\x99\\xd0$\\xb1h2@\\x94\\xd7J\\xe8.CP\\xc0\\xb3nJy\\xadh2@\\x8f\\x1a\\x13b.CP\\xc0V\\xce\\xa5\\xb8\\xaah2@\\x8f\\x1a\\x13b.CP\\xc0\\x89\\x86\\x8cG\\xa9h2@\\x8f\\x1a\\x13b.CP\\xc0\\x16G\\xac\\xc5\\xa7h2@\\xa1\\x85\\x04\\x8c.CP\\xc0\\x87\\xee v\\xa6h2@\\xef\\x08\\xa7\\x05/CP\\xc0d[\\x06\\x9c\\xa5h2@\\x9fk_@/CP\\xc0\\xd0j\\x0f{\\xa1h2@\\xe2Z\\xeda/CP\\xc0\\xbeFY\\xbf\\x99h2@M\\xf7:\\xa9/CP\\xc0\\xe3\\x84\\xd0A\\x97h2@X\\x8bO\\x010CP\\xc0\\xc1\\x16\\x82\\x1c\\x94h2@\\xb2\\xbc\\xab\\x1e0CP\\xc0>\\xe3\\xc2\\x81\\x90h2@\\xbdP\\xc0v0CP\\xc0*\\x14\\xb0\\x1d\\x8ch2@(\\xed\\r\\xbe0CP\\xc0D\\xd8\\xb7\\x93\\x88h2@\\x93\\x89[\\x051CP\\xc0`\\x9c\\xbf\\t\\x85h2@E\\xec\\x13@1CP\\xc0\\xbe\\x0c\\x8d\\\'\\x82h2@\\xe7\\xe3\\xdaP1CP\\xc0\\xad\\xd5\\xe5\\x94\\x80h2@\\x92o\\xb6\\xb91CP\\xc0\\xb4\\xfa\\xb1I~h2@!\\xfc\\x8b\\xa01CP\\xc0\\xe3]\\xf5\\x80yh2@\\x15N\\xd2\\xfc1CP\\xc0\\xc4\\xac\\xde\\xe1vh2@\\xd9\\x1b|a2CP\\xc0)\\x1d\\xac\\xffsh2@\\xeb\\x86m\\x8b2CP\\xc0\\xa6\\xa6$\\xebph2@\\xce\\x87g\\t2CP\\xc0cb\\xf3qmh2@\\x03\\xe3\\xe0\\xd21CP\\xc0\\x15a\\x8arih2@4g}\\xca1CP\\xc0\\\'hZbeh2@\\xd4^D\\xdb1CP\\xc0\\x86\\xd8\\\'\\x80bh2@\\x15N\\xd2\\xfc1CP\\xc0\\x8b@\\xbc\\xae_h2@\\xdf\\xf2X32CP\\xc0\\x12\\x87l ]h2@\\xd9\\x1b|a2CP\\xc0\\xe4[\\xe6tYh2@\\xd9\\x1b|a2CP\\xc0\\x11W\\x95}Wh2@\\x99,\\xee?2CP\\xc0\\x9f\\x17\\xb5\\xfbUh2@^.\\xe2;1CP\\xc07\\xfd\\xa0.Rh2@\\xf2\\xab9@0CP\\xc0xT\\xc3~Oh2@\\x8d\\xe6\\xc8\\xca/CP\\xc0\\xaf\\xc9\\xe1\\x93Nh2@\\x88)\\x91D/CP\\xc0b`\\xe4eMh2@\\xa7\\\\\\xe1].CP\\xc0\\xd3\\x07Y\\x16Lh2@\\x12-y<-CP\\xc0\\xa5\\xb7\\x06\\xb6Jh2@\\xdc\\xeb\\xa4\\xbe,CP\\xc0\\x04\\x03\\x08\\x1fJh2@\\xdd9\\x94\\xa1*CP\\xc0\\xa6Or\\x87Mh2@\\xef\\xbe*\\x17*CP\\xc0ej\\xd9Z_h2@\\xbc\\xb1\\xa00(CP\\xc0>\\xf4\\xa4Ljh2@\\xe6x\\x05\\xa2\\\'CP\\xc0\\xf4w\\xb6Goh2@\\xe6x\\x05\\xa2\\\'CP\\xc0*\\x1d\\xac\\xffsh2@\\ti\\x8dA\\\'CP\\xc0M\\xb0\\xc6\\xd9th2@\\xf1@d\\x91&CP\\xc0\\x8f\\xe2\\x1cuth2@.s\\xba,&CP\\xc0\\x17;\\xa8\\xc4uh2@\\x98)\\xad\\xbf%CP\\xc0\\xc9\\x01\\x829zh2@\\x03\\xc6\\xfa\\x06&CP\\xc0$\\xe5\\xees|h2@W zR&CP\\xc0\\xe8\\x07<0\\x80h2@\\xabz\\xf9\\x9d&CP\\xc0\\xd0C4\\xba\\x83h2@\\xabz\\xf9\\x9d&CP\\xc0\\xf3\\xb1\\x82\\xdf\\x86h2@t9% &CP\\xc0\\x8a\\x84};\\x89h2@\\xed\\x9d\\xd1V%CP\\xc0\\xe4g\\xeau\\x8bh2@WT\\xc4\\xe9$CP\\xc0\\x88\\xb4T\\xde\\x8eh2@\\xf2\\x8eSt$CP\\xc0E]2\\x8e\\x91h2@\\xe6\\xe0\\x99\\xd0$CP\\xc0q\\xdd[\\x91\\x98h2@\\xda2\\xe0,%CP\\xc0\\x8d&\\xde\\x01\\x9eh2@\\xed\\x9d\\xd1V%CP\\xc0\\\\n\\xf7r\\x9fh2@\\xa6\\xf1\\x0b\\xaf$CP\\xc0GB[\\xce\\xa5h2@\\xac\\xc8\\xe8\\x80$CP\\xc0\\xf8-\\x01\\xf8\\xa7h2@\\xec\\xb7v\\xa2$CP\\xc0L\\xec\\xa1}\\xach2@F\\xe9\\xd2\\xbf$CP\\xc0L\\xd9\\xb0\\xa6\\xb2h2@\\x88\\xd8`\\xe1$CP\\xc0r\\xdfj\\x9d\\xb8h2@\')'}]
--------------------------------------------------
Table full name: NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.CSA
Column name: internal_point_lon Type: FLOAT
Column name: internal_point_geom Type: BINARY
Column name: geo_id Type: TEXT
Column name: internal_point_lat Type: FLOAT
Column name: lsad_name Type: TEXT
Column name: area_water_meters Type: FLOAT
Column name: area_land_meters Type: FLOAT
Column name: msa_lsad_code Type: TEXT
Column name: mtfcc_feature_class_code Type: TEXT
Column name: name Type: TEXT
Column name: csa_geom Type: BINARY
Column name: csa_code Type: TEXT
Sample rows:
[{'geo_id': '108', 'csa_code': '108', 'name': 'Amarillo-Pampa-Borger, TX', 'lsad_name': 'Amarillo-Pampa-Borger, TX CSA', 'msa_lsad_code': 'M0', 'mtfcc_feature_class_code': 'G3100', 'area_land_meters': 20428899559.0, 'area_water_meters': 115547029.0, 'internal_point_lon': -101.5947616, 'internal_point_lat': 35.3963177, 'internal_point_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\xaa:\\xf5\\x92\\x10fY\\xc0\\xb9)\\xd4\\x89\\xba\\xb2A@')", 'csa_geom': 'bytearray(b\'\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\xfa\\x07\\x00\\x00\\xd8\\xfb\\x8dv\\xdcgY\\xc0\\x82\\xeb\\x8a\\x19\\xe1\\xcfA@6\\x04\\xc7e\\xdcgY\\xc0\\xdc\\xe9\\xce\\x13\\xcf\\xcfA@f\\x88c]\\xdcgY\\xc0\\x9e\\xfe\\xb3\\xe6\\xc7\\xcfA@v\\xca1Y\\xdcgY\\xc0\\x9b\\xa9\\x10\\x8f\\xc4\\xcfA@\\x8f\\x0c\\x00U\\xdcgY\\xc0\\xde4}v\\xc0\\xcfA@\\xb2\\xfc\\x87\\xf4\\xdbgY\\xc0\\x15\\x8e \\x95b\\xcfA@\\x03\\xbb(z\\xe0gY\\xc0C\\x12\\xbd\\x8cb\\xcfA@7\\xae\\r\\x15\\xe3gY\\xc0C\\x12\\xbd\\x8cb\\xcfA@\\xc1X\\xdf\\xc0\\xe4gY\\xc0C\\x12\\xbd\\x8cb\\xcfA@\\xfb"\\xa1-\\xe7gY\\xc0C\\x12\\xbd\\x8cb\\xcfA@\\xe3<*\\xfe\\xefgY\\xc0\\x15\\x8e \\x95b\\xcfA@\\x01\\x90\\xa1c\\x07hY\\xc0\\xb8!\\xc6k^\\xcfA@\\x8bq\\xfe&\\x14hY\\xc0\\xb8!\\xc6k^\\xcfA@\\\'\\x1eP6\\xe5hY\\xc0\\x88\\x9d)t^\\xcfA@t\\xbb%9`iY\\xc0(\\x95\\xf0\\x84^\\xcfA@q\\xd1W\\x90fiY\\xc0(\\x95\\xf0\\x84^\\xcfA@Q6sHjiY\\xc0)\\x95\\xf0\\x84^\\xcfA@\\xe7\\xc5\\x89\\xafviY\\xc0\\xf8\\x10T\\x8d^\\xcfA@(F\\x96\\xcc\\xb1iY\\xc0\\xb8!\\xc6k^\\xcfA@Ve\\xdf\\x15\\xc1iY\\xc0\\xb8!\\xc6k^\\xcfA@\\xff\\x94*Q\\xf6iY\\xc0\\x16*\\xffZ^\\xcfA@\\xcb2\\xc4\\xb1.jY\\xc0u28J^\\xcfA@\\xbb\\x0c\\xff\\xe9\\x06kY\\xc0\\xf2S\\x1c\\x07^\\xcfA@\\xc5\\x90\\x9cL\\xdckY\\xc0pu\\x00\\xc4]\\xcfA@\\x8cR\\xd0\\xed%lY\\xc0\\n\\xe4\\xd9\\xe5[\\xcfA@si\\xfc\\xc2+lY\\xc0;hv\\xdd[\\xcfA@\\x99\\xa0\\x86oalY\\xc0)\\xfd\\x84\\xb3[\\xcfA@cb\\xf3qmlY\\xc0Z\\x81!\\xab[\\xcfA@Hu\\xc8\\xcdplY\\xc0Z\\x81!\\xab[\\xcfA@\\xa4\\xabtw\\x9dlY\\xc0G\\x160\\x81[\\xcfA@\\xb9!T\\xa9\\xd9lY\\xc0e/\\xdbN[\\xcfA@#\\xf7tu\\xc7mY\\xc0\\xd0\\xe5\\xcd\\xe1Z\\xcfA@\\xf3\\xc9\\x8a\\xe1\\xeamY\\xc0\\x00jj\\xd9Z\\xcfA@\\xdbR\\x07y=nY\\xc0\\xbez\\xdc\\xb7Z\\xcfA@\\xd7t=\\xd1unY\\xc0\\x1e\\x83\\x15\\xa7Z\\xcfA@\\xc1\\xc96p\\x07pY\\xc0\\x9b<e5]\\xcfA@\\xdd\\x9at["pY\\xc0)\\xc9:\\x1c]\\xcfA@6_\\xb3\\\\6pY\\xc0XM\\xd7\\x13]\\xcfA@\\x8aD/\\xa3XpY\\xc0\\xb7U\\x10\\x03]\\xcfA@0\\xfcn\\xbaepY\\xc0\\xe7\\xd9\\xac\\xfa\\\\\\xcfA@\\x1asePmpY\\xc0\\x18^I\\xf2\\\\\\xcfA@\\x04\\xd0\\xb6\\x9aupY\\xc0\\x18^I\\xf2\\\\\\xcfA@)H\\xfa\\xb4\\x8apY\\xc0F\\xe2\\xe5\\xe9\\\\\\xcfA@ \\xb5\\x89\\x93\\xfbpY\\xc0\\x95\\x7f-\\xaf\\\\\\xcfA@\\xe0\\xa8\\xa3\\xe3jqY\\xc0\\xb3\\x98\\xd8|\\\\\\xcfA@}\\xb9\\xdd\\xcb}qY\\xc0\\xe1\\x1cut\\\\\\xcfA@;!\\x02\\x0e\\xa1qY\\xc0B%\\xaec\\\\\\xcfA@\\xa3*\\xa6\\xd2OrY\\xc0\\x1dO\\xcb\\x0f\\\\\\xcfA@\\xd1\\x05\\xf5-srY\\xc0|W\\x04\\xff[\\xcfA@%~SX\\xa9rY\\xc0\\x0c\\xe4\\xd9\\xe5[\\xcfA@"\\xc4\\x95\\xb3wtY\\xc0\\x12\\xd5[\\x03[\\xcfA@e\\xce\\xc13\\xa1tY\\xc0q\\xdd\\x94\\xf2Z\\xcfA@d\\xf0\\xbe*\\x17uY\\xc0\\x8f\\xf6?\\xc0Z\\xcfA@\\x17g\\x0cs\\x82uY\\xc0\\xae\\x0f\\xeb\\x8dZ\\xcfA@\\x82\\x95C\\x8blvY\\xc0\\x18\\xc6\\xdd Z\\xcfA@\\xd0i\\x16hwwY\\xc0\\xe3\\x84\\t\\xa3Y\\xcfA@Z\\xc1\\xfd\\x80\\x07xY\\xc0\\xc47\\x14>[\\xcfA@z\\xe9\\xb4n\\x83xY\\xc05\\xab>W[\\xcfA@j\\x8e::\\xaexY\\xc0\\xd6\\xa2\\x05h[\\xcfA@\\xea~\\xdc~\\xf9xY\\xc0G\\x160\\x81[\\xcfA@\\xc6\\x18X\\xc7\\xf1yY\\xc0l\\xec\\x12\\xd5[\\xcfA@\\xba\\xa9\\x81\\xe6szY\\xc0|W\\x04\\xff[\\xcfA@;9Cq\\xc7zY\\xc0\\xbfF\\x92 \\\\\\xcfA@\\\\\\xaf\\xe9AA{Y\\xc0\\xd1\\xb1\\x83J\\\\\\xcfA@\\x02PS\\xcb\\xd6{Y\\xc0\\x82\\x14<\\x85\\\\\\xcfA@(\\x86r\\xa2]}Y\\xc0\\xee\\x96\\xe4\\x80]\\xcfA@\\xe1\\xf6\\x92\\xc6h}Y\\xc0\\xbd\\x12H\\x89]\\xcfA@n\\x01/3l}Y\\xc0\\xbc\\x12H\\x89]\\xcfA@P\\xce\\xde\\x19m}Y\\xc0\\xbd\\x12H\\x89]\\xcfA@\\xf6Cl\\xb0p}Y\\xc0\\x8d\\x8e\\xab\\x91]\\xcfA@w\\xdf\\xbfyq}Y\\xc0\\x8d\\x8e\\xab\\x91]\\xcfA@\\x16s\\x10t\\xb4}Y\\xc0qu\\x00\\xc4]\\xcfA@\\xf3\\xb4\\x8a\\xfe\\xd0}Y\\xc0\\x0fm\\xc7\\xd4]\\xcfA@<8\\xd8\\x9b\\x18~Y\\xc0\\xf2S\\x1c\\x07^\\xcfA@\\xc4\\n\\xb7|$~Y\\xc0\\xc4\\xcf\\x7f\\x0f^\\xcfA@\\xab\\r\\xdc\\x81:~Y\\xc0c\\xc7F ^\\xcfA@\\x08 \\xb5\\x89\\x93~Y\\xc0\\xe6\\xa5bc^\\xcfA@\\xab\\x9e\\xcc?\\xfa~Y\\xc09\\x00\\xe2\\xae^\\xcfA@cFx{\\x10\\x7fY\\xc0\\xda\\xf7\\xa8\\xbf^\\xcfA@\\x85\\xb3[\\xcbd\\x7fY\\xc0\\x8fZa\\xfa^\\xcfA@rs\\xb8V{\\x7fY\\xc0-R(\\x0b_\\xcfA@s0\\x9b\\x00\\xc3\\x7fY\\xc0\\x119}=_\\xcfA@\\x1a6\\xca\\xfa\\xcd\\x7fY\\xc0\\xe1\\xb4\\xe0E_\\xcfA@*\\xc7dq\\xff\\x7fY\\xc0\\xf4\\x1f\\xd2o_\\xcfA@\\xe3v\\xf6\\x95\\x07\\x80Y\\xc0\\x97\\xa0\\x86oa\\xcfA@;"m\\xe3O\\x80Y\\xc0\\x97\\xa0\\x86oa\\xcfA@\\n5\\xd1\\xe7\\xa3\\x80Y\\xc08\\x98M\\x80a\\xcfA@\\x91\\x0e\\x0fa\\xfc\\x80Y\\xc0\\xdb\\x8f\\x14\\x91a\\xcfA@\\x1b\\xc3*\\xde\\xc8\\x81Y\\xc0\\x1a\\x7f\\xa2\\xb2a\\xcfA@\\xc6u\\x1ai\\xa9\\x82Y\\xc0]n0\\xd4a\\xcfA@\\x80\\xaa\\x98J?\\x83Y\\xc0\\xce\\xe1Z\\xeda\\xcfA@\\xcbh\\xe4\\xf3\\x8a\\x83Y\\xc0m\\xd9!\\xfea\\xcfA@\\xceY-\\xb0\\xc7\\x83Y\\xc0\\x0e\\xd1\\xe8\\x0eb\\xcfA@\\xf7Cl\\xb0p\\x84Y\\xc0Q\\xc0v0b\\xcfA@l\\x96\\xcbF\\xe7\\x84Y\\xc0\\xc13\\xa1Ib\\xcfA@}\\xb2b\\xb8:\\x85Y\\xc0a+hZb\\xcfA@\\xc7h\\x1dUM\\x85Y\\xc03\\xa7\\xcbbb\\xcfA@\\x12\\xde\\x1e\\x84\\x80\\x86Y\\xc0\\x15\\x8e \\x95b\\xcfA@\\x89|\\x97R\\x97\\x86Y\\xc0\\xe4\\t\\x84\\x9db\\xcfA@|\\xba\\xbac\\xb1\\x86Y\\xc0\\xb4\\x85\\xe7\\xa5b\\xcfA@\\xee\\xec+\\x0f\\xd2\\x86Y\\xc0\\x7fD\\x13(b\\xcfA@\\xa7\\x9bR^+\\x87Y\\xc0 <\\xda8b\\xcfA@\\x8bn\\xbd\\xa6\\x07\\x88Y\\xc0\\x04\\xbf\\r1^\\xcfA@\\xbc]/M\\x11\\x88Y\\xc0\\x05\\xbf\\r1^\\xcfA@0\\xbd\\xfd\\xb9h\\x88Y\\xc0\\x16*\\xffZ^\\xcfA@IQ\\xf5+\\x9d\\x88Y\\xc0\\x88\\x9d)t^\\xcfA@\\xab\\xcej\\x81=\\x89Y\\xc0\\xacs\\x0c\\xc8^\\xcfA@\\x99\\xf9\\x9c\\xbb]\\x89Y\\xc0Kk\\xd3\\xd8^\\xcfA@\\xaa\\xf4\\x13\\xcen\\x89Y\\xc0.\\x86r\\xa2]\\xcfA@\\x98OV\\x0cW\\x8aY\\xc0\\x0c\\xb0\\x8fN]\\xcfA@Y32\\xc8]\\x8aY\\xc0\\x0c\\xb0\\x8fN]\\xcfA@\\xecV]\\x87j\\x8aY\\xc0\\x0b\\xb0\\x8fN]\\xcfA@\\x87\\x91\\xec\\x11j\\x8aY\\xc0\\x90/\\xa1\\x82\\xc3\\xcfA@\\x05\\xc2N\\xb1j\\x8aY\\xc0p\\xb4\\xe3\\x86\\xdf\\xcfA@\\xb6\\xe1>rk\\x8aY\\xc0\\xceG\\x19q\\x01\\xd0A@\\xb6\\xe1>rk\\x8aY\\xc0\\x01D\\xc1\\x8c)\\xd0A@\\x9e\\x9fpvk\\x8aY\\xc0e\\xa7\\x1f\\xd4E\\xd0A@\\x9e\\x9fpvk\\x8aY\\xc0\\xec_YiR\\xd0A@u<f\\xa02\\x8bY\\xc0\\x0b\\xadN\\xceP\\xd0A@\\xfd\\x002t\\xec\\x8bY\\xc0\\xee\\xc7\\xed\\x97O\\xd0A@>+\\xf7\\x02\\xb3\\x8cY\\xc0aobHN\\xd0A@>%\\xe7\\xc4\\x1e\\x8dY\\xc0y\\xcb\\xd5\\x8fM\\xd0A@ E\\x9d\\xb9\\x87\\x8dY\\xc0_\\xa3\\xac\\xdfL\\xd0A@~\\x90e\\xc1\\xc4\\x8dY\\xc0\\x9c\\xd5\\x02{L\\xd0A@\\x9a\\x81X6s\\x8eY\\xc0\\xf0c\\xcc]K\\xd0A@\\xfa\\xf6<\\x7f\\xda\\x8eY\\xc0\\xa9\\xb7\\x06\\xb6J\\xd0A@,f\\x84\\xb7\\x07\\x90Y\\xc0\\x89`\\x1c\\\\:\\xd0A@"Z\\xb9\\x17\\x98\\x90Y\\xc0\\xcb\\x83\\xf4\\x149\\xd0A@\\x8d\\xa0\\xbf\\xd0#\\x91Y\\xc0\\xdc"0\\xd67\\xd0A@O\\xefp;4\\x91Y\\xc0\\xca\\xb7>\\xac7\\xd0A@\\x18D\\xa4\\xa6]\\x91Y\\xc0\\x05\\xea\\x94G7\\xd0A@\\xa7\\x9a\\xe7\\x88|\\x91Y\\xc0\\xb3\\x8f\\x15\\xfc6\\xd0A@\\x9aIbI\\xb9\\x91Y\\xc0\\xddVzm6\\xd0A@\\xe2_\\x92\\xca\\x14\\x92Y\\xc0\\x84?\\xc3\\x9b5\\xd0A@$Kt\\x96Y\\x92Y\\xc0\\r\\x0fa\\xfc4\\xd0A@\\x8f\\xe2\\x1cut\\x92Y\\xc0\\x8a0E\\xb94\\xd0A@\\x10\\xea"\\x85\\xb2\\x92Y\\xc0\\xb4\\xf7\\xa9*4\\xd0A@\\xa5\\xa9,\\n\\xbb\\x92Y\\xc0C\\x84\\x7f\\x114\\xd0A@\\x012t\\xec\\xa0\\x93Y\\xc0\\xa4\\xf4L/1\\xd0A@\\x11\\x0c\\xae\\xb9\\xa3\\x93Y\\xc0\\xd5x\\xe9&1\\xd0A@\\xfe\\x86\\x17D\\xa4\\x93Y\\xc0\\xd6x\\xe9&1\\xd0A@\\xde\\xb3<\\x0f\\xee\\x93Y\\xc0\\\\\\x14=\\xf01\\xd0A@1\\n\\x82\\xc7\\xb7\\x95Y\\xc00,\\x7f\\xbe-\\xd0A@\\x1bXU/\\xbf\\x95Y\\xc0\\xbf\\xb8T\\xa5-\\xd0A@/6\\xad\\x14\\x02\\x96Y\\xc0x\\x0c\\x8f\\xfd,\\xd0A@{\\x85\\x05\\xf7\\x03\\x96Y\\xc0\\xa6\\x90+\\xf5,\\xd0A@\\xe7!S>\\x04\\x96Y\\xc0\\xa5\\x90+\\xf5,\\xd0A@_\\x0bzo\\x0c\\x96Y\\xc0\\x07\\x99d\\xe4,\\xd0A@\\xc3\\x89v\\x15R\\x96Y\\xc0\\x90h\\x02E,\\xd0A@\\x88\\xda6\\x8c\\x82\\x96Y\\xc0*\\xa3\\x91\\xcf+\\xd0A@\\xa3\\x07>\\x06+\\x97Y\\xc0I\\xbc<\\x9d+\\xd0A@\\x9ef\\x0f\\xb4\\x02\\x98Y\\xc0U\\xd2\\x8ao(\\xd0A@\\xc5]K\\xc8\\x07\\x98Y\\xc07\\xed)9\\\'\\xd0A@\\xf55Y\\xa3\\x1e\\x98Y\\xc0\\xa3\\xa3\\x1c\\xcc&\\xd0A@"!XU/\\x98Y\\xc0u\\x1f\\x80\\xd4&\\xd0A@-\\x9d\\x9d\\x0c\\x8e\\x99Y\\xc0\\x805\\xce\\xa6#\\xd0A@\\xbb\\xd3\\x9d\\\'\\x9e\\x99Y\\xc0@F@\\x85#\\xd0A@3\\xaeFv\\xa5\\x99Y\\xc0\\x9fNyt#\\xd0A@\\xc1\\xe5\\xb1fd\\x9aY\\xc0N(D\\xc0!\\xd0A@\\xd7\\x18tB\\xe8\\x9aY\\xc0\\x00\\xbfF\\x92 \\xd0A@e[\\x94\\xd9 \\x9cY\\xc0\\x01\\\'\\xdb\\xc0\\x1d\\xd0A@\\tX\\xabvM\\x9cY\\xc0=Y1\\\\\\x1d\\xd0A@<\\xa5\\x83\\xf5\\x7f\\x9cY\\xc0\\xaa\\x0f$\\xef\\x1c\\xd0A@\\x90\\x15\\xfc6\\xc4\\x9cY\\xc0\\x02[%X\\x1c\\xd0A@%\\xcf\\xf5}8\\x9dY\\xc0\\xc7\\\\\\x19T\\x1b\\xd0A@{\\xa9f\\xd6R\\x9dY\\xc0\\x16\\xfa`\\x19\\x1b\\xd0A@\\x98\\xb2\\x9a\\xae\\\'\\x9fY\\xc0\\xb9\\x8d\\x06\\xf0\\x16\\xd0A@N\\x13D\\xdd\\x07\\xa0Y\\xc0`vO\\x1e\\x16\\xd0A@\\xe0LL\\x17b\\xa0Y\\xc0kXSY\\x14\\xd0A@\\x88\\xda6\\x8c\\x82\\xa1Y\\xc0@\\xa4\\xdf\\xbe\\x0e\\xd0A@:\\x9c\\x87\\x13\\x98\\xa1Y\\xc0\\xa9Z\\xd2Q\\x0e\\xd0A@$bJ$\\xd1\\xa2Y\\xc0He\\x8a9\\x08\\xd0A@\\x9d\\x84\\xd2\\x17B\\xa3Y\\xc0\\xc0\\xfd\\x80\\x07\\x06\\xd0A@\\xf1\\xfb\\xc5l\\xc9\\xa3Y\\xc0\\xcfG\\x19q\\x01\\xd0A@G ^\\xd7/\\xa4Y\\xc0\\xceG\\x19q\\x01\\xd0A@\\xee^\\xee\\x93\\xa3\\xa4Y\\xc0\\xceG\\x19q\\x01\\xd0A@I\\xae)\\x90\\xd9\\xa4Y\\xc0\\x9f+\\x11\\xa8\\xfe\\xcfA@\\xa1.R(\\x0b\\xa5Y\\xc0\\x1a\\x90\\xbd\\xde\\xfd\\xcfA@M\\xbdn\\x11\\x18\\xa5Y\\xc07\\xa9h\\xac\\xfd\\xcfA@ILP\\xc3\\xb7\\xa5Y\\xc0\\x8ak|&\\xfb\\xcfA@\\x1a\\x02\\x0e\\xa1J\\xa7Y\\xc03$\\xee\\xb1\\xf4\\xcfA@\\x0eM\\xd9\\xe9\\x07\\xa8Y\\xc0\\x1c&\\x1a\\xa4\\xe0\\xcfA@\\x96\\x0ed=\\xb5\\xa8Y\\xc0>\\xfc\\xfc\\xf7\\xe0\\xcfA@\\xd7\\x89\\xcb\\xf1\\n\\xa9Y\\xc0tq\\x1b\\r\\xe0\\xcfA@\\x8ch;\\xa6\\xee\\xa9Y\\xc0?0G\\x8f\\xdf\\xcfA@\\x1b\\x17\\x9c\\xc1\\xdf\\xaaY\\xc09s\\x0f\\t\\xdf\\xcfA@7<K\\x90\\x11\\xabY\\xc0\\xc8\\xff\\xe4\\xef\\xde\\xcfA@=\\xf8\\x17Ac\\xabY\\xc0\\xb6\\x94\\xf3\\xc5\\xde\\xcfA@t\\xa0\\x15\\x18\\xb2\\xabY\\xc0\\xa6)\\x02\\x9c\\xde\\xcfA@\\xc7\\x13A\\x9c\\x87\\xacY\\xc0Bd\\x91&\\xde\\xcfA@\\x9fC\\x19\\xaab\\xadY\\xc0\\xdb\\x9e \\xb1\\xdd\\xcfA@\\x04__\\xebR\\xaeY\\xc0\\xe6\\x18\\x90\\xbd\\xde\\xcfA@\\
--------------------------------------------------
Table full name: NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.NATIONAL_OUTLINE
Column name: aff_geo_id Type: TEXT
Column name: us_outline_geom Type: BINARY
Column name: name Type: TEXT
Column name: geo_id Type: TEXT
Sample rows:
[{'us_outline_geom': 'bytearray(b\'\\x01\\x06\\x00\\x00\\x00"\\x01\\x00\\x00\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x92\\x15\\x00\\x00c\\x9f\\xc7(O\\x04e\\xc0\\xfd}\\xc6\\x85\\x03iP@\\xe6$\\x94\\xbe\\x10\\x04e\\xc0\\x99\\x0c\\xc7\\xf3\\x19hP@\\x0f\\xd0}93\\x03e\\xc0d\\xb1M*\\x1agP@\\xc9z1\\x94\\x13\\x03e\\xc0R\\xb0\\xc6\\xd9tfP@*U\\xa2\\xec-\\x03e\\xc0E\\xf5\\xd6\\xc0VfP@\\x93Y\\x84b+\\x03e\\xc0\\x9b\\x1ah>\\xe7eP@\\x15\\x95\\xd4\\th\\x02e\\xc0\\xb5\\xf8\\x14\\x00\\xe3dP@S\\xd4`\\x1a\\x86\\x01e\\xc0Ec\\xed\\xefldP@JI\\xd6\\xe1\\xe8\\xffd\\xc0\\x7fI*S\\xcccP@c\\x83L2\\xf2\\xfed\\xc0\\x03%\\x05\\x16\\xc0cP@-\\xaf\\\\o\\x1b\\xfdd\\xc0\\xb0\\ti\\x8dAcP@\\xc5\\xe7\\x15O=\\xfbd\\xc0\\x07\\x95\\xb8\\x8eqbP@\\x0e\\x13\\rR\\xf0\\xfad\\xc0%o\\x80\\x99\\xefaP@\\xcf\\xe30\\x98\\xbf\\xf6d\\xc0Z\\x115\\xd1\\xe7_P@\\xdauoE\\xe2\\xf3d\\xc0\\x17\\xeb\\x1b\\x98\\xdc]P@\\x93Z\\xef7\\xda\\xf3d\\xc0\\xfc\\xf9\\xb6`\\xa9]P@/\\x00Tqc\\xf2d\\xc0\\t\\x1a3\\x89z\\\\P@\\x990a4+\\xefd\\xc0\\xb2g\\xcfejZP@\\x8c\\xda\\xfd*\\xc0\\xecd\\xc0\\x7f\\xbb\\xec\\xd7\\x9dYP@\\x97\\x03\\x04st\\xe5d\\xc0.\\x16\\x86\\xc8\\xe9XP@\\xa5\\x18\\xe7oB\\xe3d\\xc0\\xbf\\x9c\\xd9\\xae\\xd0XP@\\xe0\\xc3\\xece\\xdb\\xe0d\\xc0\\xaeI\\xb7%rXP@\\xa1\\xfa\\xce/\\xca\\xdcd\\xc0\\x18\\xe4.\\xc2\\x14WP@\\x9d\\xb8\\x1c\\xaf@\\xdbd\\xc0a\\x89\\x07\\x94MVP@\\xa7\\xd2\\x16\\xd7x\\xd9d\\xc0\\x01/3l\\x94UP@\\x1e\\xb1\\xdd=\\xc0\\xd5d\\xc0\\x16\\xa0m5\\xebTP@\\xd5@\\xf39\\xf7\\xd4d\\xc0\\x92\\xce\\xc0\\xc8\\xcbTP@\\x14\\x97\\xe3\\x15\\x08\\xd4d\\xc0\\x8a\\x8fO\\xc8\\xceTP@v\\x1c?T\\x1a\\xd3d\\xc0KZ\\xf1\\r\\x85UP@\\xc6\\xc8Y\\xd8S\\xd2d\\xc0\\xa6~\\xdeT\\xa4UP@\\x8c\\xfd,\\x96\\xa2\\xd1d\\xc0J\\xb1\\xa3q\\xa8UP@\\xb8\\xcc\\xe9\\xb2\\x98\\xd0d\\xc0\\x90M\\xf2#~UP@\\xe2\\\\\\xc3\\x0c\\x8d\\xcfd\\xc0\\xc5\\x8f1w-UP@f7\\xfa\\x98\\x0f\\xced\\xc0\\xbc\\xe1>rkTP@f\\xc0YJ\\x16\\xccd\\xc0\\xe5\\xf0I\\\'\\x12SP@\\\'\\x8b\\xc2.\\x8a\\xcbd\\xc0\\\'g(\\xeexRP@\\xfd\\x10\\x1b,\\x1c\\xcbd\\xc0\\xd0b)\\x92\\xafQP@\\x92\\x0c\\x00U\\\\\\xccd\\xc0w`\\x00\\xe1CPP@\\xc7\\x87\\xa0jt\\xced\\xc08\\x82T\\x8a\\x1dOP@b\\xdc\\r\\xa25\\xcfd\\xc0H\\x160\\x81[NP@\\xb1\\xfb\\x8e\\xe11\\xcfd\\xc0\\\'\\xa3\\xca0\\xeeMP@\\x8e\\xee\\xe7\\x14\\xe4\\xced\\xc0\\x03\\xab\\xea\\xe5wLP@\\xc8\\x10\\xc7\\xba\\xb8\\xced\\xc0\\xf2&\\xbfE\\\'LP@\\xda\\x95]0\\xb8\\xced\\xc0Sx\\xd0\\xec\\xbaKP@\\x10b.\\xa9\\xda\\xced\\xc0\\x16\\xa5\\x84`UKP@\\x9c\\xfd\\x81r[\\xcfd\\xc0yR&5\\xb4JP@\\xea$[]N\\xd0d\\xc0\\x94\\x9e\\xe9%\\xc6IP@[\\xd5Y-\\xb0\\xd0d\\xc0#LQ.\\x8dIP@\\xc3\\xa2\\xe9\\xecd\\xd3d\\xc0!!\\xca\\x17\\xb4HP@[?\\xfdgM\\xd4d\\xc0\\xc2\\x9c\\xa0M\\x0eHP@\\x00\\xcd\\xe7\\xdcm\\xd4d\\xc0#\\xd26\\xfeDGP@Z\\xbb\\xedBs\\xd5d\\xc0\\xe5\\xed\\x08\\xa7\\x05GP@\\x95\\x0b\\x95\\x7f-\\xd8d\\xc0g\\x9b\\x1b\\xd3\\x13GP@b6\\xc8$#\\xdad\\xc0*n\\xdcb~GP@\\xd3\\x1b\\xb5\\xc2t\\xdad\\xc0\\xf01Xq\\xaaGP@\\xf9Pi\\xc4\\xcc\\xdad\\xc0?\\xc7G\\x8b3HP@\\x95J?\\xe1\\xec\\xdbd\\xc0\\x06z\\xa8m\\xc3HP@\\xae\\xa3q\\xa8_\\xdcd\\xc0D\\xb94~\\xe1HP@\\xdf\\x1eK\\x1f\\xba\\xdcd\\xc0\\x9cN\\xb2\\xd5\\xe5HP@\\xa7\\x96t\\x94\\x03\\xddd\\xc0\\x9ar\\x85w\\xb9HP@i\\x02\\x0c\\xcb\\x1f\\xddd\\xc0C8f\\xd9\\x93HP@\\x18\\xd0\\x0bw.\\xddd\\xc03\\xdc\\x80\\xcf\\x0fHP@\\xb9\\xe6U\\x9dU\\xdcd\\xc0w\\x85>X\\xc6FP@4m\\xc6i\\x88\\xdbd\\xc0_\\x94\\xa0\\xbf\\xd0EP@\\xb0^\\x0c\\xe5D\\xdad\\xc0\\xc1\\xc3\\xb4o\\xeeDP@\\x90\\x16g\\x0cs\\xd7d\\xc0\\xb0\\x19\\xe0\\x82lCP@lF\\xcdWI\\xd6d\\xc0J\\x95({KBP@\\xce\\x1c\\x92Z(\\xd6d\\xc0\\xd8\\x80\\x08q\\xe5AP@F\\x17\\x9bV\\n\\xd6d\\xc0JX\\x1bc\\\'AP@q?\\xa7 ?\\xd6d\\xc0\\x99\\x9dE\\xefT@P@\\x98m\\xa7\\xad\\x91\\xd6d\\xc0T\\xc2\\x13z\\xfd?P@\\xac\\xe7\\xa4\\xf7\\x8d\\xd6d\\xc0k\\\\\\xff\\xae\\xcf?P@\\xcb3\\xf6%\\x1b\\xd6d\\xc08\\x99\\xb8U\\x10?P@\\xf55\\x92\\x04a\\xd4d\\xc0Gu:\\x90\\xf5=P@)\\xae*\\xfb\\xae\\xd3d\\xc0O#-\\x95\\xb7=P@\\x85\\xe9{\\r\\xc1\\xd2d\\xc0C\\x19\\xaab*=P@\\x0f~\\xe2\\x00\\xfa\\xd0d\\xc0\\xeb\\xa7\\xff\\xac\\xf9;P@r:\\x90\\xf5\\xd4\\xcdd\\xc0\\xaaH\\x85\\xb1\\x858P@\\xd5\\xed\\xb3\\xcaL\\xcdd\\xc0\\xde\\x1d\\x19\\xab\\xcd7P@\\xa6GS=\\x19\\xcdd\\xc0\\xa3\\xe4\\xd59\\x067P@o\\x85w\\xb9\\x08\\xcdd\\xc0$\\x80\\x9b\\xc5\\x8b6P@\\x03\\x12M\\xa0\\x08\\xcdd\\xc0lq\\x8d\\xcfd5P@K\\\\\\x8eW \\xcdd\\xc0\\x9b\\x88~m\\xfd4P@\\x85\\xb0\\x1aKX\\xcdd\\xc0T\\xfbt<f4P@\\xf4\\x8c}\\xc9\\xc6\\xcdd\\xc0F_A\\x9a\\xb13P@\\x19\\xb0\\xab\\xc9S\\xcfd\\xc0\\x04oH\\xa3\\x023P@\\x7f\\xdc~\\xf9d\\xcfd\\xc0wcAaP2P@\\xb5\\x18<L{\\xcfd\\xc0\\xf5\\xd0>V\\xf0.P@\\x82\\x1ej\\xdb0\\xcfd\\xc0\\xe4\\x85tx\\x08.P@2\\x97\\x1b\\x0cu\\xced\\xc0}\\xe9\\xed\\xcfE,P@\\xda\\x1e\\xbd\\xe1>\\xcdd\\xc0<Mf\\xbc\\xad)P@G{\\xbc\\x90\\x8e\\xccd\\xc0J%<\\xa1\\xd7(P@\\xb4\\x04\\x19\\x01\\x95\\xc7d\\xc0mT\\xa7\\x03Y%P@\\xce\\xe2\\xc5\\xc2\\x10\\xc6d\\xc0\\x8a\\xc6\\xda\\xdf\\xd9$P@\\x00@\\x157n\\xbdd\\xc0\\xe4\\\'\\xd5>\\x1d#P@\\xdf\\x1eK\\x1f:\\xbad\\xc0\\xd9\\xcfb)\\x92"P@"\\xe8/\\xf4\\x08\\xb8d\\xc0Q\\xd7\\xda\\xfbT"P@\\xed\\xa1DK\\x9e\\xb1d\\xc0v7Ou\\xc8 P@Sx\\xd0\\xec:\\xadd\\xc0\\xca\\x19\\x8a;\\xde\\x1fP@\\x88\\xac5\\x94\\xda\\xa6d\\xc0-\\x05\\xa4\\xfd\\x0f\\x1eP@g\\x98\\xdaR\\x87\\xa0d\\xc08i\\x1a\\x14\\xcd\\x1bP@\\xbf\\xdb\\x83\\x10\\x10\\xa0d\\xc0k\\x0b\\xcfK\\xc5\\x1bP@\\xed\\xbd\\xbfA\\xfb\\x9bd\\xc0(\\n\\xf4\\x89<\\x1cP@\\x84\\xde\\xe2\\xe1\\xbd\\x9ad\\xc0\\xce\\x1b\\\'\\x85y\\x1cP@&\\x8e<\\x10\\xd9\\x99d\\xc0\\xa8qo~\\xc3\\x1cP@v\\xee=\\\\\\xb2\\x95d\\xc0\\x0b\\x0cY\\xdd\\xea\\x1eP@\\xc7N?\\xa8\\x8b\\x91d\\xc0n\\xa6B<\\x12!P@\\x8b\\x94f\\xf3\\xb8\\x8fd\\xc0\\xb2(\\xec\\xa2\\xe8!P@0\\x84\\x9c\\xf7\\x7f\\x8dd\\xc0\\xa8\\xfcky\\xe5"P@4\\xbe/.\\xd5\\x89d\\xc0,F]k\\xef#P@\\xbe\\xdb\\xbcqR\\x88d\\xc0\\xf1\\xef3.\\x1c$P@\\xa4r\\x13\\xb5\\xb4\\x84d\\xc0\\x0c9\\xb6\\x9e!$P@ \\r\\xa7\\xccM\\x82d\\xc0\\x87\\xf9\\xf2\\x02\\xec#P@\\xb8\\xd22Ro\\x81d\\xc0(\\x80bd\\xc9#P@g\\xda\\xc54\\xd3\\x7fd\\xc0\\x19u\\xad\\xbdO#P@Z\\xd9>\\xe4-\\x7fd\\xc0\\xb6\\x7fe\\xa5I#P@\\x87\\xea\\xad\\x81\\xad|d\\xc0x\\tN} $P@\\xfd\\x152W\\x06|d\\xc0\\xf6\\xee\\x8f\\xf7\\xaa$P@\\xe4\\xa6\\xcd8\\x8dzd\\xc0\\x0e\\xd6\\xff9\\xcc$P@b\\xfb\\x90\\xb7\\xdctd\\xc0l\\x03w\\xa0N$P@\\xfb\\xcd\\xc4t!sd\\xc0X\\x00S\\x06\\x0e$P@o\\x17a\\x8arnd\\xc0\\xcaO\\xaa}:"P@\\x97\\x90\\x0fz6md\\xc0\\xe66\\xe1^\\x99!P@\\x1a\\xaa)\\xc9:kd\\xc0\\xc9Xm\\xfe_ P@)@\\x14\\xcc\\x18hd\\xc0\\x1d\\x1c\\xecM\\x0c\\x1eP@<6\\xc9\\x8f\\xf8gd\\xc0\\xb6+\\xf4\\xc12\\x1dP@\\x81A\\xd2\\xa7Ugd\\xc0\\\'jin\\x85\\x1bP@\\xf49>Z\\x9ced\\xc0\\x93\\x8b1\\xb0\\x8e\\x19P@\\x17\\xf3sC\\xd3dd\\xc0\\x99\\xd7\\x11\\x87l\\x19P@;p\\xce\\x88\\xd2cd\\xc0=w\\x82\\xfd\\xd7\\x19P@&U\\xdbMpcd\\xc0:r\\xa430\\x1aP@WA\\x0ct\\xedbd\\xc0\\n\\x12\\xdb\\xdd\\x03\\x1cP@a:tz\\xde`d\\xc0Y\\x12\\xa0\\xa6\\x96\\x1eP@\\xd4Fu:\\x10ad\\xc0\\xb7\\x96\\xc9p<!P@\\x842T\\xc5\\xd4cd\\xc0\\xc1\\x15P\\xa8\\xa7 P@\\xda\\x95]0\\xb8ed\\xc0\\xc8w)u\\xc9"P@\\x1e\\x91\\xb6\\xf1\\\'hd\\xc0V\\x06\\xd5\\x06\\\'#P@\\xe1Hg`\\xe4id\\xc0AKW\\xb0\\x8d$P@\\x0b\\xbd\\xc5\\xc3\\xfbid\\xc0\\x039(a\\xa6%P@4/\\x87\\xdd\\xf7fd\\xc0\\xd6\\xc2,\\xb4s(P@G\\xea\\x044\\x91ed\\xc0O\\x02\\x9bs\\xf0(P@\\xadp\\x92\\xe6\\x8fdd\\xc0\\x84F\\xb0q\\xfd&P@/\\xcfJZ\\xf1ad\\xc0\\x039(a\\xa6%P@\\xd3\\x18tB\\xe8`d\\xc0m\\xdcb~n$P@"\\xfd\\xf6u\\xe0`d\\xc0".\\x00\\x8d\\xd2#P@\\x93\\x1f\\xb8\\xca\\x93ad\\xc0V\\x06\\xd5\\x06\\\'#P@\\x12\\x87l ]ad\\xc0{\\x15\\x19\\x1d\\x90"P@\\x94\\x8cc$\\xfb`d\\xc0\\xccx[\\xe9\\xb5"P@\\xb9t\\x93\\x18\\x04_d\\xc0vJ\\x07\\xeb\\xff"P@\\x93\\x1bE\\xd6\\x1a^d\\xc0\\xd8\\xf2\\xca\\xf5\\xb6"P@[\\t\\xdd%q[d\\xc0y\\xcc@e\\xfc\\x1fP@\\x18\\xb9nJy[d\\xc0\\x0e\\x83\\xf9+d\\x1eP@x\\xb9\\x88\\xef\\xc4Zd\\xc0B\\x06\\xf2\\xec\\xf2\\x1bP@\\xf5\\x11\\xf8\\xc3\\xcfYd\\xc0\\xbe\\xbfA{\\xf5\\x19P@+\\x16\\xbf)\\xacYd\\xc0s\\x0e\\x9e\\tM\\x19P@Mk\\x9aw\\x9cYd\\xc0b\\xbe\\xbc\\x00\\xfb\\x17P@^\\x85\\x94\\x9f\\xd4Yd\\xc0\\xc8\\xed\\x97OV\\x17P@\\x1f4\\x82\\x8d\\xebYd\\xc0\\x14\\x02\\xb9\\xc4\\x91\\x16P@\\x0cv\\xc3\\xb6\\xc5Yd\\xc0\\n\\xed\\x9cf\\x81\\x15P@\\xa6\\xf0\\xa0\\xd9uYd\\xc0\\x0f\\x98\\x87L\\xf9\\x14P@\\x19\\xecM\\x0cIYd\\xc0\\xdc\\xcf)\\xc8\\xcf\\x14P@\\xc1\\xae\\xed\\xed\\x96Xd\\xc0V,~SX\\x15P@:\\x96w\\xd5\\x03Wd\\xc0\\x8a \\xce\\xc3\\t\\x17P@,\\x86r\\xa2]Ud\\xc0\\xdf\\x16,\\xd5\\x05\\x18P@+\\x1a2\\x1e\\xa5Td\\xc0\\xea$[]N\\x18P@\\x08%\\x93S;Td\\xc0"\\xbd\\xa8\\xdd\\xaf\\x18P@\\xacZ\\x99\\xf0KSd\\xc0\\xf04\\x99\\xf1\\xb6\\x1cP@\\xd9\\x0b\\xcc\\nESd\\xc0\\x98cyW=\\x1dP@@\\x88d\\xc8\\xb1Sd\\xc0\\xaf\\xed\\xed\\x96\\xe4\\x1dP@\\x8f\\x91\\xb3\\xb0\\xa7Sd\\xc0[\\nH\\xfb\\x1f\\x1eP@\\xc3K7\\x89\\xc1Qd\\xc0&qVDM!P@\\x11\\xff\\xb0\\xa5GQd\\xc0\\xaf[\\x04\\xc6\\xfa!P@\\x18%\\xe8/\\xf4Jd\\xc0\\x84\\xd8\\x99B\\xe7%P@P\\xc5\\x8d[LId\\xc0\\xf7vKr\\xc0&P@G\\x03x\\x0b\\xa4Hd\\xc0\\xe2\\xaf\\xc9\\x1a\\xf5&P@>\\xd5\\xe8\\xd5\\x80Gd\\xc0\\x12Ov3\\xa3\\\'P@\\xf7\\n\\x0b\\xee\\x07Gd\\xc0\\x8f7\\xf9-:)P@\\x1b\\xf5\\x10\\x8d\\xeeFd\\xc0q\\x8d\\xcfd\\xff)P@\\xee\\x9b\\xc2J\\x05Fd\\xc0\\x9c\\xbf\\t\\x85\\x08+P@J\\x9b\\xaa{dEd\\xc0\\xeer\\x11\\xdf\\x89+P@mt\\xceOqDd\\xc0\\xbaM\\xb8W\\xe6+P@\\xbfd\\xe3\\xc1\\x16Cd\\xc0\\xe3\\xc5\\xc2\\x109,P@7Z\\xd5\\x92\\x0e>d\\xc0\\xc8@\\x9e]\\xbe,P@\\xc5>\\xc8\\xb2\\xe0<d\\xc0q\\x90\\x10\\xe5\\x0b-P@\\x88\\xe0\\xb8\\x8c\\x1b<d\\xc0\\x00S\\x06\\x0eh-P@\\xab\\x9c\\xbd3Z5d\\xc0\\x95\\n*\\xaa~2P@?\\x1d\\x8f\\x19\\xa84d\\xc0{\\xba\\xbac\\xb11P@\\x02\\x83\\xa4O+4d\\xc0\\xd6n\\xbb\\xd0\\\\1P@MR\\x99b\\x0e3d\\xc0\\xbc "5\\xed0P@\\xae-</\\x950d\\xc0\\x91\\xed|?50P@v;\\xc2i\\xc1-d\\xc0\\xfcq\\xfb\\xe5\\x930P@\\xfc\\x03\\xacU;-d\\xc0\\x0c:!t\\xd00P@\\xa1\\xc2\\xd8B\\x10,d\\xc0\\\\\\xa8\\xfcky1P@\\xbdZ\\xb5k\\xc2+d\\xc0\\x08\\xe8\\xbe\\x9c\\xd91P@nm\\xe1y\\xa9+d\\xc0\\xff\\xce\\xf6\\xe8\\r2P@%}!\\xe4\\xbc+d\\xc0I\\xd4\\x0b>\\xcd2P@\\\'\\xaa~\\xa5s+d\\xc0\\x1fH\\xde9\\x943P@\\xe0\\xc1\\x16\\xbb}*d\\xc0\\xc8Bt\\x08\\x1c5P@\\x01\\xe4K\\xa8`)d\\xc0\\x9e"\\x87\\x88\\x9b6P@q<\\x9f\\x01u(d\\xc0\\x84\\x088\\x84*7P@Y\\xaa\\xd2\\x16\\xd7&d\\xc0g\\xf1ba\\x888P@1\\xee\\x06\\xd1Z&d\\xc0o\\x9c\\x14\\xe6=9P@\\x89\\xf5\\rLn&d\\xc0c\\xd0\\t\\xa1\\x839P@\\xda\\x1f(\\xb7m&d\\xc0?6\\xc9\\x8f\\xf89P@\\xa1\\xc3C\\x18?&d\\xc0\\x06z\\xa8m\\xc3:P@\\x07\\x9d\\xd7\\xd8%&d\\xc0]i\\x19\\xa9\\xf7:P@\\xa4Y\\xa0\\xdd\\xa1%d\\xc0\\
--------------------------------------------------
Table full name: NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ADJACENT_STATES
Column name: state Type: TEXT
Column name: neighbors_fips_code Type: VARIANT
Column name: state_fips_code Type: TEXT
Column name: state_name Type: TEXT
Column name: neighbors_state Type: VARIANT
Sample rows:
[{'state': 'AZ', 'state_name': 'Arizona', 'state_fips_code': '04', 'neighbors_state': '[\n  "Nevada",\n  "New Mexico",\n  "Colorado",\n  "California",\n  "Utah"\n]', 'neighbors_fips_code': '[\n  "32",\n  "35",\n  "08",\n  "06",\n  "49"\n]'}, {'state': 'CA', 'state_name': 'California', 'state_fips_code': '06', 'neighbors_state': '[\n  "Arizona",\n  "Nevada",\n  "Oregon"\n]', 'neighbors_fips_code': '[\n  "04",\n  "32",\n  "41"\n]'}, {'state': 'CT', 'state_name': 'Connecticut', 'state_fips_code': '09', 'neighbors_state': '[\n  "Rhode Island",\n  "New York",\n  "Massachusetts"\n]', 'neighbors_fips_code': '[\n  "44",\n  "36",\n  "25"\n]'}, {'state': 'FL', 'state_name': 'Florida', 'state_fips_code': '12', 'neighbors_state': '[\n  "Alabama",\n  "Georgia"\n]', 'neighbors_fips_code': '[\n  "01",\n  "13"\n]'}, {'state': 'KS', 'state_name': 'Kansas', 'state_fips_code': '20', 'neighbors_state': '[\n  "Missouri",\n  "Nebraska",\n  "Colorado",\n  "Oklahoma"\n]', 'neighbors_fips_code': '[\n  "29",\n  "31",\n  "08",\n  "40"\n]'}]
--------------------------------------------------
Table full name: NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.CONGRESS_DISTRICT_115
Column name: congress_session Type: TEXT
Column name: district_geom Type: BINARY
Column name: functional_status Type: BOOLEAN
Column name: mtfcc_feature_class_code Type: TEXT
Column name: geo_id Type: TEXT
Column name: lsad_code Type: TEXT
Column name: area_water_meters Type: NUMBER
Column name: int_point_geom Type: BINARY
Column name: state_fips_code Type: TEXT
Column name: lsad_name Type: TEXT
Column name: area_land_meters Type: NUMBER
Column name: district_fips_code Type: TEXT
Column name: int_point_lon Type: FLOAT
Column name: int_point_lat Type: FLOAT
Sample rows:
[{'geo_id': '4824', 'state_fips_code': '48', 'district_fips_code': '24', 'lsad_name': 'Congressional District 24', 'lsad_code': 'C2', 'congress_session': '115', 'mtfcc_feature_class_code': 'G5200', 'functional_status': False, 'area_land_meters': 680637799, 'area_water_meters': 23080473, 'int_point_lat': 32.9194727, 'int_point_lon': -97.0127238, 'int_point_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00`8|w\\xd0@X\\xc0L\\x08\\x0cH\\xb1u@@')", 'district_geom': 'bytearray(b\'\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\xf6\\r\\x00\\x00\\xd2/\\x11o\\x9dMX\\xc0\\x9b\\x85=\\xed\\xf0c@@\\x91&\\xde\\x01\\x9eMX\\xc0\\xa2C\\xe0H\\xa0c@@\\xb7\\x98\\x9f\\x1b\\x9aMX\\xc01\\xd0\\xb5/\\xa0c@@\\x9a\\xe7\\x88|\\x97MX\\xc0\\xc0\\\\\\x8b\\x16\\xa0c@@\\xe3\\x15\\x88\\x9e\\x94MX\\xc0_TR\\\'\\xa0c@@\\xdf(yu\\x8eMX\\xc0\\xd2\\xc7|@\\xa0c@@\\xf0\\xda\\xa5\\r\\x87MX\\xc0\\x11\\xb7\\nb\\xa0c@@K\\x8e;\\xa5\\x83MX\\xc0\\xa8\\x00\\x18\\xcf\\xa0c@@\\xc3t!V\\x7fMX\\xc0A\\x07]\\xc2\\xa1c@@\\nh"lxMX\\xc0\\xd3\\xb4\\x8bi\\xa6c@@\\xd7\\xc2,\\xb4sMX\\xc0q\\x10t\\xb4\\xaac@@\\xdfO\\x8d\\x97nMX\\xc0\\x82\\xab<\\x81\\xb0c@@y\\x05\\xa2\\\'eMX\\xc0\\x8ev\\xdc\\xf0\\xbbc@@\\xedE\\xb4\\x1dSMX\\xc0\\xb2"j\\xa2\\xcfc@@\\x87\\xad\\xd9\\xcaKMX\\xc0\\x9f\\xe7O\\x1b\\xd5c@@9^\\x81\\xe8IMX\\xc0\\x04\\xad\\xc0\\x90\\xd5c@@\\x1d\\xadjIGMX\\xc0y\\xdd"0\\xd6c@@%:\\xcb,BMX\\xc0\\xbd\\xcc\\xb0Q\\xd6c@@%\\xb2\\x0f\\xb2,MX\\xc0u \\xeb\\xa9\\xd5c@@\\xb8\\\\\\xfd\\xd8$MX\\xc0\\xe7\\x93\\x15\\xc3\\xd5c@@\\xc0\\xc96p\\x07MX\\xc0F\\xd0\\x98I\\xd4c@@VDM\\xf4\\xf9LX\\xc0\\x98*\\x18\\x95\\xd4c@@\\x14\\x89\\tj\\xf8LX\\xc0;"\\xdf\\xa5\\xd4c@@\\xa83\\xf7\\x90\\xf0LX\\xc0\\xb7C\\xc3b\\xd4c@@V\\xf0\\xdb\\x10\\xe3LX\\xc0b\\xb5\\xf9\\x7f\\xd5c@@R\\x9b8\\xb9\\xdfLX\\xc0!\\x92!\\xc7\\xd6c@@\\x0b#\\xbd\\xa8\\xddLX\\xc0P\\xe2s\\\'\\xd8c@@\\xcb\\x9b\\xc3\\xb5\\xdaLX\\xc0+\\xa4\\xfc\\xa4\\xdac@@\\xd4($\\x99\\xd5LX\\xc0F\\xed~\\x15\\xe0c@@\\xbe\\x824c\\xd1LX\\xc00\\xb2d\\x8e\\xe5c@@q\\xc8\\x06\\xd2\\xc5LX\\xc0\\xf44`\\x90\\xf4c@@\\xba\\x10\\xab?\\xc2LX\\xc0,\\xcb\\xd7e\\xf8c@@\\xe5%\\xff\\x93\\xbfLX\\xc0\\xe5\\xb6}\\x8f\\xfac@@LS\\x048\\xbdLX\\xc0\\x85z\\xfa\\x08\\xfcc@@\\xad\\xddv\\xa1\\xb9LX\\xc0CW"P\\xfdc@@hO\\xc99\\xb1LX\\xc0\\xb4\\xcaLi\\xfdc@@*\\xae*\\xfb\\xaeLX\\xc0\\xee\\xfc\\xa2\\x04\\xfdc@@\\xcc\\r\\x86:\\xacLX\\xc0\\\\\\xb3\\x95\\x97\\xfcc@@\\xa5J\\x94\\xbd\\xa5LX\\xc0\\x96\\x196\\xca\\xfac@@\\x04\\x02\\x9dI\\x9bLX\\xc0\\xa4\\xfb9\\x05\\xf9c@@\\xe0\\x93N$\\x98LX\\xc0o\\xbae\\x87\\xf8c@@F"4\\x82\\x8dLX\\xc0\\xd0\\xf6\\xe8\\r\\xf7c@@\\xb3Z`\\x8f\\x89LX\\xc03\\xbcY\\x83\\xf7c@@\\x08\\x85\\x088\\x84LX\\xc0\\xaa\\xb8q\\x8b\\xf9c@@N\\x10u\\x1f\\x80LX\\xc0\\x14\\x07\\xd0\\xef\\xfbc@@\\r\\x89{,}LX\\xc0\\x7fU.T\\xfec@@L\\x8b\\xfa$wLX\\xc0{\\x85\\x05\\xf7\\x03d@@\\xa2\\xcfG\\x19qLX\\xc0\\xd2\\x00\\xde\\x02\\td@@\\x86\\x1e1znLX\\xc0#\\\'\\x13\\xb7\\nd@@\\xc1\\x9ev\\xf8kLX\\xc0\\x10\\x88\\xd7\\xf5\\x0bd@@)\\xe6 \\xe8hLX\\xc0M\\x86\\xe3\\xf9\\x0cd@@\\x04Wy\\x02aLX\\xc0\\xa0\\xe0bE\\rd@@#\\xf2]J]LX\\xc0;\\x1b\\xf2\\xcf\\x0cd@@D\\xc1\\x8c)XLX\\xc0\\xe37\\x85\\x95\\nd@@\\xc2{\\x0e,GLX\\xc0Y\\x17\\xb7\\xd1\\x00d@@.\\xaaED1LX\\xc0{\\xd0\\xb3Y\\xf5c@@3\\x13\\x0c\\xe7\\x1aLX\\xc0$\\x9c\\x16\\xbc\\xe8c@@\\x17|\\x9a\\x93\\x17LX\\xc0\\xc4\\xc7\\\'d\\xe7c@@\\xbc\\xf9\\r\\x13\\rLX\\xc0\\x1a\\x8a;\\xde\\xe4c@@\\xc0\\xc96p\\x07LX\\xc0\\xde\\x8b/\\xda\\xe3c@@(_\\xd0B\\x02LX\\xc0{\\xc6\\xbed\\xe3c@@\\xb89\\x95\\x0c\\x00LX\\xc01\\x1a\\xf9\\xbc\\xe2c@@aS\\xe7Q\\xf1KX\\xc0E\\xed~\\x15\\xe0c@@\\x82\\xbb\\xb3v\\xdbKX\\xc0@\\x98\\xdb\\xbd\\xdcc@@\\xdf\\x003\\xdf\\xc1KX\\xc0\\xd3\\xc0\\x8fj\\xd8c@@\\xfd-\\x01\\xf8\\xa7KX\\xc0\\xa6\\x0c\\x1c\\xd0\\xd2c@@8\\xf2@d\\x91KX\\xc0f\\x85"\\xdd\\xcfc@@d\\x1e\\xf9\\x83\\x81KX\\xc0\\x19PoF\\xcdc@@\\xcd5\\xcc\\xd0xKX\\xc0z\\x8c\\xf2\\xcc\\xcbc@@\\x93\\x85\\xaf\\xafuKX\\xc0\\xce\\xbc\\x1cv\\xdfc@@EIH\\xa4mKX\\xc0\\x11T\\x8d^\\rd@@Q\\x11\\xa7\\x93lKX\\xc0\\xd9B\\x90\\x83\\x12d@@\\x0b\\x1be\\xfdfKX\\xc0\\xc4AB\\x94/d@@%\\xf9\\x11\\xbfbKX\\xc0\\xdf\\xc4\\x90\\x9cLd@@\\xf2\\xd1\\xe2\\x8caKX\\xc0\\x03\\xec\\xa3SWd@@\\xc2g\\xeb\\xe0`KX\\xc0\\xdff\\xf1bad@@\\xfe\\x99A|`KX\\xc0W\\x1c\\xce\\xfcjd@@:\\xcc\\x97\\x17`KX\\xc0\\xd8\\xae\\xd0\\x07\\xcbd@@KQ.\\x8d_KX\\xc0M\\x15\\x8cJ\\xead@@\\x81\\xc6L\\xa2^KX\\xc0a\\xa7X5\\x08e@@\\xe1\\x02\\xd0(]KX\\xc0\\xe8\\xf7\\xfd\\x9b\\x17e@@e/\\xdbN[KX\\xc06 B\\\\9e@@\\xe3P\\xbf\\x0b[KX\\xc0\\xcbR\\xeb\\xfdFe@@\\xb9\\xa3\\xff\\xe5ZKX\\xc0\\x8b\\x84\\xb6\\x9cKe@@`r\\xa3\\xc8ZKX\\xc0\\x13\\xb8u7Oe@@0\\x08\\xac\\x1cZKX\\xc0Y\\xd2Q\\x0efe@@\\xef\\x18\\x1e\\xfbYKX\\xc0\\xfb\\x03\\xe5\\xb6}e@@m:\\x02\\xb8YKX\\xc0\\xb4t\\x05\\xdb\\x88e@@\\xef\\x18\\x1e\\xfbYKX\\xc0\\x17#\\x12\\x85\\x96e@@x\\xb4q\\xc4ZKX\\xc0\\xd2/\\x11o\\x9de@@\\xb3\\xb2}\\xc8[KX\\xc0\\x00\\xe4\\x84\\t\\xa3e@@\\x93\\xa9\\x82QIKX\\xc0\\xf45\\xcbe\\xa3e@@\\xc3\\\'\\x9dH0KX\\xc0\\x82\\xc2\\xa0L\\xa3e@@\\x95c\\xb2\\xb8\\xffJX\\xc0;\\xe2\\x90\\r\\xa4e@@I\\x0e\\xd8\\xd5\\xe4JX\\xc0\\x99\\xea\\xc9\\xfc\\xa3e@@\\xab\\xaf\\xae\\n\\xd4JX\\xc0t\\x14\\xe7\\xa8\\xa3e@@\\xec\\x84\\x97\\xe0\\xd4JX\\xc0\\xa9\\xed&\\xf8\\xa6e@@\\x81\\xce\\xa4M\\xd5JX\\xc0hb\\xba\\x10\\xabe@@\\xfc\\xd5\\xe3\\xbe\\xd5JX\\xc0X\\x1e\\xa4\\xa7\\xc8e@@\\x9f\\xe7O\\x1b\\xd5JX\\xc0\\xe8i\\xc0 \\xe9e@@\\x9f\\xe7O\\x1b\\xd5JX\\xc0\\\\\\xe7\\xdf.\\xfbe@@o}Xo\\xd4JX\\xc0\\xbc\\xa8\\xdd\\xaf\\x02f@@\\xfe\\t.V\\xd4JX\\xc0\\xf4\\x10\\x8d\\xee f@@\\x16L\\xfcQ\\xd4JX\\xc0\\x08i\\x8dA\\\'f@@!\\xe0\\x10\\xaa\\xd4JX\\xc0\\x1f\\x12\\xbe\\xf77f@@\\xc2\\xf1|\\x06\\xd4JX\\xc0\\xb9o\\xb5N\\\\f@@\\xa6\\xf2v\\x84\\xd3JX\\xc0\\xaa+\\x9f\\xe5yf@@\\x9a^b,\\xd3JX\\xc0)\\xa2&\\xfa|f@@\\xa05?\\xfe\\xd2JX\\xc0S\\xcd\\xac\\xa5\\x80f@@\\xe7\\xfb\\xa9\\xf1\\xd2JX\\xc0z`\\xc7\\x7f\\x81f@@\\x9ax\\x07x\\xd2JX\\xc0\\x89_\\xb1\\x86\\x8bf@@\\x06/\\xfa\\n\\xd2JX\\xc0fH\\x15\\xc5\\xabf@@@\\xdc\\xd5\\xab\\xc8JX\\xc0\\r\\xfd\\x13\\\\\\xacf@@\\x7f,D\\x87\\xc0JX\\xc0\\x13\\xbaK\\xe2\\xacf@@;\\x19\\x1c%\\xafJX\\xc0\\xbf+\\x82\\xff\\xadf@@J}Y\\xda\\xa9JX\\xc0\\x1e4\\xbb\\xee\\xadf@@\\r\\xa9\\xa2x\\x95JX\\xc0<Mf\\xbc\\xadf@@e\\x1b\\xb8\\x03uJX\\xc0<Mf\\xbc\\xadf@@\\x10S"\\x89^JX\\xc0\\xe35\\xaf\\xea\\xacf@@\\xb1\\xf6w\\xb6GJX\\xc0\\xa1\\x12\\xd71\\xaef@@\\xd5x\\xe9&1JX\\xc0Br2q\\xabf@@\\xe2:\\xc6\\x15\\x17JX\\xc0\\x7f\\xa4\\x88\\x0c\\xabf@@\\xb0.n\\xa3\\x01JX\\xc0H\\xfb\\x1f`\\xadf@@\\x19\\x8d|^\\xf1IX\\xc0r\\xc2\\x84\\xd1\\xacf@@\\x96\\x91zO\\xe5IX\\xc0\\xc5\\x84\\x98K\\xaaf@@lY\\xbe.\\xc3IX\\xc0\\xcey\\x8d]\\xa2f@@\\x1d\\x1a\\x16\\xa3\\xaeIX\\xc0\\xda:8\\xd8\\x9bf@@H\\xc1S\\xc8\\x95IX\\xc0\\x13\\x80\\x7fJ\\x95f@@;\\xa5\\x83\\xf5\\x7fIX\\xc0\\x97.\\xc4\\xea\\x8ff@@\\xf9d\\xc5puIX\\xc0\\xc9\\xe6\\xaay\\x8ef@@o*RalIX\\xc0\\x05MK\\xac\\x8cf@@J\\xcf\\xf4\\x12cIX\\xc0\\x1d\\xdd\\x08\\x8b\\x8af@@\\x8f\\xf6?\\xc0ZIX\\xc0\\xd0s\\x0b]\\x89f@@4&\\xc4\\\\RIX\\xc0\\xc1\\x08\\x1a3\\x89f@@\\xb4\\x17\\xd1vLIX\\xc0\\xca\\x82\\x89?\\x8af@@\\x88c]\\xdcFIX\\xc0:\\xc2i\\xc1\\x8bf@@\\x98cyW=IX\\xc0\\xc2\\xc1\\xde\\xc4\\x90f@@\\xad\\x84\\xee\\x928IX\\xc0Y`\\x8f\\x89\\x94f@@\\xb9\\xfb\\x1c\\x1f-IX\\xc0N\\x03\\x06I\\x9ff@@\\xea\\xb3\\x03\\xae+IX\\xc0\\x98K\\xaa\\xb6\\x9bf@@30\\xf2\\xb2&IX\\xc0\\x86\\xf7\\x1cX\\x8ef@@\\xd6rg&\\x18IX\\xc0\\xb8\\xc0\\xe5\\xb1ff@@\\x10\\xb2,\\x98\\xf8HX\\xc0\\xf1\\x9e\\x03\\xcb\\x11f@@\\xf2\\x98\\x81\\xca\\xf8HX\\xc0Z\\x0f_&\\x8af@@tw\\x9d\\r\\xf9HX\\xc0w\\xe7P\\x86\\xaaf@@Vx\\x97\\x8b\\xf8HX\\xc0/\\xc2\\x14\\xe5\\xd2f@@\\xffF;n\\xf8HX\\xc0k\\xad/\\x12\\xdaf@@\\xa2%\\x8f\\xa7\\xe5HX\\xc0t\\xd2\\xfb\\xc6\\xd7f@@\\x13_\\xed(\\xceHX\\xc0^\\x12gE\\xd4f@@\\x83\\x98K\\xaa\\xb6HX\\xc0\\xe1X\\x17\\xb7\\xd1f@@\\x91\\xb8\\xc7\\xd2\\x87HX\\xc0\\x91\\x02\\x0b`\\xcaf@@>X\\xc6\\x86nHX\\xc0\\x90\\xe1\\xb1\\x9f\\xc5f@@U\\x15\\x1a\\x88eHX\\xc0a\\x91_?\\xc4f@@\\x99\\x9dE\\xefTHX\\xc0\\xf4B\\x01\\xdb\\xc1f@@\\x19\\x8c\\x11\\x89BHX\\xc0\\xd8\\x91\\xea;\\xbff@@\\xd2q5\\xb2+HX\\xc0\\xe0\\x82lY\\xbef@@\\xb2\\xd0\\xcei\\x16HX\\xc0t\\x98//\\xc0f@@\\x02\\x07\\xb4t\\x05HX\\xc0OZ\\xb8\\xac\\xc2f@@\\xbf*\\x17*\\xffGX\\xc0T\\xe3\\xa5\\x9b\\xc4f@@\\xad\\xa2?4\\xf3GX\\xc0\\xe1\\xd3\\x9c\\xbc\\xc8f@@l\\x96\\xcbF\\xe7GX\\xc0\\xe3\\xf4\\xf5|\\xcdf@@1\\xaf#\\x0e\\xd9GX\\xc0\\x15f\\xa1\\x9d\\xd3f@@\\x85\\x06b\\xd9\\xccGX\\xc0\\xe3\\x11\\xdcH\\xd9f@@\\xcbd8\\x9e\\xcfGX\\xc0]\\xfb\\x02z\\xe1f@@\\x8f\\x18=\\xb7\\xd0GX\\xc0W\\xd66\\xc5\\xe3f@@\\xec\\t\\x12\\xdb\\xddGX\\xc0\\xee\\x91\\xcdU\\xf3f@@\\x99\\x95\\xedC\\xdeGX\\xc0\\x1c\\xe2\\x1f\\xb6\\xf4f@@F!\\xc9\\xac\\xdeGX\\xc0.\\xe5|\\xb1\\xf7f@@\\xfeZ^\\xb9\\xdeGX\\xc0Z\\xaf\\xe9AAg@@||Bv\\xdeGX\\xc0\\x8b\\x8a8\\x9ddg@@j\\xc4\\xcc>\\x8fGX\\xc0\\x968\\xf2@dg@@>\\xfa&M\\x83GX\\xc0\\x978\\xf2@dg@@\\t\\xda\\xe4\\xf0IGX\\xc0\\r\\x9d\\x9ewcg@@\\x18\\x7f\\xdb\\x13$GX\\xc0~\\x10\\xc9\\x90cg@@\\xa2\\xd0\\xb2\\xee\\x1fGX\\xc0\\x968\\xf2@dg@@\\x04\\xdd^\\xd2\\x18GX\\xc0"]3\\xf9fg@@a\\xf8\\x88\\x98\\x12GX\\xc0\\xb2\\x81t\\xb1ig@@\\x81\\xad\\x12,\\x0eGX\\xc05`\\x90\\xf4ig@@\\xfb\\x93\\xf8\\xdc\\tGX\\xc0\\xd0\\x9a\\x1f\\x7fig@@\\xb1H\\x13\\xef\\x00GX\\xc00\\xd7\\xa2\\x05hg@@d\\x8e\\xe5]\\xf5FX\\xc0B\\xaa(^eg@@!\\xcc\\xed^\\xeeFX\\xc0\\xcc\\xad\\x10Vcg@@rm\\xa8\\x18\\xe7FX\\xc0\\x91\\xaf\\x04Rbg@@\\x93\\x8a\\xc6\\xda\\xdfFX\\xc0m\\xd9!\\xfeag@@\\x00R\\x9b8\\xb9FX\\xc0m\\xd9!\\xfeag@@\\\'\\xf8\\xa6\\xe9\\xb3FX\\xc0\\x02#/kbg@@\\x0b{\\xda\\xe1\\xafFX\\xc0[:\\xe6<cg@@\\xcf\\xf7S\\xe3\\xa5FX\\xc0\\x9b\\xc1\\xdf/fg@@!\\x86\\x1d\\xc6\\xa4FX\\xc0\\xba\\xda\\x8a\\xfdeg@@\\xd0_\\xe8\\x11\\xa3FX\\xc080\\xb9Qdg@@X\\x19\\x8d|^FX\\xc0\\x0e(\\x9br\\x85g@@\\xa1[\\xaf\\xe9AFX\\xc0\\xc6dq\\xff\\x91g@@\\x01\\x982p@FX\\xc0>\\x95\\xd3\\x9e\\x92g@@\\x00\\xdc,^,FX\\xc0\\xeb\\xbf\\xceM\\x9bg@@\\xf0P\\x14\\xe8\\x13FX\\xc0\\xec\\xdc\\xb4\\x19\\xa7g@@>\\xae\\r\\x15\\xe3EX\\xc0\\xebJ\\xcbH\\xbdg@@\\x9aA|`\\xc7EX\\xc0K<\\xa0l\\xcag@@\\t\\xf9\\xa0g\\xb3EX\\xc0\\xd5\\\\n0\\xd4g@@\\x85r\\xa2]\\x85EX\\xc0\\xe0x>\\x03\\xeag@@\\x0f\\xd4)\\x8fnEX\\xc0\\x82\\xc15w\\xf4g@@\\x7f\\r\\x88\\x10WEX\\xc0\\xa1\\xf7\\xc6\\x10\\x00h@@W]\\x87jJEX\\xc0&\\xf7;\\x14\\x05h@@\\xf9\\n\\xd2\\x8cEEX\\xc0+\\x80)\\x03\\x07h@@%\\x06\\x81\\x95CEX\\xc0\\xb3\\x1b}\\xcc\\x07h@@\\xac\\xab\\x02\\xb5\\x18EX\\xc0\\xf0\\xef3.\\x1ch@@\\x96\\
--------------------------------------------------
Table full name: NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.METROPOLITAN_DIVISIONS
Column name: area_land_meters Type: FLOAT
Column name: csa_code Type: TEXT
Column name: name Type: TEXT
Column name: internal_point_geom Type: BINARY
Column name: mtfcc_feature_class_code Type: TEXT
Column name: internal_point_latitude Type: FLOAT
Column name: geo_id Type: TEXT
Column name: area_water_meters Type: FLOAT
Column name: lsad_code Type: TEXT
Column name: internal_point_longitude Type: FLOAT
Column name: metdiv_geom Type: BINARY
Column name: cbsa_code Type: TEXT
Column name: metdiv_code Type: TEXT
Column name: lsad_name Type: TEXT
Sample rows:
[{'geo_id': '1446040484', 'csa_code': '148', 'cbsa_code': '14460', 'metdiv_code': '40484', 'name': 'Rockingham County-Strafford County, NH', 'lsad_name': 'Rockingham County-Strafford County, NH Metro Division', 'lsad_code': 'M3', 'mtfcc_feature_class_code': 'G3120', 'area_land_meters': 2752787746.0, 'area_water_meters': 297798686.0, 'internal_point_latitude': 43.0866384, 'internal_point_longitude': -71.0697777, 'internal_point_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00^\\xdf\\xe2<w\\xc4Q\\xc0\\xf4I\\x93\\xf7\\x16\\x8bE@')", 'metdiv_geom': 'bytearray(b\'\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\xe8\\x12\\x00\\x00\\xe6\\xc7_Z\\xd4\\xcfQ\\xc0\\x04h[\\xcd:\\xa3E@\\xc9\\xae\\xb4\\x8c\\xd4\\xcfQ\\xc0X\\xf6$\\xb09\\xa3E@\\xc1oC\\x8c\\xd7\\xcfQ\\xc0\\x90\\xb6\\xf1\\\'*\\xa3E@\\x9d\\xd0\\xebO\\xe2\\xcfQ\\xc0\\xee\\xc5\\x17\\xed\\xf1\\xa2E@g\\r\\xdeW\\xe5\\xcfQ\\xc0\\xb6\\x12\\xbaK\\xe2\\xa2E@\\xc0$\\x95)\\xe6\\xcfQ\\xc0\\xe625\\t\\xde\\xa2E@\\xcb\\xd5\\x8fM\\xf2\\xcfQ\\xc0\\xdd\\x8f\\xdb/\\x9f\\xa2E@\\n\\xf5\\xf4\\x11\\xf8\\xcfQ\\xc0Pe\\x18w\\x83\\xa2E@l8,\\r\\xfc\\xcfQ\\xc0\\x8f\\xc56\\xa9h\\xa2E@\\xc3\\x99_\\xcd\\x01\\xd0Q\\xc0\\xf8\\xbc\\xe2\\xa9G\\xa2E@{\\xb9O\\x8e\\x02\\xd0Q\\xc0\\xb3x\\xb10D\\xa2E@Q\\xd8E\\xd1\\x03\\xd0Q\\xc0,y<-?\\xa2E@\\t\\xf85\\x92\\x04\\xd0Q\\xc0cV\\xefp;\\xa2E@\\xdczM\\x0f\\n\\xd0Q\\xc0\\xb1Q\\xd6o&\\xa2E@\\xc2\\x9f\\xe1\\xcd\\x1a\\xd0Q\\xc0q\\xa1\\xf2\\xaf\\xe5\\xa1E@+\\xa0PO\\x1f\\xd0Q\\xc0\\x1b=~o\\xd3\\xa1E@\\x89@\\xf5\\x0f"\\xd0Q\\xc0\\x14\\xfb\\xcb\\xee\\xc9\\xa1E@\\x13\\xdcH\\xd9"\\xd0Q\\xc0{(\\xd1\\x92\\xc7\\xa1E@\\xc9\\xe1\\x93N$\\xd0Q\\xc0kY\\xbe.\\xc3\\xa1E@\\x1fF\\x08\\x8f6\\xd0Q\\xc0\\xa4*mq\\x8d\\xa1E@\\xa0\\x88E\\x0c;\\xd0Q\\xc0Y\\xa4\\x89w\\x80\\xa1E@\\x10\\xcbf\\x0eI\\xd0Q\\xc0\\x91^\\xd4\\xeeW\\xa1E@\\x01P\\xc5\\x8d[\\xd0Q\\xc0\\x0eS[\\xea \\xa1E@\\xb9\\xa6@fg\\xd0Q\\xc05\\x8f\\xc3`\\xfe\\xa0E@t\\xb3?Pn\\xd0Q\\xc0\\xd9\\xa1a1\\xea\\xa0E@\\x91\\xb2E\\xd2n\\xd0Q\\xc0:\\xde\\xe4\\xb7\\xe8\\xa0E@a\\x92\\xca\\x14s\\xd0Q\\xc0#\\x99\\xd5;\\xdc\\xa0E@\\x00VG\\x8et\\xd0Q\\xc0\\x83=\\xed\\xf0\\xd7\\xa0E@5E\\x80\\xd3\\xbb\\xd0Q\\xc02\\xe5CP5\\xa0E@\\xeb\\xfc\\xdbe\\xbf\\xd0Q\\xc0\\x88w\\x80\\\'-\\xa0E@\\xffT\\xdc\\xb8\\xc5\\xd0Q\\xc0\\x9d- \\xb4\\x1e\\xa0E@\\xca\\x16I\\xbb\\xd1\\xd0Q\\xc0\\xe6oB!\\x02\\xa0E@\\xf3u\\x19\\xfe\\xd3\\xd0Q\\xc0\\xf0d73\\xfa\\x9fE@\\xb1l\\xe6\\x90\\xd4\\xd0Q\\xc0zh\\x1f+\\xf8\\x9fE@\\x07\\xd1Z\\xd1\\xe6\\xd0Q\\xc0NWw,\\xb6\\x9fE@|\\x9ci\\xc2\\xf6\\xd0Q\\xc0\\xb3W\\x1f\\x0f}\\x9fE@\\xf8U\\xb9P\\xf9\\xd0Q\\xc0p\\xe3\\x16\\xf3s\\x9fE@\\x98P\\xc1\\xe1\\x05\\xd1Q\\xc0\\xcaR\\xeb\\xfdF\\x9fE@\\xe4\\x9f\\x19\\xc4\\x07\\xd1Q\\xc0\\x1f\\xb1\\xdd=@\\x9fE@\\xd0\\x98I\\xd4\\x0b\\xd1Q\\xc0\\xc3\\xf3R\\xb11\\x9fE@\\x96\\x1f\\xb8\\xca\\x13\\xd1Q\\xc0\\xd6\\xf4\\xa0\\xa0\\x14\\x9fE@\\xdb\\xfbT\\x15\\x1a\\xd1Q\\xc0\\x1fg\\x9a\\xb0\\xfd\\x9eE@\\xfd\\xa0.R(\\xd1Q\\xc0\\x7f\\x97\\x196\\xca\\x9eE@&\\x00\\xff\\x94*\\xd1Q\\xc0\\xd6\\xf5\\x0bv\\xc3\\x9eE@D\\x84\\x7f\\x114\\xd1Q\\xc0\\x9cl\\x03w\\xa0\\x9eE@\\xb4\\xa9\\xbaG6\\xd1Q\\xc0FY\\xbf\\x99\\x98\\x9eE@B\\xe8\\xa0K8\\xd1Q\\xc0\\xeaT\\xf9\\x9e\\x91\\x9eE@G\\xa5\\xd8\\xd18\\xd1Q\\xc0?KW\\xb0\\x8d\\x9eE@\\xee%\\x8d\\xd1:\\xd1Q\\xc0\\x83\\n\\x0e/\\x88\\x9eE@8*7QK\\xd1Q\\xc0P8\\xbb\\xb5L\\x9eE@\\xc6Nx\\tN\\xd1Q\\xc0\\xc7\\x17\\xed\\xf1B\\x9eE@\\x83.\\xe1\\xd0[\\xd1Q\\xc0\\xcc\\xc8 w\\x11\\x9eE@\\xba\\x11\\x16\\x15q\\xd1Q\\xc0(6\\xe6u\\xc4\\x9dE@oa\\xddxw\\xd1Q\\xc0\\xff4\\xb5l\\xad\\x9dE@\\x8b\\xc4\\x045|\\xd1Q\\xc0\\x14S\\xe9\\\'\\x9c\\x9dE@\\xb3W\\x1f\\x0f}\\xd1Q\\xc0\\x14\\xbb}V\\x99\\x9dE@\\x087\\x19U\\x86\\xd1Q\\xc0\\xba\\xe4\\x7f\\xf2w\\x9dE@]\\x16\\x13\\x9b\\x8f\\xd1Q\\xc0\\x80\\\'-\\\\V\\x9dE@o\\x9e\\xea\\x90\\x9b\\xd1Q\\xc0\\x9b0a4+\\x9dE@\\xaa\\x9c\\xf6\\x94\\x9c\\xd1Q\\xc0\\x08O\\xe8\\xf5\\\'\\x9dE@\\xdf\\xdd\\xca\\x12\\x9d\\xd1Q\\xc0c\\xce3\\xf6%\\x9dE@\\x10\\x01\\x87P\\xa5\\xd1Q\\xc0`\\xa7X5\\x08\\x9dE@\\x1a\\xdf\\x17\\x97\\xaa\\xd1Q\\xc0z\\x82\\xc4v\\xf7\\x9cE@N\\xec\\xa1}\\xac\\xd1Q\\xc0x\\x95\\xb5M\\xf1\\x9cE@\\xe8\\xd8A%\\xae\\xd1Q\\xc0\\xbdTl\\xcc\\xeb\\x9cE@\\xe2\\x04\\xa6\\xd3\\xba\\xd1Q\\xc0\\xeb\\x94G7\\xc2\\x9cE@\\xb2\\x08\\xc5V\\xd0\\xd1Q\\xc0\\xef\\xa3\\x1a\\xf6{\\x9cE@E\\x82\\xa9f\\xd6\\xd1Q\\xc0\\n\\xe7\\x1afh\\x9cE@\\xf2\\xac\\xa4\\x15\\xdf\\xd1Q\\xc0+b\\xd8aL\\x9cE@\\xef\\xdc{\\xb8\\xe4\\xd1Q\\xc0Gq\\x8e::\\x9cE@\\xa1\\xf1D\\x10\\xe7\\xd1Q\\xc0\\x144-\\xb12\\x9cE@\\x95C\\x8bl\\xe7\\xd1Q\\xc0\\xda5!\\xad1\\x9cE@?6\\xc9\\x8f\\xf8\\xd1Q\\xc0Y\\xe7\\xdf.\\xfb\\x9bE@\\xa4\\xe1\\x94\\xb9\\xf9\\xd1Q\\xc0R\\xd5\\x04Q\\xf7\\x9bE@r\\xdb\\xbeG\\xfd\\xd1Q\\xc0!4\\x82\\x8d\\xeb\\x9bE@Z\\x7fK\\x00\\xfe\\xd1Q\\xc0\\xb7\\xe5#)\\xe9\\x9bE@\\xb6\\x9d\\xb6F\\x04\\xd2Q\\xc0\\x10[z4\\xd5\\x9bE@\\xba\\xdb\\xf5\\xd2\\x14\\xd2Q\\xc05\\x8d\\xed\\xb5\\xa0\\x9bE@B\\x94/h!\\xd2Q\\xc0\\x11?\\xff=x\\x9bE@|^\\xf1\\xd4#\\xd2Q\\xc0\\x8b\\xa7\\x1eip\\x9bE@x@\\xd9\\x94+\\xd2Q\\xc0+\\x99cyW\\x9bE@\\xb9\\xe1w\\xd3-\\xd2Q\\xc0\\xca\\xd7e\\xf8O\\x9bE@0c\\n\\xd68\\xd2Q\\xc0A\\xb1\\x154-\\x9bE@|\\xcc\\x07\\x04:\\xd2Q\\xc0J\\n,\\x80)\\x9bE@\\xbcS\\x01\\xf7<\\xd2Q\\xc0\\x12D\\xdd\\x07 \\x9bE@\\xbf&k\\xd4C\\xd2Q\\xc0\\x84I\\xf1\\xf1\\t\\x9bE@}\\xe9\\xed\\xcfE\\xd2Q\\xc02\\xbf\\x9a\\x03\\x04\\x9bE@\\x00\\xc8\\t\\x13F\\xd2Q\\xc0\\xab#G:\\x03\\x9bE@\\x92\\xa9\\x82QI\\xd2Q\\xc0&\\xf4\\xfa\\x93\\xf8\\x9aE@\\x98L\\x15\\x8cJ\\xd2Q\\xc0\\xdc\\xf2\\x91\\x94\\xf4\\x9aE@y\\x19\\xc5rK\\xd2Q\\xc0\\x9ck\\x98\\xa1\\xf1\\x9aE@L4H\\xc1S\\xd2Q\\xc0E\\x82\\xa9f\\xd6\\x9aE@\\xba\\x0b\\x94\\x14X\\xd2Q\\xc0\\xdb\\x16e6\\xc8\\x9aE@\\x8d\\x91\\xec\\x11j\\xd2Q\\xc0\\x11\\xc7\\xba\\xb8\\x8d\\x9aE@@\\xf7\\xe5\\xccv\\xd2Q\\xc0\\x0c\\x83\\xf9+d\\x9aE@\\xb2\\xd5\\xe5\\x94\\x80\\xd2Q\\xc0\\x84\\xf4\\x149D\\x9aE@\\xee[\\xad\\x13\\x97\\xd2Q\\xc0\\xa8\\x84\\\'\\xf4\\xfa\\x99E@<J%<\\xa1\\xd2Q\\xc0N\\xae)\\x90\\xd9\\x99E@\\xa4\\xe2\\xff\\x8e\\xa8\\xd2Q\\xc0x;\\xc2i\\xc1\\x99E@\\x8f\\xc1\\x8aS\\xad\\xd2Q\\xc0\\x9e\\x90\\x9d\\xb7\\xb1\\x99E@\\x14\\xaa\\x9b\\x8b\\xbf\\xd2Q\\xc0:\\x06d\\xafw\\x99E@\\xd6\\xa7\\x1c\\x93\\xc5\\xd2Q\\xc0H\\x9b\\xaa{d\\x99E@\\xb3\\x0b\\x06\\xd7\\xdc\\xd2Q\\xc0\\xa5\\x08pz\\x17\\x99E@\\xbe\\xf3\\x8b\\x12\\xf4\\xd2Q\\xc0\\xb6\\xd8\\xed\\xb3\\xca\\x98E@\\xcf\\x10\\x8eY\\xf6\\xd2Q\\xc0\\x8e\\x15\\xfc6\\xc4\\x98E@b\\xf2\\x06\\x98\\xf9\\xd2Q\\xc0f1\\xb1\\xf9\\xb8\\x98E@=\\xb4\\x8f\\x15\\xfc\\xd2Q\\xc0;\\xb1\\x87\\xf6\\xb1\\x98E@G\\x17\\x9bV\\n\\xd3Q\\xc0\\x1c$D\\xf9\\x82\\x98E@\\xd0\\x98I\\xd4\\x0b\\xd3Q\\xc0\\xf6`R||\\x98E@\\xdb\\xf8\\x13\\x95\\r\\xd3Q\\xc0\\xa4\\xa2\\xb1\\xf6w\\x98E@0]\\x88\\xd5\\x1f\\xd3Q\\xc0\\x9fT\\xfbt<\\x98E@\\x99`8\\xd70\\xd3Q\\xc02\\xa5\\xf5\\xb7\\x04\\x98E@\\n\\xa0\\x18Y2\\xd3Q\\xc0}!\\xe4\\xbc\\xff\\x97E@\\xa8\\xc7\\xb6\\x0c8\\xd3Q\\xc0\\x85\\xc5\\xa8k\\xed\\x97E@\\x16\\x85]\\x14=\\xd3Q\\xc0w\\xd9\\xaf;\\xdd\\x97E@\\xa3\\xc3C\\x18?\\xd3Q\\xc0\\x02yv\\xf9\\xd6\\x97E@\\x0fF\\xec\\x13@\\xd3Q\\xc06\\x99\\xf1\\xb6\\xd2\\x97E@E)!XU\\xd3Q\\xc0\\xbe\\x86\\xe0\\xb8\\x8c\\x97E@\\xfdH\\x11\\x19V\\xd3Q\\xc0\\x93\\\'\\x10v\\x8a\\x97E@\\xcc\\xad\\x10Vc\\xd3Q\\xc0DzQ\\xbb_\\x97E@\\\'3\\xdeVz\\xd3Q\\xc0\\xd7(\\xeb7\\x13\\x97E@\\xdeU\\x0f\\x98\\x87\\xd3Q\\xc0r\\x1f\\xb95\\xe9\\x96E@\\xb9\\x17\\x98\\x15\\x8a\\xd3Q\\xc0"\\xfd\\xf6u\\xe0\\x96E@\\x16\\xb8<\\xd6\\x8c\\xd3Q\\xc0\\xd2\\xda4\\xb6\\xd7\\x96E@8\\xdb\\xdc\\x98\\x9e\\xd3Q\\xc0=\\xcc^\\xb6\\x9d\\x96E@\\xbc>s\\xd6\\xa7\\xd3Q\\xc0\\xbd\\x83\\x9f8\\x80\\x96E@a\\xbf\\\'\\xd6\\xa9\\xd3Q\\xc0\\\'\\x81\\xcd9x\\x96E@l\\x1f\\xf2\\x96\\xab\\xd3Q\\xc0#`tys\\x96E@p@KW\\xb0\\xd3Q\\xc0t|\\xb48c\\x96E@\\xa4\\x84`U\\xbd\\xd3Q\\xc0\\x0bs\\x8269\\x96E@8f\\xd9\\x93\\xc0\\xd3Q\\xc0x\\x0c\\x8f\\xfd,\\x96E@\\xc5\\xa4\\xbf\\x97\\xc2\\xd3Q\\xc0t\\xeb5=(\\x96E@\\xbaG6W\\xcd\\xd3Q\\xc0\\xfec!:\\x04\\x96E@`\\xc8\\xeaV\\xcf\\xd3Q\\xc0\\xc5\\x01\\xf4\\xfb\\xfe\\x95E@AG\\xabZ\\xd2\\xd3Q\\xc0L\\x80a\\xf9\\xf3\\x95E@\\x93\\x8a\\xc6\\xda\\xdf\\xd3Q\\xc0\\xf7\\x15k\\xb8\\xc8\\x95E@\\xfbV\\xeb\\xc4\\xe5\\xd3Q\\xc0,\\x81\\x94\\xd8\\xb5\\x95E@\\xfd\\x0f\\xb0V\\xed\\xd3Q\\xc0$\\x8a\\x90\\xba\\x9d\\x95E@j1x\\x98\\xf6\\xd3Q\\xc0\\x13`X\\xfe|\\x95E@\\xdf\\x16,\\xd5\\x05\\xd4Q\\xc0\\xccsD\\xbeK\\x95E@%u\\x02\\x9a\\x08\\xd4Q\\xc0\\xfarf\\xbbB\\x95E@e\\x16\\xa1\\xd8\\n\\xd4Q\\xc0\\x1c\\x90\\x84};\\x95E@\\x00:\\xcc\\x97\\x17\\xd4Q\\xc0\\x1f\\t\\xfbv\\x12\\x95E@8\\x9c\\xf9\\xd5\\x1c\\xd4Q\\xc0\\xd1a\\xbe\\xbc\\x00\\x95E@\\x08\\xfe\\xb7\\x92\\x1d\\xd4Q\\xc0\\x94\\x97\\xfcO\\xfe\\x94E@m\\xe0\\x0e\\xd4)\\xd4Q\\xc0c\\x9bT4\\xd6\\x94E@\\x13{h\\x1f+\\xd4Q\\xc0\\xe1X\\x17\\xb7\\xd1\\x94E@N_\\xcf\\xd7,\\xd4Q\\xc0\\xf0\\xd6\\xf9\\xb7\\xcb\\x94E@\\xca2\\xc4\\xb1.\\xd4Q\\xc0e\\x1aM.\\xc6\\x94E@\\xb6_>Y1\\xd4Q\\xc0\\x9d\\x93\\xde7\\xbe\\x94E@"\\xe2\\xe6T2\\xd4Q\\xc0\\xeb0&\\xfd\\xbd\\x94E@v\\xc4!\\x1bH\\xd4Q\\xc0L\\xf2#~\\xc5\\x94E@A\\xd4}\\x00R\\xd4Q\\xc0\\x8dy\\x1dq\\xc8\\x94E@E)!XU\\xd4Q\\xc0\\x9a\\xf3\\x8c}\\xc9\\x94E@3\\x8a\\xe5\\x96V\\xd4Q\\xc0\\x95\\xd23\\xbd\\xc4\\x94E@V\\xb1\\xf8Ma\\xd4Q\\xc0\\xd2I\\xb6\\xba\\x9c\\x94E@E,b\\xd8a\\xd4Q\\xc0.\\xc9\\x01\\xbb\\x9a\\x94E@\\xea\\xac\\x16\\xd8c\\xd4Q\\xc0[\\xc8#\\xb8\\x91\\x94E@\\xea\\xac\\x16\\xd8c\\xd4Q\\xc0\\xb5Go\\xb8\\x8f\\x94E@x\\xeb\\xfc\\xdbe\\xd4Q\\xc0G\\xa4m\\xfc\\x89\\x94E@`\\xaco`r\\xd4Q\\xc0Z\\xcf\\x10\\x8eY\\x94E@B\\x93\\xc4\\x92r\\xd4Q\\xc0\\x01\\xb8Y\\xbcX\\x94E@\\x95\\xedC\\xder\\xd4Q\\xc0%\\xc2\\x86\\xa7W\\x94E@\\xe2s\\\'\\xd8\\x7f\\xd4Q\\xc0\\x92lu9%\\x94E@\\x99\\x96X\\x19\\x8d\\xd4Q\\xc0<}\\x04\\xfe\\xf0\\x93E@\\xec\\xd9s\\x99\\x9a\\xd4Q\\xc0\\x98\\xf0K\\xfd\\xbc\\x93E@o\\x9e\\xea\\x90\\x9b\\xd4Q\\xc0\\xb3\\xb4Ss\\xb9\\x93E@Jz\\x18Z\\x9d\\xd4Q\\xc0\\xd9\\x8e\\xa9\\xbb\\xb2\\x93E@\\x86\\x00\\xe0\\xd8\\xb3\\xd4Q\\xc0\\xb5\\xb91=a\\x93E@\\xcf\\xb6\\x9au\\xc6\\xd4Q\\xc0\\x90\\x99\\x0b\\\\\\x1e\\x93E@\\x8c_x%\\xc9\\xd4Q\\xc0w\\xecg\\xb1\\x14\\x93E@\\xaa^~\\xa7\\xc9\\xd4Q\\xc0\\xe3\\xd6\\xa4\\xdb\\x12\\x93E@\\x92\\x02\\x0b`\\xca\\xd4Q\\xc0i\\x1dUM\\x10\\x93E@Ee\\xc3\\x9a\\xca\\xd4Q\\xc0\\x10\\x06\\x9e{\\x0f\\x93E@\\x81\\xeb\\x8a\\x19\\xe1\\xd4Q\\xc0hR\\n\\xba\\xbd\\x92E@e\\xf6y\\x8c\\xf2\\xd4Q\\xc0\\xa6\\x8f\\xc0\\x1f~\\x92E@((E+\\xf7\\xd4Q\\xc0Q\\xf7\\x01Hm\\x92E@\\xbdqR\\x98\\xf
--------------------------------------------------
Table full name: NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.RAILWAYS
Column name: railway_geom Type: TEXT
Column name: mtfcc_feature_class_code Type: TEXT
Column name: geo_id Type: NUMBER
Column name: full_name Type: TEXT
Sample rows:
[{'geo_id': 11094844118, 'full_name': 'Louisville and Nashville RR', 'mtfcc_feature_class_code': 'R1011', 'railway_geom': '{"type":"LineString","coordinates":[[-85.756163,30.789894],[-85.749904,30.79131299999999],[-85.74871499999999,30.79155899999999],[-85.74010599999998,30.79322499999998],[-85.73695699999999,30.793934],[-85.736812,30.79396699999999],[-85.73513699999999,30.79429],[-85.73469899999999,30.79452799999998],[-85.730451,30.79541499999998],[-85.72664999999999,30.79618299999999],[-85.72593499999999,30.79632699999999],[-85.72435899999999,30.79647599999999],[-85.72298599999999,30.79634799999999],[-85.72159299999998,30.79626999999998],[-85.71938999999999,30.79606399999999],[-85.71445399999998,30.79571999999998],[-85.712805,30.79557799999998],[-85.70494399999998,30.79490399999998],[-85.70237899999999,30.794684],[-85.69897499999999,30.79436199999998],[-85.69579699999998,30.79413699999998],[-85.69317199999999,30.79394299999998],[-85.69315299999998,30.79394199999999],[-85.692686999999
--------------------------------------------------
Table full name: NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.STATES
Column name: state_fips_code Type: TEXT
Column name: division_code Type: TEXT
Column name: area_water_meters Type: NUMBER
Column name: int_point_lon Type: FLOAT
Column name: functional_status Type: TEXT
Column name: int_point_geom Type: BINARY
Column name: geo_id Type: TEXT
Column name: state_gnis_code Type: TEXT
Column name: state Type: TEXT
Column name: region_code Type: TEXT
Column name: area_land_meters Type: NUMBER
Column name: state_name Type: TEXT
Column name: int_point_lat Type: FLOAT
Column name: state_geom Type: BINARY
Column name: mtfcc_feature_class_code Type: TEXT
Column name: lsad_code Type: TEXT
Sample rows:
[{'geo_id': '66', 'region_code': '9', 'division_code': '0', 'state_fips_code': '66', 'state_gnis_code': '01802705', 'state': 'GU', 'state_name': 'Guam', 'lsad_code': '00', 'mtfcc_feature_class_code': 'G4000', 'functional_status': 'A', 'area_land_meters': 543555844, 'area_water_meters': 934337453, 'int_point_lat': 13.4417451, 'int_point_lon': 144.7719021, 'int_point_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\xd7f\\x08l\\xb3\\x18b@%V\\xebi,\\xe2*@')", 'state_geom': 'bytearray(b\'\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00`\\x02\\x00\\x00\\xe7v\\xf6\\x95\\x07\\x12b@\\xe8\\xf6\\x92\\xc6h\\xe5*@"u\\x02\\x9a\\x08\\x12b@\\x008\\xbd\\x8b\\xf7\\xe3*@K\\x95\\xef\\x19\\t\\x12b@F\\xf2\\\\\\xdf\\x87\\xe3*@~\\xe5Az\\n\\x12b@Y\\x07\\xce\\x19Q\\xe2*@k\\xb93\\x13\\x0c\\x12b@\\xc7*l\\x06\\xb8\\xe0*@$.\\xc7+\\x10\\x12b@\\xf9%\\xa9L1\\xdf*@M4\\x0f`\\x11\\x12b@\\xbba\\xdb\\xa2\\xcc\\xde*@\\xba\\xdb\\xf5\\xd2\\x14\\x12b@\\x1e\\xd7M)\\xaf\\xdd*@\\nL\\xa7u\\x1b\\x12b@\\xa4gA(\\xef\\xdb*@\\x08^\\xf4\\x15$\\x12b@\\x9a!\\x1c\\xb3\\xec\\xd9*@\\xb3}\\xc8[.\\x12b@\\x9f\\x03\\xcb\\x112\\xd8*@Qm7\\xc17\\x12b@\\x8aIF\\xce\\xc2\\xd6*@"\\xad\\xf8\\x86B\\x12b@2j\\x85\\xe9{\\xd5*@\\x13+\\xa3\\x91O\\x12b@-\\x16\\x86\\xc8\\xe9\\xd3*@b\\xe1\\xebk]\\x12b@\\x88c${\\x84\\xd2*@o\\xac\\x8b\\xdbh\\x12b@6m\\x8d\\x08\\xc6\\xd1*@\\x04{\\x13Cr\\x12b@Vu\\x1d\\xaa)\\xd1*@\\x87\\x19\\x1aO\\x84\\x12b@\\x8b\\x975\\xb1\\xc0\\xcf*@\\xeay7\\x16\\x94\\x12b@\\xb3\\x1d\\x1a\\x16\\xa3\\xce*@(\\xf2$\\xe9\\x9a\\x12b@\\x89C6\\x90.\\xce*@\\x1f\\xdf\\xa5\\xd4\\xa5\\x12b@\\xddVA\\x0ct\\xcd*@\\x10\\xee\\x95y\\xab\\x12b@\\xf4\\xc2\\x9d\\x0b#\\xcd*@\\x10\\x0b|E\\xb7\\x12b@\\xc8\\x01\\x829z\\xcc*@#\\xfe(\\xea\\xcc\\x12b@\\xd1\\x19\\x18yY\\xcb*@\\x8b\\xe73\\xa0\\xde\\x12b@\\xc0\\xceM\\x9bq\\xca*@u=\\xd1u\\xe1\\x12b@G\\xe3\\x17^I\\xca*@-\\x0e.\\x1d\\xf3\\x12b@\\xb4lt\\xceO\\xc9*@\\t\\xa7\\x05/\\xfa\\x12b@ve\\xde\\xaa\\xeb\\xc8*@+\\xff!\\xfd\\xf6\\x12b@y\\x9fq\\xe1@\\xc8*@\\r<\\xbe\\xbd\\xeb\\x12b@\\xb5M\\xb8W\\xe6\\xc5*@\\x0c\\xd1\\xe8\\x0e\\xe2\\x12b@\\x96"\\xf9J \\xc5*@\\x9dl\\xca\\x15\\xde\\x12b@jo\\xf0\\x85\\xc9\\xc4*@\\x991\\xcc\\t\\xda\\x12b@\\xa4\\xa6$\\xebp\\xc4*@\\xf4\\xa9c\\x95\\xd2\\x12b@\\x96\\x8c*\\xc3\\xb8\\xc3*@6\\xd1\\xaeB\\xca\\x12b@^.\\xe2;1\\xc3*@\\x19\\xecM\\x0c\\xc9\\x12b@]\\xf4\\x15\\xa4\\x19\\xc3*@\\xcdCm\\x1b\\xc6\\x12b@k\\x9a>;\\xe0\\xc2*@\\x8b\\xc0X\\xdf\\xc0\\x12b@\\n\\x11p\\x08U\\xc2*@\\xe9J\\xcbH\\xbd\\x12b@\\x96Q\\xf3U\\xf2\\xc1*@H\\x18\\x06,\\xb9\\x12b@\\xe77L4H\\xc1*@P\\xe4I\\xd2\\xb5\\x12b@\\xb2]h\\xae\\xd3\\xc0*@\\xac\\x06(\\r\\xb5\\x12b@T\\xc6\\xbf\\xcf\\xb8\\xc0*@\\x9f\\x03\\xcb\\x11\\xb2\\x12b@\\x00\\x00\\x00\\x00\\x00\\xc0*@\\xc7iO\\xc9\\xb9\\x12b@\\x00\\x00\\x00\\x00\\x00\\xc0*@u\\xaf\\x93\\xfa\\xb2\\x12b@\\xc9\\xe5?\\xa4\\xdf\\xbe*@]q8\\xf3\\xab\\x12b@\\xa5\\xb5il\\xaf\\xbd*@\\xf2\\x0c\\x1a\\xfa\\xa7\\x12b@\\x9d\\xb9N#-\\xbd*@p\\t\\xc0?\\xa5\\x12b@\\x90\\x82n/i\\xbc*@\\x9d\\xdbK\\x1a\\xa3\\x12b@\\xa9\\x9c\\xf6\\x94\\x9c\\xbb*@\\x12\\xdcH\\xd9\\xa2\\x12b@\\xd3-\\x02c}\\xbb*@\\xd2:\\xaa\\x9a\\xa0\\x12b@\\n\\xeb\\x8dZa\\xba*@\\x99\\x86\\xa8\\xc2\\x9f\\x12b@\\x1f\\x17\\xd5"\\xa2\\xb8*@\\x94O\\x8fm\\x99\\x12b@\\xd8\\x003\\xdf\\xc1\\xb7*@\\xdb\\x03\\xad\\xc0\\x90\\x12b@\\xbcS\\xc8\\x95z\\xb6*@E\\xa4m\\xfc\\x89\\x12b@\\xff\\xb0\\xa5GS\\xb5*@\\x18c\\\'\\xbc\\x84\\x12b@A\\\'K\\xad\\xf7\\xb3*@2A\\xd4}\\x80\\x12b@|\\xb4\\xff\\x01\\xd6\\xb2*@\\x93>tA}\\x12b@\\xf2\\xeb\\x87\\xd8`\\xb1*@\\xf9Q\\xd4\\x99{\\x12b@\\x1b\\x08\\xc9\\x02&\\xb0*@I\\xd5v\\x13|\\x12b@}\\x8b\\x155\\x98\\xae*@\\xcc\\x0c\\x1be}\\x12b@\\xac\\xf5\\x0c\\xe1\\x98\\xad*@\\xae\\xd9\\xcaK~\\x12b@\\xdb*O \\xec\\xac*@\\xc8\\xd8\\xd0\\xcd~\\x12b@\\xc7\\x82\\xc2\\xa0L\\xab*@\\xb5\\x1f\\xf0\\xc0\\x80\\x12b@o["\\x17\\x9c\\xa9*@\\xa5\\xf3\\xe1Y\\x82\\x12b@\\x8a\\x92\\x90H\\xdb\\xa8*@)+\\x86\\xab\\x83\\x12b@A=D\\xa3;\\xa8*@\\x8d\\x9e"\\x87\\x88\\x12b@\\xa4\\xc4\\xae\\xed\\xed\\xa6*@<\\xfdg\\xcd\\x8f\\x12b@\\xc9\\xdb\\xd8\\xecH\\xa5*@b\\xa6\\xb4\\xfe\\x96\\x12b@\\x13\\xe8\\xda\\x17\\xd0\\xa3*@\\xe2\\x93N$\\x98\\x12b@\\x04mr\\xf8\\xa4\\xa3*@\\xa50\\xefq\\xa6\\x12b@q\\x81\\x04\\xc5\\x8f\\xa1*@\\x97\\x1d\\xe2\\x1f\\xb6\\x12b@G\\xac\\xc5\\xa7\\x00\\xa0*@\\x9d6\\xe34\\xc4\\x12b@\\xa3\\x8a\\xe2U\\xd6\\x9e*@\\x1e\\xac\\xc6\\x12\\xd6\\x12b@\\x82\\x86\\xc5\\xa8k\\x9d*@S\\x06\\x0eh\\xe9\\x12b@\\xb3\\xd7\\xbb?\\xde\\x9b*@\\xfe\\xda\\xc1\\x88\\xfd\\x12b@,v\\xc2Kp\\x9a*@;\\xc9\\x1d6\\x11\\x13b@\\xf9H\\x11\\x19V\\x99*@\\xc8\\x80\\xb3\\x94,\\x13b@#\\x8b4\\xf1\\x0e\\x98*@%\\xf0N>=\\x13b@k\\xf8\\x16\\xd6\\x8d\\x97*@\\xe2\\xb5\\x12\\xbaK\\x13b@\\xe5\\xe4\\x0c\\xc5\\x1d\\x97*@\\xbf\\x86\\xa7WJ\\x13b@ \\xb1\\xa4\\xdc}\\x96*@\\xba\\x8a\\x8c\\x0eH\\x13b@l\\\\\\xff\\xae\\xcf\\x94*@?\\x8e\\xe6\\xc8J\\x13b@(\\x93\\xe1x>\\x93*@A1y\\x03L\\x13b@\\x15M.\\xc6\\xc0\\x92*@\\xa6\\x83\\xbc\\x1eL\\x13b@!\\xed\\x7f\\x80\\xb5\\x92*@\\xcdY\\x9frL\\x13b@\\xef\\x9a\\x1e\\x14\\x94\\x92*@#\\x8b\\xfb\\x8fL\\x13b@>*\\xfe\\xef\\x88\\x92*@u$^\\x9eN\\x13b@U\\x14\\xaf\\xb2\\xb6\\x91*@\\xf1j\\x80\\xd2P\\x13b@e.7\\x18\\xea\\x90*@av\\x16\\xbdS\\x13b@\\xf5.\\xde\\x8f\\xdb\\x8f*@\\x92\\x0c\\x00U\\\\\\x13b@\\x80\\xe7\\xa5bc\\x8e*@|iQ\\x9fd\\x13b@\\xa0\\x15\\xdfP\\xf8\\x8c*@m\\x92\\xe6\\x8fi\\x13b@\\xa2uT5A\\x8c*@\\xef\\xaf\\xe5\\x95k\\x13b@v\\x9ci\\xc2\\xf6\\x8b*@\\x9d\\xa6\\x96\\xadu\\x13b@\\x14j\\x14\\x92\\xcc\\x8a*@\\x84\\x16\\xd9\\xcew\\x13b@p\\xcf\\xf3\\xa7\\x8d\\x8a*@\\xe41\\x03\\x95q\\x13b@`YiR\\n\\x8a*@\\x0f*q\\x1dc\\x13b@#\\xf6\\t\\xa0\\x18\\x89*@*\\xea\\x93\\xdca\\x13b@`\\xab\\xcb)\\x01\\x89*@\\xfd\\xfe\\x94*Q\\x13b@\\xa0\\xbb\\xebl\\xc8\\x87*@\\x8cM+\\x85@\\x13b@\\xe9\\xaf\\x1e\\xf7\\xad\\x86*@_*\\xfd\\x843\\x13b@\\xe5W:\\x1f\\x9e\\x85*@\\xe9i\\x87\\xbf&\\x13b@T\\x85\\xcd\\x00\\x17\\x84*@c\\x9e\\\\S \\x13b@}\\x06\\xd4\\x9bQ\\x83*@f\\xe1\\xb2\\n\\x1b\\x13b@\\x18\\x00qW\\xaf\\x82*@\\xed\\x88C6\\x10\\x13b@\\xb1E\\x99\\r2\\x81*@Xs\\x80`\\x0e\\x13b@\\xa7}s\\x7f\\xf5\\x80*@z\\xcb\\x9c.\\x0b\\x13b@\\xa75\\x94\\xda\\x8b\\x80*@\\x10\\xf0k$\\t\\x13b@\\xe0\\x0f?\\xff=\\x80*@J\\x7f/\\x85\\x07\\x13b@\\x00\\x00\\x00\\x00\\x00\\x80*@\\xf4\\xe5\\xccv\\x05\\x13b@\\x00\\x00\\x00\\x00\\x00\\x80*@\\xd9\\xb6\\xefQ\\xff\\x12b@\\x01\\x00\\x00\\x00\\x00\\x80*@{\\xfc\\xa5E\\xfd\\x12b@\\x00\\x00\\x00\\x00\\x00\\x80*@2\\xadMc\\xfb\\x12b@\\xfe\\xf0\\xf3\\xdf\\x83\\x7f*@\\x86\\xaeD\\xa0\\xfa\\x12b@\\x96\\x1f\\x7fiQ\\x7f*@\\x13\\xa3\\xae\\xb5\\xf7\\x12b@>\\xe9D\\x82\\xa9~*@\\xa9\\xe1"\\xf7\\xf4\\x12b@V!\\xac\\xc6\\x12~*@P=\\x99\\x7f\\xf4\\x12b@\\xc3\\x14\\xe5\\xd2\\xf8}*@l&\\xdfl\\xf3\\x12b@\\x8a\\x87\\xbe\\xbb\\x95}*@\\x1e\\x16jM\\xf3\\x12b@T8\\x82T\\x8a}*@[\\xb0T\\x17\\xf0\\x12b@\\x84*\\xfc\\x19\\xde|*@\\xc2\\xddY\\xbb\\xed\\x12b@\\\\\\x8f\\xc2\\xf5(|*@\\x84\\x86\\xc5\\xa8\\xeb\\x12b@\\x19\\xf7\\xad\\xd6\\x89{*@P_\\x96v\\xea\\x12b@a\\xe1$\\xcd\\x1f{*@\\t\\xe7\\x1af\\xe8\\x12b@=\\xe75v\\x89z*@\\xbf\\n\\xf0\\xdd\\xe6\\x12b@0\\x93o\\xb6\\xb9y*@\\x0fO\\xaf\\x94\\xe5\\x12b@T\\x83\\xf7U\\xb9x*@\\xd0\\xf7\\x1a\\x82\\xe3\\x12b@\\xa9\\x13\\x97\\xe3\\x15x*@q\\x96Y\\x84\\xe2\\x12b@\\xec\\xa1DK\\x1ew*@\\x95\\x13\\xb4\\xc9\\xe1\\x12b@Swe\\x17\\x0cv*@\\xda\\x8f\\x14\\x91\\xe1\\x12b@\\x01\\x9a\\xcf\\xb9\\xdbu*@.\\x91\\x0b\\xce\\xe0\\x12b@\\xdf\\x95\\xebm3u*@H\\x1d\\xe4\\xf5\\xe0\\x12b@\\xc8\\xed\\x97OVt*@q\\x96Y\\x84\\xe2\\x12b@\\xabED1ys*@\\x8e\\xee\\xe7\\x14\\xe4\\x12b@\\xf5t<f\\xa0r*@\\xbc\\xf0J\\x92\\xe7\\x12b@=\\xa2Busq*@\\xc6\\x8f\\xf8\\x15\\xeb\\x12b@\\xf7Q\\xd4\\x99{p*@\\xb1T\\xde\\x8e\\xf0\\x12b@\\x06\\xe4\\xd9\\xe5[o*@\\xf0sCS\\xf6\\x12b@\\xbd?\\xde\\xabVn*@g{\\xf4\\x86\\xfb\\x12b@\\x966\\xe34Dm*@\\x82\\xcf\\x0f#\\x04\\x13b@\\xc8\\n~\\x1bbl*@7x_\\x95\\x0b\\x13b@\\xb6K\\x1b\\x0eKk*@[\\xeda/\\x14\\x13b@\\x9d\\xe3jdWj*@\\xfc\\x1b\\xb4W\\x1f\\x13b@]-wf\\x82i*@\\x92]i\\x19)\\x13b@\\xb6\\xf3\\xc4s\\xb6h*@\\xe2\\xees|4\\x13b@\\xa0*mq\\x8dg*@\\xd0\\x13\\x96x@\\x13b@\\x9b\\x0cU1\\x95f*@2\\x05k\\x9cM\\x13b@w\\xf4\\x86\\xfb\\xc8e*@L!W\\xeaY\\x13b@\\x85\\xcek\\xec\\x12e*@\\x98\\x8d\\x95\\x98g\\x13b@}\\xfd\\x10\\x1b,d*@"\\xaa\\xf0gx\\x13b@g/\\xdbN[c*@>^H\\x87\\x87\\x13b@~SX\\xa9\\xa0b*@wn\\xa1+\\x91\\x13b@n\\x17\\x9a\\xeb4b*@N\\xf1\\xb8\\xa8\\x96\\x13b@\\x17\\xa3\\xae\\xb5\\xf7a*@\\xc7\\x88\\x0b@\\xa3\\x13b@1\\xd1 \\x05Oa*@ \\xbd\\xa8\\xdd\\xaf\\x13b@\\xa4\\xd9\\x03\\xad\\xc0`*@w\\x89\\xb1L\\xbf\\x13b@\\xecF\\xe6\\x91?`*@\\x8a_x%\\xc9\\x13b@\\x8b\\xa5H\\xbe\\x12`*@\\x0f\\xbf\\x9bn\\xd9\\x13b@l\\x85w\\xb9\\x88_*@\\xe7\\xac\\x16\\xd8\\xe3\\x13b@\\\\\\x1d\\x00qW_*@\\x9b\\x07wg\\xed\\x13b@?\\xb5\\x88(&_*@\\x00\\x00\\x00\\x00\\x00\\x14b@\\xbe\\x14\\x1e4\\xbb^*@\\xc9]K\\xc8\\x07\\x14b@uYLl>^*@\\t\\x1c\\xd0\\xd2\\x15\\x14b@\\xe4\\x9f\\x19\\xc4\\x07^*@\\xe9\\xf6Ye&\\x14b@m\\x84\\x0c\\xe4\\xd9]*@F\\x10\\xae\\x80B\\x14b@\\x8dW\\xe7\\x18\\x90]*@\\xbb~\\xc1nX\\x14b@\\xf9-:Yj]*@L\\xc7\\x9cgl\\x14b@\\x14\\xd5[\\x03[]*@\\xf5\\x9f5?~\\x14b@\\x17\\x7f\\xa2\\xb2a]*@8\\x87k\\xb5\\x87\\x14b@C\\xaa(^e]*@\\x10\\xee\\x95y\\xab\\x14b@\\x18#\\x12\\x85\\x96]*@\\xad\\x1b\\xb6-\\xca\\x14b@0H\\xc1S\\xc8]*@\\x9b\\x07wg\\xed\\x14b@c\\xa5\\x10\\xc8%^*@\\xc5\\xaf\\x1fb\\x03\\x15b@\\xef\\xc7\\xed\\x97O^*@\\x98\\xa42\\xc5\\x1c\\x15b@\\x8b,`\\x02\\xb7^*@T\\xb0\\x8dx2\\x15b@\\x90z\\x16\\x84\\xf2^*@\\x98\\xa9\\x10\\x8fD\\x15b@\\x0f\\x0b\\xb5\\xa6y_*@\\xc2\\xcc>\\x8fQ\\x15b@\\xde:\\xffv\\xd9_*@\\x89\\x83\\x84(_\\x15b@L\\x8b\\xfa$w`*@\\x9d\\x12\\x10\\x93p\\x15b@i\\x8e\\xac\\xfc2`*@k`\\xab\\x04\\x8b\\x15b@\\xb4\\xaa\\xec\\xbb"`*@O\\xd3.\\xa6\\x99\\x15b@\\xa3sE)!`*@C\\x93\\x8b1\\xb0\\x15b@L4H\\xc1S`*@\\x02k\\x9cM\\xc7\\x15b@\\x10\\x93p!\\x8f`*@\\xa94)\\x05\\xdd\\x15b@A\\xd3\\xd9\\xc9\\xe0`*@\\xdc\\xdc_=\\xee\\x15b@\\xcc\\t\\xa1\\x83.a*@\\xfd\\xf8K\\x8b\\xfa\\x15b@\\xb9\\xe0\\x0c\\xfe~a*@J\\x99\\xd4\\xd0\\x06\\x16b@[\\xc8\\xeaV\\xcfa*@&p\\xebn\\x1e\\x16b@\\xf0\\x86\\xfb\\xc8\\xada*@"U\\x14\\xaf2\\x16b@\\xfd\\xd9\\x8f\\x14\\x91a*@\\xd0\\x0f#\\x84G\\x16b@3l\\x94\\xf5\\x9ba*@H\\x03?\\xaaa\\x16b@\\x96\\x85\\xaf\\xafua*@|0\\xf0\\xdc{\\x16b@\\xf0L/1\\x96a*@\\xc4\\xba\\xb8\\x8d\\x86\\x16b@\\xf1\\x1cX\\x8e\\x90a*@\\xd6X\\xc2\\xda\\x98\\x16b@\\x11\\x1b,\\x9c\\xa4a*@\\xa7)\\xc9:\\x9c\\x16b@\\x0eK\\x03?\\xaaa*@3\\x19\\x8e\\xe7\\xb3\\x1
--------------------------------------------------
Table full name: NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.URBAN_AREAS
Column name: internal_point_lat Type: FLOAT
Column name: internal_point_geom Type: BINARY
Column name: internal_point_lon Type: FLOAT
Column name: urban_area_geom Type: BINARY
Column name: geo_id Type: TEXT
Column name: name Type: TEXT
Column name: functional_status Type: TEXT
Column name: urban_area_code Type: TEXT
Column name: area_lsad_code Type: TEXT
Column name: lsad_name Type: TEXT
Column name: type Type: TEXT
Column name: mtfcc_feature_class_code Type: TEXT
Column name: area_land_meters Type: FLOAT
Column name: area_water_meters Type: FLOAT
Sample rows:
[{'geo_id': '16777', 'urban_area_code': '16777', 'name': 'Christopher, IL', 'lsad_name': 'Christopher, IL Urban Cluster', 'area_lsad_code': '76', 'mtfcc_feature_class_code': 'G3500', 'type': 'C', 'functional_status': 'S', 'area_land_meters': 7398804.0, 'area_water_meters': 18197.0, 'internal_point_lon': -89.061257, 'internal_point_lat': 37.9766857, 'internal_point_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\xab\\xe9z\\xa2\\xebCV\\xc0E\\xfcy\\t\\x04\\xfdB@')", 'urban_area_geom': 'bytearray(b\'\\x01\\x06\\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x80\\x01\\x00\\x00\\xeb1\\x91\\xd2lDV\\xc0\\x16\\x8e \\x95b\\xfdB@|\\xeb\\xc3z\\xa3DV\\xc0\\x01\\x87P\\xa5f\\xfdB@\\xec\\x13@1\\xb2DV\\xc0\\xf5\\xd8\\x96\\x01g\\xfdB@\\xab^~\\xa7\\xc9DV\\xc0\\x9b\\x8d\\x95\\x98g\\xfdB@\\xbc\\xc9o\\xd1\\xc9DV\\xc0k\\xf3\\xff\\xaa#\\xfdB@{.S\\x93\\xe0DV\\xc0rcz\\xc2\\x12\\xfdB@\\xcf\\xa2w*\\xe0DV\\xc0\\xa4\\x1baQ\\x11\\xfdB@L\\xde\\x003\\xdfDV\\xc0-S\\x93\\xe0\\r\\xfdB@h\\xa9\\xbc\\x1d\\xe1DV\\xc0\\xfe\\x02A\\x80\\x0c\\xfdB@\\xd7fc%\\xe6DV\\xc0;\\x9d+J\\t\\xfdB@\\x98\\x16\\xf5I\\xeeDV\\xc0\\xa32\\xc5\\x1c\\x04\\xfdB@\\xff\\xe2\\x194\\xf4DV\\xc0\\x82\\xc4v\\xf7\\x00\\xfdB@+cC7\\xfbDV\\xc0\\xbb\\xa1);\\xfd\\xfcB@h\\xe6\\xc95\\x05EV\\xc0\\x08\\xdbO\\xc6\\xf8\\xfcB@\\xcc\\x91\\x95_\\x06EV\\xc0\\x04\\x1e\\x18@\\xf8\\xfcB@\\x14>[\\x07\\x07EV\\xc0\\xb1\\xc3\\x98\\xf4\\xf7\\xfcB@\\x96\\xe8,\\xb3\\x08EV\\xc0h\\x17\\xd3L\\xf7\\xfcB@\\x86\\xfft\\x03\\x05EV\\xc0\\x03\\xcd\\xe7\\xdc\\xed\\xfcB@\\n\\x12\\xdb\\xdd\\x03EV\\xc0\\xfdC\\xfa\\xed\\xeb\\xfcB@@\\xbbC\\x8a\\x01EV\\xc0"\\x82qp\\xe9\\xfcB@\\xca\\xbe+\\x82\\xffDV\\xc0\\xd6\\x18tB\\xe8\\xfcB@\\xf9\\xd7\\xf2\\xca\\xf5DV\\xc0d\\xa5I)\\xe8\\xfcB@\\x1f-\\xce\\x18\\xe6DV\\xc0\\xe1\\xc6-\\xe6\\xe7\\xfcB@L\\x12K\\xca\\xddDV\\xc0#\\xb6\\xbb\\x07\\xe8\\xfcB@zrM\\x81\\xccDV\\xc0v\\x10;S\\xe8\\xfcB@\\xe5\\xceL0\\x9cDV\\xc0g\\r\\xdeW\\xe5\\xfcB@\\x1b*\\xc6\\xf9\\x9bDV\\xc0W8I\\xf3\\xc7\\xfcB@9Cq\\xc7\\x9bDV\\xc0k\\xc1\\x8b\\xbe\\x82\\xfcB@\\x99\\x0b\\\\\\x1ekDV\\xc0\\x82\\x1d\\xff\\x05\\x82\\xfcB@\\xd570\\xb9QDV\\xc0\\xf3\\x90)\\x1f\\x82\\xfcB@N\\xb6\\x81;PDV\\xc0\\xf3\\x90)\\x1f\\x82\\xfcB@5t\\xb3?PDV\\xc0\\xa3\\xe9\\xecdp\\xfcB@p!\\x8f\\xe0FDV\\xc00v\\xc2Kp\\xfcB@\\xa0\\xa5+\\xd8FDV\\xc0f\\xa02\\xfe}\\xfcB@\\xf6\\xcf\\xd3\\x80ADV\\xc0\\xf4,\\x08\\xe5}\\xfcB@\\xfb\\xad\\x9d(\\tDV\\xc0H\\xbb\\xd1\\xc7|\\xfcB@\\xcbw\\xf0\\x13\\x07DV\\xc0H\\xbb\\xd1\\xc7|\\xfcB@U-\\xe9(\\x07DV\\xc0_\\xa9.\\xe0e\\xfcB@&\\xa9L1\\x07DV\\xc0\\xa34\\x9b\\xc7a\\xfcB@\\xa3\\xb0\\x8b\\xa2\\x07DV\\xc0\\xc5\\x1do\\xf2[\\xfcB@lU\\x12\\xd9\\x07DV\\xc06\\xf9-:Y\\xfcB@\\xbb\\xb5L\\x86\\xe3CV\\xc0\\x14#K\\xe6X\\xfcB@\\xde\\x8b/\\xda\\xe3CV\\xc0\\x8c\\xfc\\xfa!6\\xfcB@\\x86\\xa8\\xc2\\x9f\\xe1CV\\xc0Zx^*6\\xfcB@\\xc4B\\xadi\\xdeCV\\xc0\\xad\\xd2\\xddu6\\xfcB@\\x05\\xfb\\xafs\\xd3CV\\xc0x\\x91\\t\\xf85\\xfcB@*\\x02\\x9c\\xde\\xc5CV\\xc0H\\rm\\x006\\xfcB@S\\xaf[\\x04\\xc6CV\\xc0\\xaf\\x1d\\x8c\\xd8\\\'\\xfcB@i\\x89\\x95\\xd1\\xc8CV\\xc0\\xaf\\x1d\\x8c\\xd8\\\'\\xfcB@\\xadK\\x8d\\xd0\\xcfCV\\xc0\\xdd\\xa1(\\xd0\\\'\\xfcB@~\\xc7\\xf0\\xd8\\xcfCV\\xc0\\xb7\\xbd\\xdd\\x92\\x1c\\xfcB@\\x87\\xbf&k\\xd4CV\\xc0\\x869A\\x9b\\x1c\\xfcB@\\x9f\\x01\\xf5f\\xd4CV\\xc0\\xbdJ>v\\x17\\xfcB@@\\xf9\\xbbw\\xd4CV\\xc0\\x9a\\xa2#\\xb9\\xfc\\xfbB@ek}\\x91\\xd0CV\\xc0\\xad\\r\\x15\\xe3\\xfc\\xfbB@\\xac1\\xe8\\x84\\xd0CV\\xc0g\\xc9\\xe3i\\xf9\\xfbB@\\xe0\\xf0\\x82\\x88\\xd4CV\\xc0W^\\xf2?\\xf9\\xfbB@\\x10u\\x1f\\x80\\xd4CV\\xc0\\x17\\xd7\\xf8L\\xf6\\xfbB@\\x92"2\\xac\\xe2CV\\xc09\\xad\\xdb\\xa0\\xf6\\xfbB@\\xa2\\x8d#\\xd6\\xe2CV\\xc0v%\\xc9s}\\xfbB@\\xb7`\\xa9.\\xe0CV\\xc0\\xd7-\\x02c}\\xfbB@%\\xb09\\x07\\xcfCV\\xc0\\xe5\\xdb\\xbb\\x06}\\xfbB@f\\x9f\\xc7(\\xcfCV\\xc0\\xde\\x86\\x18\\xafy\\xfbB@\\xca\\xdc|#\\xbaCV\\xc0\\xa9ED1y\\xfbB@\\xf04\\x99\\xf1\\xb6CV\\xc08\\xd2\\x19\\x18y\\xfbB@A\\n\\x9eB\\xaeCV\\xc08\\xd2\\x19\\x18y\\xfbB@\\xe2\\x01eS\\xaeCV\\xc0\\xc7\\xbc\\x8e8d\\xfbB@\\xf7\\x8an\\xbd\\xa6CV\\xc0\\x84\\xcd\\x00\\x17d\\xfbB@\\x7fj\\xbct\\x93CV\\xc0\\xe3\\xd59\\x06d\\xfbB@\\xaf\\xeeXl\\x93CV\\xc0\\x80x]\\xbf`\\xfbB@}\\xe5Az\\x8aCV\\xc0\\xb1\\xfc\\xf9\\xb6`\\xfbB@\\xd7\\x16\\x9e\\x97\\x8aCV\\xc0\\x84\\xc7~\\x16K\\xfbB@\\xf3\\xad\\x0f\\xeb\\x8dCV\\xc0\\x84\\xc7~\\x16K\\xfbB@\\xc3)s\\xf3\\x8dCV\\xc0\\xc51\\x92=B\\xfbB@*\\x10=)\\x93CV\\xc0\\xa7\\x18\\xe7oB\\xfbB@CR\\x0b%\\x93CV\\xc0r?\\xa7 ?\\xfbB@\\xe73\\xa0\\xde\\x8cCV\\xc0r?\\xa7 ?\\xfbB@]a\\xc1\\xfd\\x80CV\\xc0s?\\xa7 ?\\xfbB@}\\xae\\xb6b\\x7fCV\\xc0\\xef`\\x8b\\xdd>\\xfbB@\\xb3W\\x1f\\x0f}CV\\xc0\\xcd\\x8a\\xa8\\x89>\\xfbB@8\\xb53LmCV\\xc0\\xe0\\xf5\\x99\\xb3>\\xfbB@i9\\xd0CmCV\\xc0\\x1bE\\xd6\\x1aJ\\xfbB@\\x98\\xbdl;mCV\\xc0q\\xdd\\x94\\xf2Z\\xfbB@\\xb0\\xff:7mCV\\xc0pA\\xb6,_\\xfbB@\\xb0\\xff:7mCV\\xc0\\x98\\xa0\\x86oa\\xfbB@\\xc7A\\t3mCV\\xc01s\\x81\\xcbc\\xfbB@\\xc7A\\t3mCV\\xc0<\\xed\\xf0\\xd7d\\xfbB@\\xf6\\xc5\\xa5*mCV\\xc0nG8-x\\xfbB@\\xf9\\x13\\x95\\rkCV\\xc0.X\\xaa\\x0bx\\xfbB@\\xf9\\x13\\x95\\rkCV\\xc0\\x02\\xa46qr\\xfbB@OX\\xe2\\x01eCV\\xc0\\xbd\\xb4\\xa8Or\\xfbB@7J^\\x9dcCV\\xc0 \\xbd\\xe1>r\\xfbB@dE\\r\\xa6aCV\\xc0\\t\\x82\\xc7\\xb7w\\xfbB@\\xa7\\x1eip[CV\\xc0\\xc9\\x929\\x96w\\xfbB@\\xa1G\\x8c\\x9e[CV\\xc0{6\\xab>W\\xfbB@\\xa1G\\x8c\\x9e[CV\\xc0i\\xff\\x03\\xacU\\xfbB@\\xa1G\\x8c\\x9e[CV\\xc0\\x16\\r\\x19\\x8fR\\xfbB@\\x89\\x05\\xbe\\xa2[CV\\xc0\\xcd\\x0f#\\x84G\\xfbB@\\x89\\x05\\xbe\\xa2[CV\\xc0\\xb9\\x83\\xd8\\x99B\\xfbB@\\x00jj\\xd9ZCV\\xc0k\\xe6\\x90\\xd4B\\xfbB@\\xd2\\xffr-ZCV\\xc0k\\xe6\\x90\\xd4B\\xfbB@\\xb9\\xbd\\xa41ZCV\\xc0\\x1a(\\xf0N>\\xfbB@\\xd1tv28CV\\xc0\\xf7Q\\r\\xfb=\\xfbB@\\xa0\\xf0\\xd9:8CV\\xc0\\xee\\xc4\\xac\\x17C\\xfbB@ql=C8CV\\xc0M\\xfd\\xbc\\xa9H\\xfbB@\\x19;\\xe1%8CV\\xc0\\x1cUM\\x10u\\xfbB@\\x01\\xf9\\x12*8CV\\xc0s\\xd0%\\x1cz\\xfbB@C\\x02F\\x977CV\\xc0s\\xd0%\\x1cz\\xfbB@\\xdbL\\x85x$CV\\xc0\\xb0\\x02|\\xb7y\\xfbB@\\x94\\xd4\\th"CV\\xc0\\xde\\x86\\x18\\xafy\\xfbB@\\xc4rK\\xab!CV\\xc0\\x0e\\x0b\\xb5\\xa6y\\xfbB@\\xee9\\xb0\\x1c!CV\\xc0\\x0e\\x0b\\xb5\\xa6y\\xfbB@T\\x19\\xc6\\xdd CV\\xc0\\x0e\\x0b\\xb5\\xa6y\\xfbB@7\\x1a\\xc0[ CV\\xc0?\\x8fQ\\x9ey\\xfbB@\\x97VC\\xe2\\x1eCV\\xc0?\\x8fQ\\x9ey\\xfbB@\\xa3\\x1e\\xa2\\xd1\\x1dCV\\xc0>\\x8fQ\\x9ey\\xfbB@V\\xb5\\xa4\\xa3\\x1cCV\\xc0n\\x13\\xee\\x95y\\xfbB@\\xce\\x19Q\\xda\\x1bCV\\xc0n\\x13\\xee\\x95y\\xfbB@\\xc5o\\n+\\x15CV\\xc0n\\x13\\xee\\x95y\\xfbB@\\xa5\\x9d\\x9a\\xcb\\rCV\\xc0\\x9d\\x97\\x8a\\x8dy\\xfbB@;\\x1b\\xf2\\xcf\\x0cCV\\xc0\\x9d\\x97\\x8a\\x8dy\\xfbB@\\x9e[\\xe8J\\x04CV\\xc0\\xfc\\x9f\\xc3|y\\xfbB@`V(\\xd2\\xfdBV\\xc0-$`ty\\xfbB@\\x9c\\xa2#\\xb9\\xfcBV\\xc0.$`ty\\xfbB@\\xf00\\xed\\x9b\\xfbBV\\xc0WSY\\x14v\\xfbB@+cC7\\xfbBV\\xc0)\\xcf\\xbc\\x1cv\\xfbB@F[\\x95D\\xf6BV\\xc0\\x88\\xd7\\xf5\\x0bv\\xfbB@\\xa5}s\\x7f\\xf5BV\\xc0\\x89\\xd7\\xf5\\x0bv\\xfbB@\\xe9\\xee:\\x1b\\xf2BV\\xc0\\xd4t=\\xd1u\\xfbB@\\xcb\\xb8\\xa9\\x81\\xe6BV\\xc05}v\\xc0u\\xfbB@\\xdd=@\\xf7\\xe5BV\\xc0n\\xc2\\xbd2o\\xfbB@\\xc0X\\xdf\\xc0\\xe4BV\\xc0\\x10\\x053\\xa6`\\xfbB@\\xcd >\\xb0\\xe3BV\\xc0\\xedE\\xb4\\x1dS\\xfbB@$\\xb3z\\x87\\xdbBV\\xc0a\\x0e\\x82\\x8eV\\xfbB@\\xb9\\x16-@\\xdbBV\\xc0\\xbc\\x02\\xd1\\x932\\xfbB@l\\xad/\\x12\\xdaBV\\xc0\\x93\\xd7J\\xe8.\\xfbB@\\xf1A\\xcff\\xd5BV\\xc0\\x06\\x96#d \\xfbB@\\xaa{ds\\xd5BV\\xc0\\xb1\\xe9\\x08\\xe0f\\xfbB@\\xaa{ds\\xd5BV\\xc0\\xf0l\\x8f\\xdep\\xfbB@\\xf1A\\xcff\\xd5BV\\xc0\\x8d\\xc8w)u\\xfbB@\\x06\\xf8n\\xf3\\xc6BV\\xc0\\x9f3iSu\\xfbB@EK\\x1eO\\xcbBV\\xc0\\xc8^\\xef\\xfex\\xfbB@\\x8e\\xadg\\x08\\xc7BV\\xc0\\xcc\\x1b\\\'\\x85y\\xfbB@lzPP\\x8aBV\\xc0!\\xde:\\xffv\\xfbB@\\xc5\\xf9\\x9bP\\x88BV\\xc0\\xe1\\xee\\xac\\xddv\\xfbB@7m\\xc6i\\x88BV\\xc0\\x1b\\xf3:\\xe2\\x90\\xfbB@\\x0cr\\x17a\\x8aBV\\xc0\\xean\\x9e\\xea\\x90\\xfbB@Y\\x0f_&\\x8aBV\\xc0$\\x90\\x12\\xbb\\xb6\\xfbB@\\x02\\xd7\\x153\\xc2BV\\xc0\\x1e\\x9f\\x90\\x9d\\xb7\\xfbB@\\xf1\\\'*\\x1b\\xd6BV\\xc0\\xcf\\x01I\\xd8\\xb7\\xfbB@\\xf1\\\'*\\x1b\\xd6BV\\xc0\\x0e\\x04\\xc8\\xd0\\xb1\\xfbB@!\\xac\\xc6\\x12\\xd6BV\\xc0\\x84\\x9f8\\x80~\\xfbB@!\\xac\\xc6\\x12\\xd6BV\\xc0\\xf7\\xaeA_z\\xfbB@!\\xac\\xc6\\x12\\xd6BV\\xc0\\xe6w\\x9a\\xccx\\xfbB@\\xbf\\xed\\t\\x12\\xdbBV\\xc0W\\xeb\\xc4\\xe5x\\xfbB@\\xdd=@\\xf7\\xe5BV\\xc0iV\\xb6\\x0fy\\xfbB@xD\\x85\\xea\\xe6BV\\xc08\\xd2\\x19\\x18y\\xfbB@5X8I\\xf3BV\\xc0\\x1a\\xb9nJy\\xfbB@\\x99\\xb5\\x14\\x90\\xf6BV\\xc0\\xbd\\xb05[y\\xfbB@\\xe6\\x1e\\x12\\xbe\\xf7BV\\xc0\\x8b,\\x99cy\\xfbB@\\xbe\\xf6\\xcc\\x92\\x00CV\\xc0\\xea\\x06\\n\\xbc\\x93\\xfbB@@\\xa4\\xdf\\xbe\\x0eCV\\xc0n\\xc1R]\\xc0\\xfbB@\\x17|\\x9a\\x93\\x17CV\\xc0\\xe6\\xb0\\xfb\\x8e\\xe1\\xfbB@\\xb1\\xe6\\x00\\xc1\\x1cCV\\xc0[\\x1b*\\xc6\\xf9\\xfbB@\\x18\\xe7oB!CV\\xc0\\x0cP\\x1aj\\x14\\xfcB@\\x87\\xbe\\xbb\\x95%CV\\xc0\\x02\\xfd\\x85\\x1e1\\xfcB@\\xc2\\x88}\\x02(CV\\xc0\\xd6\\x82\\xde\\x1bC\\xfcB@\\xae\\x9bR^+CV\\xc0\\xd9\\xc6\\x9f\\xa8l\\xfcB@\\xb5\\xf4h\\xaa\\\'CV\\xc07\\xcf\\xd8\\x97l\\xfcB@\\xf3\\xa8\\xf8\\xbf#CV\\xc0\\x99\\xd7\\x11\\x87l\\xfcB@\\xa2\\xd0\\xb2\\xee\\x1fCV\\xc0\\xf7\\xdfJvl\\xfcB@B\\xab\\x933\\x14CV\\xc0hSu\\x8fl\\xfcB@\\xb3\\x1e\\xbeL\\x14CV\\xc0\\xe3\\x194\\xf4O\\xfcB@\\xb3\\x1e\\xbeL\\x14CV\\xc0&\\xbc\\x04\\xa7>\\xfcB@\\xc6\\x89\\xafv\\x14CV\\xc0\\xe6\\xaf\\x90\\xb92\\xfcB@\\x1e\\xbb\\x0b\\x94\\x14CV\\xc0\\x11\\xd9\\x07Y\\x16\\xfcB@O?\\xa8\\x8b\\x14CV\\xc0\\x80\\xf1\\x0c\\x1a\\xfa\\xfbB@]\\x86\\xfft\\x03CV\\xc0\\xea\\xa7\\xff\\xac\\xf9\\xfbB@k\\xcdV^\\xf2BV\\xc0\\\'\\xdaUH\\xf9\\xfbB@}\\x1bb\\xbc\\xe6BV\\xc0F\\xf3\\x00\\x16\\xf9\\xfbB@\\xb08\\x9c\\xf9\\xd5BV\\xc0p\\xbae\\x87\\xf8\\xfbB@\\xf6\\xfe\\x06\\xed\\xd5BV\\xc0T\\xab\\xaf\\xae\\n\\xfcB@\\xe7\\xc4\\x1e\\xda\\xc7BV\\xc0\\x1dj\\xdb0\\n\\xfcB@\\xe8\\x12\\x0e\\xbd\\xc5BV\\xc0\\x9b\\x8b\\xbf\\xed\\t\\xfcB@q\\x16\\xf6\\xb4\\xc3BV\\xc06\\x92\\x04\\xe1\\n\\xfcB@Z\\x08rP\\xc2BV\\xc0\\x1e\\x02G\\x02\\r\\xfcB@UK:\\xca\\xc1BV\\xc02\\xc2\\xdb\\x83\\x10\\xfcB@\\xb4Ss\\xb9\\xc1BV\\xc0\\xa7\\x8a\\xa9\\xf4\\x13\\xfcB@$\\xc7\\x9d\\xd2\\xc1BV\\xc0p\\xe1@H\\x16\\xfcB@J\\x9d\\x80&\\xc2BV\\xc0\\x9d- \\xb4\\x1e\\xfcB@Ot]\\xf8\\xc1BV\\xc0\\xbc\\xa7r\\xdaS\\xfcB@\\xc0\\xe7\\x87\\x11\\xc2BV\\xc0Y\\x9b\\xc6\\xf6Z\\xfcB@*j0\\r\\xc3BV\\xc0\\xa0drjg\\xfcB@\\xad.\\xa7\\x04\\x
--------------------------------------------------
Table full name: NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ZIP_CODES
Column name: area_land_meters Type: FLOAT
Column name: internal_point_lat Type: FLOAT
Column name: zip_code Type: TEXT
Column name: area_water_meters Type: FLOAT
Column name: state_code Type: TEXT
Column name: fips_class_code Type: TEXT
Column name: zip_code_geom Type: BINARY
Column name: state_fips_code Type: TEXT
Column name: county Type: TEXT
Column name: functional_status Type: TEXT
Column name: state_name Type: TEXT
Column name: internal_point_geom Type: BINARY
Column name: mtfcc_feature_class_code Type: TEXT
Column name: internal_point_lon Type: FLOAT
Column name: city Type: TEXT
Sample rows:
[{'zip_code': '24586', 'city': 'Ringgold', 'county': 'Pittsylvania', 'state_fips_code': '51', 'state_code': 'VA', 'state_name': 'Virginia', 'fips_class_code': 'B5', 'mtfcc_feature_class_code': 'G6350', 'functional_status': 'S', 'area_land_meters': 137409956.0, 'area_water_meters': 646363.0, 'internal_point_lat': 36.6070441, 'internal_point_lon': -79.2766092, 'internal_point_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00t\\xf1\\x12\\xf7\\xb3\\xd1S\\xc0i]\\xfe\\x9e\\xb3MB@')", 'zip_code_geom': 'bytearray(b\'\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\xa5\\x10\\x00\\x00RZ\\x7fK\\x00\\xd7S\\xc0\\xd9+,\\xb8\\x1fNB@i4\\xb9\\x18\\x03\\xd7S\\xc0\\x04\\x8fo\\xef\\x1aNB@w\\x98\\xf6\\xcd\\xfd\\xd6S\\xc0\\xb2\\x17\\n\\xd8\\x0eNB@\\xaf\\x8fN]\\xf9\\xd6S\\xc0\\xfd\\x97k\\xd1\\x02NB@\\t\\xdbO\\xc6\\xf8\\xd6S\\xc0h\\x82\\xa8\\xfb\\x00NB@\\xd2\\xfa[\\x02\\xf0\\xd6S\\xc0r\\xa7t\\xb0\\xfeMB@\\x87\\xdc\\x0c7\\xe0\\xd6S\\xc0\\xe6\\xb6}\\x8f\\xfaMB@=C8f\\xd9\\xd6S\\xc0\\xf2\\x98\\x81\\xca\\xf8MB@\\\\\\x90-\\xcb\\xd7\\xd6S\\xc0\\x03\\x04s\\xf4\\xf8MB@:<\\x84\\xf1\\xd3\\xd6S\\xc0g\\xc9\\xe3i\\xf9MB@65\\xd0|\\xce\\xd6S\\xc0\\x0f~\\xe2\\x00\\xfaMB@\\xba\\xf6\\x05\\xf4\\xc2\\xd6S\\xc0\\x9b\\xd6mP\\xfbMB@{\\xd7\\xa0/\\xbd\\xd6S\\xc0\\x14\\x07\\xd0\\xef\\xfbMB@\\xe8]\\xbc\\x1f\\xb7\\xd6S\\xc0*/\\xf9\\x9f\\xfcMB@\\x92\\xc8>\\xc8\\xb2\\xd6S\\xc00\\xec0&\\xfdMB@<Mf\\xbc\\xad\\xd6S\\xc0\\x81\\xd8\\x99B\\xe7MB@7\\x90.6\\xad\\xd6S\\xc02\\xe6\\xae%\\xe4MB@\\x12\\xbaK\\xe2\\xac\\xd6S\\xc0\\xeam3\\x15\\xe2MB@\\x1e\\x82\\xaa\\xd1\\xab\\xd6S\\xc0\\xfcS\\xaaD\\xd9MB@\\xb0\\xaa^~\\xa7\\xd6S\\xc07/N|\\xb5MB@p#e\\x8b\\xa4\\xd6S\\xc0\\x92@\\x83M\\x9dMB@5\\x0b\\xb4;\\xa4\\xd6S\\xc0\\x04\\x1cB\\x95\\x9aMB@v.\\x8c\\xf4\\xa2\\xd6S\\xc0\\xfc=\\xb1N\\x95MB@\\xe5\\xb4\\xa7\\xe4\\x9c\\xd6S\\xc0\\xfb7/N|MB@p\\xec\\xd9s\\x99\\xd6S\\xc0aHN&nMB@\\x95^\\x9b\\x8d\\x95\\xd6S\\xc0\\xab\\xa7V_]MB@\\xaf<HO\\x91\\xd6S\\xc0\\x93\\x11\\x17\\x80FMB@H\\x8a\\xc8\\xb0\\x8a\\xd6S\\xc0@`\\xe5\\xd0"MB@\\xa3W\\x03\\x94\\x86\\xd6S\\xc0\\xd0~\\xa4\\x88\\x0cMB@n\\x16/\\x16\\x86\\xd6S\\xc0\\xd4;\\xdc\\x0e\\rMB@\\xd1<\\x80E~\\xd6S\\xc0\\x1b\\x18yY\\x13MB@\\xbcbFx{\\xd6S\\xc0\\xe9+H3\\x16MB@\\xca\\xfa\\xcd\\xc4t\\xd6S\\xc0\\x82\\xb7\\x07! MB@\\x9b\\x90\\xd6\\x18t\\xd6S\\xc0r\\x18\\xcc_!MB@w\\xba\\xf3\\xc4s\\xd6S\\xc0\\x0b\\x1f\\x11S"MB@\\xa1\\x81X6s\\xd6S\\xc0\\xf8\\x7f\\xd5\\x91#MB@\\xa6r\\xdaSr\\xd6S\\xc0\\xd3A^\\x0f&MB@\\xe9{\\r\\xc1q\\xd6S\\xc0\\xa3\\x89w\\x80\\\'MB@%\\xc8\\x08\\xa8p\\xd6S\\xc06k\\xf0\\xbe*MB@\\x98\\x89"\\xa4n\\xd6S\\xc0!\\xfc\\x8b\\xa01MB@\\nK<\\xa0l\\xd6S\\xc0}4\\x9c27MB@\\x94\\x82n/i\\xd6S\\xc0s?\\xa7 ?MB@\\xb4\\xb5\\xbeHh\\xd6S\\xc0>\\x96>tAMB@*\\x1ak\\x7fg\\xd6S\\xc01\\xb4:9CMB@\\xfb\\xafs\\xd3f\\xd6S\\xc0\\xc5\\xc9\\xfd\\x0eEMB@\\x0c5\\nIf\\xd6S\\xc0\\x98\\xceN\\x06GMB@\\x84\\x99\\xb6\\x7fe\\xd6S\\xc04\\xa1IbIMB@\\x9d)t^c\\xd6S\\xc0Qs\\xb9\\xc1PMB@\\xa4\\x1a\\xf6{b\\xd6S\\xc0\\xdfc\\xb0\\xe2TMB@o\\xf3\\xc6Ia\\xd6S\\xc0(\\xc9:\\x1c]MB@\\x9ewcAa\\xd6S\\xc0\\xd0}9\\xb3]MB@\\xc2g\\xeb\\xe0`\\xd6S\\xc0?\\xbd\\x195_MB@\\n.V\\xd4`\\xd6S\\xc0v\\xfe\\xed\\xb2_MB@\\xc8>\\xc8\\xb2`\\xd6S\\xc0\\\\\\xa2zk`MB@\\nH\\xfb\\x1f`\\xd6S\\xc0\\xe9\\x92q\\x8cdMB@p[[x^\\xd6S\\xc0\\x05an\\xf7rMB@\\xbe\\xf8\\xa2=^\\xd6S\\xc0\\xfeo\\xec\\xd9sMB@@\\xf1c\\xcc]\\xd6S\\xc0\\x8e\\x94-\\x92vMB@\\xca\\xda\\xa6x\\\\\\xd6S\\xc0\\xd8aL\\xfa{MB@\\xb9\\xa3\\xff\\xe5Z\\xd6S\\xc0L\\xf6\\xcf\\xd3\\x80MB@Z\\xcf\\x10\\x8eY\\xd6S\\xc0\\xfe\\xf0\\xf3\\xdf\\x83MB@\\xaf]\\xdapX\\xd6S\\xc0\\xd2\\xf5D\\xd7\\x85MB@~\\xf3\\xe2\\xc4W\\xd6S\\xc0r\\xb9\\xc1P\\x87MB@zPP\\x8aV\\xd6S\\xc05\\x1f\\xd7\\x86\\x8aMB@\\\'\\x10v\\x8aU\\xd6S\\xc0\\\\\\x16\\x13\\x9b\\x8fMB@9\\x95\\x0c\\x00U\\xd6S\\xc0\\xf4\\x80y\\xc8\\x94MB@\\xf8\\xa5~\\xdeT\\xd6S\\xc0\\xca\\xb9\\x14W\\x95MB@\\x9et"\\xc1T\\xd6S\\xc0v+Kt\\x96MB@4\\xf2y\\xc5S\\xd6S\\xc0\\xdaT\\xdd#\\x9bMB@(^emS\\xd6S\\xc0\\xd4c[\\x06\\x9cMB@u\\xfb\\xac2S\\xd6S\\xc0\\xaeY.\\x1b\\x9dMB@|\\xec.PR\\xd6S\\xc0\\x91\\x0c9\\xb6\\x9eMB@\\x83+\\xa0PO\\xd6S\\xc0\\x17@\\xf8P\\xa2MB@\\xddv\\xa1\\xb9N\\xd6S\\xc0R>\\x04U\\xa3MB@\\x9c\\x87\\x13\\x98N\\xd6S\\xc0\\xcbnf\\xf4\\xa3MB@aobHN\\xd6S\\xc0#\\x86\\x1d\\xc6\\xa4MB@\\xb6K\\x1b\\x0eK\\xd6S\\xc0\\x02\\x05\\xde\\xc9\\xa7MB@\\xfd++MJ\\xd6S\\xc0\\x0f\\x7fM\\xd6\\xa8MB@n\\xb9\\xfa\\xb1I\\xd6S\\xc0~\\xbe-X\\xaaMB@\\xca\\x865\\x95E\\xd6S\\xc0\\xb7\\x88\\xef\\xc4\\xacMB@B9\\xd1\\xaeB\\xd6S\\xc0G\\xad0}\\xafMB@1\\x02*\\x1cA\\xd6S\\xc0\\xfd\\x98\\xd6\\xa6\\xb1MB@\\x0e,G\\xc8@\\xd6S\\xc0\\xf7\\xa7T\\x89\\xb2MB@\\x91$\\x08W@\\xd6S\\xc0\\xf0\\xb6\\xd2k\\xb3MB@,_\\x97\\xe1?\\xd6S\\xc0\\xc1\\xfe\\xeb\\xdc\\xb4MB@\\xe6\\xb2\\xd19?\\xd6S\\xc0\\xf9`\\x19\\x1b\\xbaMB@\\xda\\x1e\\xbd\\xe1>\\xd6S\\xc0\\xdb\\x13$\\xb6\\xbbMB@\\x0fz6\\xab>\\xd6S\\xc0z\\xd7\\xa0/\\xbdMB@{J\\xce\\x89=\\xd6S\\xc0O\\xa8\\xa7\\x8f\\xc0MB@\\x1cv\\xdf1<\\xd6S\\xc0\\x00\\xa3\\xcb\\x9b\\xc3MB@/\\xfbu\\xa7;\\xd6S\\xc0\\xa0fH\\x15\\xc5MB@\\xe9\\xb6D.8\\xd6S\\xc0\\xc8]\\x84)\\xcaMB@s\\xa0\\x87\\xda6\\xd6S\\xc0\\xd4\\xa3\\xa9\\x9e\\xccMB@f\\x0cs\\x826\\xd6S\\xc0l\\xaa\\xee\\x91\\xcdMB@\\xea\\x044\\x116\\xd6S\\xc0g\\xb9lt\\xceMB@m\\xfd\\xf4\\x9f5\\xd6S\\xc0S\\x1a1\\xb3\\xcfMB@?\\xe1\\xec\\xd62\\xd6S\\xc0\\x95\\xf2Z\\t\\xddMB@o\\x99\\xd3e1\\xd6S\\xc0\\x04\\xca\\xa6\\\\\\xe1MB@\\xed\\xba\\xb7"1\\xd6S\\xc09\\x0b{\\xda\\xe1MB@4\\x9b\\xc7a0\\xd6S\\xc0\\xd8\\xce\\xf7S\\xe3MB@\\x1c\\x0b\\n\\x832\\xd6S\\xc0m\\xe4\\xba)\\xe5MB@\\xa4\\xa6]L3\\xd6S\\xc0\\xc6\\xfbq\\xfb\\xe5MB@5\\xe9\\xb6D.\\xd6S\\xc0\\xa0\\xa6\\x96\\xad\\xf5MB@qOWw,\\xd6S\\xc0\\xf6!o\\xb9\\xfaMB@\\xea\\x01\\xf3\\x90)\\xd6S\\xc0\\xceG\\x19q\\x01NB@\\xc6+\\x10=)\\xd6S\\xc0\\nF%u\\x02NB@\\x14\\xc9W\\x02)\\xd6S\\xc0n\\x0b\\x96\\xea\\x02NB@t\\xeb5=(\\xd6S\\xc0\\x84\\xcb*l\\x06NB@\\xbc\\xe5\\xea\\xc7&\\xd6S\\xc04\\xc6Nx\\tNB@\\x99\\x0f\\x08t&\\xd6S\\xc0\\xd1\\xcc\\x93k\\nNB@\\xfe\\xee\\x1d5&\\xd6S\\xc05\\x92\\x04\\xe1\\nNB@;\\x89\\x08\\xff"\\xd6S\\xc0\\xcc`\\x8cH\\x14NB@\\xd6\\xc3\\x97\\x89"\\xd6S\\xc0\\x17\\x96?\\xdf\\x16NB@Y\\xbcX\\x18"\\xd6S\\xc0\\x8b*\\xc3\\xb8\\x1bNB@\\xdd\\xb4\\x19\\xa7!\\xd6S\\xc0c/\\x14\\xb0\\x1dNB@\\xd7\\x11\\x87l \\xd6S\\xc0)Ral!NB@\\xde\\x02\\t\\x8a\\x1f\\xd6S\\xc0X:\\x1f\\x9e%NB@\\xd2n\\xf41\\x1f\\xd6S\\xc0Bg\\x99E(NB@\\x08\\xcam\\xfb\\x1e\\xd6S\\xc0\\x91\\x9cL\\xdc*NB@\\x08\\xcam\\xfb\\x1e\\xd6S\\xc0\\xb6\\xc7\\xd2\\x87.NB@a\\xfb\\xc9\\x18\\x1f\\xd6S\\xc0_|\\xd1\\x1e/NB@+\\xa0PO\\x1f\\xd6S\\xc0\\x1b%\\xaf\\xce1NB@\\xde\\x02\\t\\x8a\\x1f\\xd6S\\xc0\\xceS\\x1dr3NB@\\xde\\x02\\t\\x8a\\x1f\\xd6S\\xc0T\\xbb&\\xa45NB@\\x9c\\x13{h\\x1f\\xd6S\\xc0\\x8e\\xb92\\xa86NB@\\x85\\xd1\\xacl\\x1f\\xd6S\\xc06n1?7NB@Ug\\xb5\\xc0\\x1e\\xd6S\\xc0\\x18\\xed\\xf1B:NB@\\xf7\\x92\\xc6h\\x1d\\xd6S\\xc0\\x99cyW=NB@\\xa3R\\xech\\x1c\\xd6S\\xc0\\to\\x0fB@NB@\\xecL\\xa1\\xf3\\x1a\\xd6S\\xc0{\\x03\\x93\\x1bENB@v6\\xe4\\x9f\\x19\\xd6S\\xc0\\xd9;\\xa3\\xadJNB@M\\xbdn\\x11\\x18\\xd6S\\xc0#\\t\\xc2\\x15PNB@gM,\\xf0\\x15\\xd6S\\xc0-\\xb3\\x08\\xc5VNB@+O \\xec\\x14\\xd6S\\xc0\\xa1{\\xd65ZNB@3\\xdc\\x80\\xcf\\x0f\\xd6S\\xc02\\xaa\\x0c\\xe3nNB@{\\xd65Z\\x0e\\xd6S\\xc0\\x834c\\xd1tNB@q\\x90\\x10\\xe5\\x0b\\xd6S\\xc0G\\x87\\x870~NB@\\xd0\\xb2\\xee\\x1f\\x0b\\xd6S\\xc0\\xf2\\xc4s\\xb6\\x80NB@\\x12\\xbfb\\r\\x17\\xd6S\\xc0I\\x97\\xfe%\\xa9NB@w\\x84\\xd3\\x82\\x17\\xd6S\\xc0\\x90C\\xc4\\xcd\\xa9NB@6a\\xfb\\xc9\\x18\\xd6S\\xc0N \\xec\\x14\\xabNB@\\x9c\\xf9\\xd5\\x1c \\xd6S\\xc0\\xf28\\x0c\\xe6\\xafNB@\\xee\\xeb\\xc09#\\xd6S\\xc0\\xfe~1[\\xb2NB@_\\xad\\xda5!\\xd6S\\xc0y\\x047R\\xb6NB@\\x13x\\\'\\x9f\\x1e\\xd6S\\xc0\\x1b\\xe9\\x0c\\x8c\\xbcNB@DdX\\xc5\\x1b\\xd6S\\xc0\\x94\\xd23\\xbd\\xc4NB@\\x93i4\\xb9\\x18\\xd6S\\xc0\\xfa\\x1c\\x1f-\\xceNB@\\x1c\\xce\\xfcj\\x0e\\xd6S\\xc0!\\xe6\\x92\\xaa\\xedNB@\\x0b}\\xb0\\x8c\\r\\xd6S\\xc0_m\\x8c\\x9d\\xf0NB@\\xe7\\x89\\xe7l\\x01\\xd6S\\xc0\\xd7\\xc0V\\t\\x16OB@\\x06\\xf1\\x81\\x1d\\xff\\xd5S\\xc0K!\\x90K\\x1cOB@FA\\xf0\\xf8\\xf6\\xd5S\\xc09X\\xff\\xe70OB@et@\\x12\\xf6\\xd5S\\xc0\\xc1\\xbf\\x08\\x1a3OB@\\xe9\\xd4\\x95\\xcf\\xf2\\xd5S\\xc0\\x04h[\\xcd:OB@\\xbb\\xb8\\x8d\\x06\\xf0\\xd5S\\xc08\\xd9\\x06\\xee@OB@>\\xe5\\x98,\\xee\\xd5S\\xc0\\x83\\xdao\\xedDOB@\\xc8\\xe8\\x80$\\xec\\xd5S\\xc0\\xeb\\xf4\\x83\\xbaHOB@\\xe7\\x1b\\xd1=\\xeb\\xd5S\\xc0]4d<JOB@\\xbe\\xa2[\\xaf\\xe9\\xd5S\\xc0\\xf5\\x06_\\x98LOB@\\x1e\\xf9\\x83\\x81\\xe7\\xd5S\\xc0\\x14\\xb8u7OOB@=`\\x1e2\\xe5\\xd5S\\xc0\\xf9\\\'\\xb8XQOB@\\xcd\\x06\\x99d\\xe4\\xd5S\\xc0qX\\x1a\\xf8QOB@\\xb6\\x12\\xbaK\\xe2\\xd5S\\xc0\\xff\\xb0\\xa5GSOB@@\\x16\\xa2C\\xe0\\xd5S\\xc0\\xc9;\\x872TOB@\\x99\\x95\\xedC\\xde\\xd5S\\xc0\\xcd\\xf8\\xbe\\xb8TOB@\\x0cW\\x07@\\xdc\\xd5S\\xc0\\x80[w\\xf3TOB@\\x85\\t\\xa3Y\\xd9\\xd5S\\xc0\\x0f\\xe8L\\xdaTOB@E\\x82\\xa9f\\xd6\\xd5S\\xc0\\x08+\\x15TTOB@\\x17\\x9a\\xeb4\\xd2\\xd5S\\xc0{\\xd2\\x89\\x04SOB@\\xb9\\xdc`\\xa8\\xc3\\xd5S\\xc0\\xc5Nx\\tNOB@\\x0c\\xcc\\nE\\xba\\xd5S\\xc0\\xc3\\xf9\\xd4\\xb1JOB@\\xc0|\\xb2b\\xb8\\xd5S\\xc0\\x0e\\x97\\x1cwJOB@C\\x8f\\x18=\\xb7\\xd5S\\xc0\\xaf\\x8e\\xe3\\x87JOB@s-Z\\x80\\xb6\\xd5S\\xc0\\xc3\\xf9\\xd4\\xb1JOB@W\\x96\\xe8,\\xb3\\xd5S\\xc0\\x11\\xe2\\xca\\xd9;OB@tx\\x08\\xe3\\xa7\\xd5S\\xc0\\x83\\x0e\\xba\\x84COB@\\xf45\\xcbe\\xa3\\xd5S\\xc0^\\xd0B\\x02FOB@\\xdd[\\x91\\x98\\xa0\\xd5S\\xc0\\tBy\\x1fGOB@\\xccX4\\x9d\\x9d\\xd5S\\xc0\\xa4H\\xbe\\x12HOB@\\xbdU\\xd7\\xa1\\x9a\\xd5S\\xc0\\x16\\x88\\x9e\\x94IOB@\\xae\\xba\\x0e\\xd5\\x94\\xd5S\\xc0\\x91\\r\\xa4\\x8bMOB@\\xd9\\xe9\\x07u\\x91\\xd5S\\xc0\\x8d\\xa5\\x0f]POB@$\\xe8/\\xf4\\x88\\xd5S\\xc0\\x1a\\xfa\\\'\\xb8XOB@\\xb7xx\\xcf\\x81\\xd5S\\xc0\\xcd\\x15\\xa5\\x84`OB@\\x84\\xd3\\x82\\x17}\\xd5S\\xc0\\xfa\\xc9\\x18\\x1ffOB@\\xbef\\xb9lt\\xd5S\\xc0\\xef\\xa0\\xd9uoOB@+\\x85@.q\\xd5S\\xc0\\xa1\\x9b\\xfd\\x81rOB@&0\\x9d\\xd6m\\xd5S\\xc0\\xd0\\xb7\\x05KuOB@6\\xae\\x7f\\xd7g\\xd5S\\xc0!v\\xa6\\xd0yOB@\\xe4\\xbb\\x94\\xbad\\xd5S\\xc06j\\x85\\xe9{OB@\\x85\\x01K\\xaeb\\xd5S\\xc0\\x12`X\\xfe|OB@\\x81\\x92\\x02\\x0b`\\xd5S\\xc0\\xdc\\xea9\\xe9}OB@\\x9f\\xdf\\xf7o^\\xd5S\\xc0\\x01\\xc1\\x1c=~OB@g\\x97o}X\\xd5S\\xc0\\xdc\\xea9\\xe9}OB@o\\xf0\\x85\\xc9T\\xd5S\\xc0\\xba\\x14W\\x95}OB@#\\xbb\\xd22R\\xd5S\\xc0;\\xf3r\\xd8}OB@\\xf4\\x9e\\xcaiO\\xd5S\\xc0\\x84\\x9f8\\x80~OB@\\x7f\\xbcW\\
--------------------------------------------------
Table full name: NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.CBSA
Column name: cbsa_fips_code Type: TEXT
Column name: name Type: TEXT
Column name: area_water_meters Type: FLOAT
Column name: cbsa_geom Type: BINARY
Column name: csa_geo_id Type: TEXT
Column name: lsad_code Type: TEXT
Column name: msa_indicator Type: TEXT
Column name: area_land_meters Type: FLOAT
Column name: internal_point_geom Type: BINARY
Column name: lsad_name Type: TEXT
Column name: internal_point_longitude Type: FLOAT
Column name: internal_point_latitude Type: FLOAT
Column name: mtfcc_feature_class_code Type: TEXT
Column name: geo_id Type: TEXT
Sample rows:
[{'geo_id': '23980', 'csa_geo_id': '150', 'cbsa_fips_code': '23980', 'name': 'Glasgow, KY', 'lsad_name': 'Glasgow, KY Micro Area', 'lsad_code': 'M2', 'msa_indicator': '2', 'mtfcc_feature_class_code': 'G3110', 'area_land_meters': 2013003235.0, 'area_water_meters': 36168371.0, 'internal_point_latitude': 36.9675705, 'internal_point_longitude': -85.8154965, 'internal_point_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00(`;\\x181tU\\xc0\\x84\\t\\xa3Y\\xd9{B@')", 'cbsa_geom': 'bytearray(b\'\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\xc7\\x05\\x00\\x00\\xc5\\xff\\x1dQ\\xa1oU\\xc0\\xc2\\xb7\\xb0n\\xbc\\x95B@\\xb4Ss\\xb9\\xc1oU\\xc0\\x9b\\xc0tZ\\xb7\\x95B@\\x89\\xcf\\x9d`\\xffoU\\xc0N\\xd2\\xfc1\\xad\\x95B@\\x91E\\x9ax\\x07pU\\xc0\\x00i\\xff\\x03\\xac\\x95B@\\xab8\\xd5Z\\x98qU\\xc0\\xd8\\x10\\x1c\\x97q\\x95B@?\\x1aN\\x99\\x9bqU\\xc0\\x9b\\x12\\x10\\x93p\\x95B@\\xd0\\t\\xa1\\x83.rU\\xc0&n\\x15\\xc4@\\x95B@\\xe1\\xb3up\\xb0rU\\xc0\\x0b\\x02+\\x87\\x16\\x95B@\\x14W\\x95}WsU\\xc0\\x9e\\x1e\\xdb2\\xe0\\x94B@\\x08\\xe6\\xe8\\xf1{sU\\xc0\\xb2\\x08\\xc5V\\xd0\\x94B@3\\xdc\\x80\\xcf\\x0ftU\\xc0\\x08\\xa2\\xee\\x03\\x90\\x94B@\\x8fK\\x1cy tU\\xc0[C\\xa9\\xbd\\x88\\x94B@+\\xdd]gCtU\\xc0\\xe4]\\xf5\\x80y\\x94B@\\x81X6sHtU\\xc0^\\xf6\\xebNw\\x94B@\\x18\\xec\\x86m\\x8btU\\xc0\\x8f\\x10\\xe5\\x0bZ\\x94B@\\x85\\x8f\\x88)\\x91tU\\xc0\\xb3N\\\\\\x8eW\\x94B@|L\\xa44\\x9btU\\xc0\\xa6\\x7fI*S\\x94B@\\x92\\x16.\\xab\\xb0tU\\xc0\\x10\\xb1\\xc1\\xc2I\\x94B@+g\\xef\\x8c\\xb6tU\\xc0\\x93\\xf7q4G\\x94B@ D2\\xe4\\xd8tU\\xc0/}\\xaf!8\\x94B@@J\\xec\\xda\\xdetU\\xc0\\xe3G\\xfc\\x8a5\\x94B@\\xee\\x96\\xe4\\x80]uU\\xc0\\x1dM\\xf5d\\xfe\\x93B@\\xb6H\\xda\\x8d>vU\\xc0\\xf59>Z\\x9c\\x93B@\\xb7\\\'HlwvU\\xc0:#J{\\x83\\x93B@\\xd2\\xbe\\xb9\\xbfzvU\\xc0i\\xdb0\\n\\x82\\x93B@\\x9c1\\xcc\\t\\xdavU\\xc0\\x96\\x1b\\x0cuX\\x93B@"\\x17\\x9c\\xc1\\xdfvU\\xc0\\xdf\\xfb\\x1b\\xb4W\\x93B@4\\xb9\\x18\\x03\\xebvU\\xc0\\xd9r.\\xc5U\\x93B@O\\x87\\x15n\\xf9vU\\xc0\\xfe\\xb0\\xa5GS\\x93B@Lk\\xd3\\xd8^wU\\xc0g)YNB\\x93B@\\x07t&m\\xaawU\\xc0\\r\\xf5\\xbb\\xb05\\x93B@\\xa77\\xa3\\xe6\\xabwU\\xc0\\x8a\\x16\\xa0m5\\x93B@\\x95c\\xb2\\xb8\\xffwU\\xc0\\x02\\x92\\xb0o\\\'\\x93B@\\xab\\xd1\\xab\\x01JxU\\xc0\\x8c\\xa8\\x89>\\x1f\\x93B@+.\\x8e\\xcaMxU\\xc05N\\n\\xf3\\x1e\\x93B@z4\\xd5\\x93\\xf9xU\\xc0\\xec\\xc7&\\xf9\\x11\\x93B@Y\\x17\\xb7\\xd1\\x00yU\\xc0\\x86\\x02\\xb6\\x83\\x11\\x93B@\\xff\\xcb\\xb5h\\x01zU\\xc0B=}\\x04\\xfe\\x92B@K\\x01i\\xff\\x03zU\\xc0w~Q\\x82\\xfe\\x92B@I\\x9c\\x15Q\\x13zU\\xc0G\\x92 \\\\\\x01\\x93B@\\x12\\x9b\\x8fkCzU\\xc0\\x88\\x06)x\\n\\x93B@\\xfde\\xf7\\xe4azU\\xc0\\x97\\xa1\\xf1D\\x10\\x93B@\\x8c\\xd1:\\xaa\\x9azU\\xc0F\\x98\\xa2\\\\\\x1a\\x93B@\\x1e\\x10\\xe8L\\xdazU\\xc0\\x0b\\x832\\x8d&\\x93B@\\xdf\\x13\\xebT\\xf9zU\\xc077\\xa6\\\',\\x93B@\\xe4\\x823\\xf8\\xfbzU\\xc0kxz\\xa5,\\x93B@\\xb2Dg\\x99E{U\\xc0LHk\\x0c:\\x93B@\\x16\\xc1\\xffV\\xb2{U\\xc0\\xc6Nx\\tN\\x93B@\\xe8,\\xb3\\x08\\xc5{U\\xc0}\\x06\\xd4\\x9bQ\\x93B@\\x0f$\\xef\\x1c\\xca{U\\xc0\\xe6\\x88|\\x97R\\x93B@J\\\\\\xc7\\xb8\\xe2{U\\xc0z6\\xab>W\\x93B@\\xcbc\\xcd\\xc8 |U\\xc0+\\xb6IEc\\x93B@\\x9a\\xae\\\'\\xba.|U\\xc0;\\x85\\\\\\xa9g\\x93B@\\xfe\\x96\\x00\\xfcS|U\\xc0\\x9a\\xaa{ds\\x93B@\\x81@g\\xd2\\xa6|U\\xc0\\xa6*mq\\x8d\\x93B@\\xe5YI+\\xbe|U\\xc0\\xc4\\xfc\\xdc\\xd0\\x94\\x93B@+\\x7f\\xbe-X}U\\xc0_\\xab\\x04\\x8b\\xc3\\x93B@\\xc2\\xd8B\\x90\\x83}U\\xc0X\\xa3\\x1e\\xa2\\xd1\\x93B@\\xce\\xc5\\xdf\\xf6\\x04~U\\xc0+cC7\\xfb\\x93B@\\xc4\\x045|\\x0b~U\\xc0a\\xa4\\x17\\xb5\\xfb\\x93B@\\xa2\\xeaW:\\x1f~U\\xc0S\\xc2\\x13z\\xfd\\x93B@\\x94\\xbad\\x1c#~U\\xc0w\\x98\\xf6\\xcd\\xfd\\x93B@\\x92\\xc9\\xa9\\x9da~U\\xc0\\xb1\\xfa#\\x0c\\x03\\x94B@\\x9d\\xb7\\xb1\\xd9\\x91~U\\xc0mo\\xb7$\\x07\\x94B@\\x9e\\xee<\\xf1\\x9c~U\\xc0\\x08v\\xfc\\x17\\x08\\x94B@\\xb4\\x89\\x93\\xfb\\x1d\\x7fU\\xc0\\xde\\xff\\xc7\\t\\x13\\x94B@\\x96\\xd6\\xdf\\x12\\x80\\x7fU\\xc0\\xc8\\\\\\x19T\\x1b\\x94B@AKW\\xb0\\x8d\\x7fU\\xc0\\xd6\\xf7\\xe1 !\\x94B@\\x9a\\x06E\\xf3\\x00\\x80U\\xc0\\x87\\x9a\\xe8\\xf3Q\\x94B@\\xb9\\x92\\x1d\\x1b\\x81\\x80U\\xc0mJy\\xad\\x84\\x94B@\\x9b\\xfa@\\xf2\\xce\\x80U\\xc0\\xa0<,\\xd4\\x9a\\x94B@\\xd9\\x00l@\\x84\\x82U\\xc04\\x95Ea\\x17\\x95B@\\xa5\\xc5\\x19\\xc3\\x9c\\x83U\\xc0\\x94\\xd0]\\x12g\\x95B@\\xce1 {\\xbd\\x83U\\xc0\\x8c_x%\\xc9\\x93B@*mq\\x8d\\xcf\\x83U\\xc0\\xfb\\x8a5\\\\\\xe4\\x92B@\\xff`\\xe0\\xb9\\xf7\\x83U\\xc0v\\x10;S\\xe8\\x90B@\\xb1H\\x13\\xef\\x00\\x84U\\xc0\\x17\\xb2\\xba\\xd5s\\x90B@\\x13\\xd6\\xc6\\xd8\\t\\x84U\\xc0\\xf1\\xe9\\xb1-\\x03\\x90B@\\x1aL\\xc3\\xf0\\x11\\x84U\\xc0\\xf6m\\x88\\xf1\\x9a\\x8fB@\\x87\\xa1\\xd5\\xc9\\x19\\x84U\\xc0aO;\\xfc5\\x8fB@\\xd0 \\x05O!\\x84U\\xc0\\n\\x84\\x9db\\xd5\\x8eB@(\\xd0\\\'\\xf2$\\x84U\\xc0.\\xe6\\xe7\\x86\\xa6\\x8eB@5\\x03\\\\\\x90-\\x84U\\xc0k\\xaf\\x05\\xbd7\\x8eB@\\x8f\\x1a\\x13b.\\x84U\\xc05\\x1d\\x01\\xdc,\\x8eB@;\\xa6\\xee\\xca.\\x84U\\xc0\\xf0\\x0c\\x1a\\xfa\\\'\\x8eB@\\x9a\\xcb\\r\\x86:\\x84U\\xc0\\x9e\\xd1V%\\x91\\x8dB@9\\rQ\\x85?\\x84U\\xc0\\xb3{\\xf2\\xb0P\\x8dB@\\xb5\\x9f\\x8c\\xf1a\\x84U\\xc0TUh \\x96\\x8bB@#\\x0fD\\x16i\\x84U\\xc0\\x8f7\\xf9-:\\x8bB@\\xe0\\xbabFx\\x84U\\xc0\\x86\\xbdP\\xc0v\\x8aB@\\xb0\\x1c!\\x03y\\x84U\\xc0\\xc1j,am\\x8aB@\\x04\\xc1\\xe3\\xdb\\xbb\\x84U\\xc0\\xb4\\x86R{\\x11\\x87B@\\x17,\\xd5\\x05\\xbc\\x84U\\xc0\\xaf\\xfdd\\x8c\\x0f\\x87B@\\x02\\x0b`\\xca\\xc0\\x84U\\xc0\\x04/\\xfa\\n\\xd2\\x86B@.\\x02c}\\x03\\x85U\\xc0\\xd2|\\x95|\\xec\\x86B@\\x9c\\xbe\\x9e\\xafY\\x85U\\xc0\\x86jJ\\xb2\\x0e\\x87B@\\xd8)V\\r\\xc2\\x85U\\xc0\\x19;\\xe1%8\\x87B@#\\xbb\\xd22R\\x86U\\xc0\\x83\\xb6\\x9cKq\\x87B@\\xaf>\\x1e\\xfa\\xee\\x86U\\xc0\\xe6\\xa4\\xf7\\x8d\\xaf\\x87B@\\xd2\\xe0\\xb6\\xb6\\xf0\\x86U\\xc0\\xff\\xcc >\\xb0\\x87B@\\x1c\\x940\\xd3\\xf6\\x86U\\xc08\\x97\\xe2\\xaa\\xb2\\x87B@\\x81\\xaa\\xd1\\xab\\x01\\x87U\\xc0\\xa7n.\\xfe\\xb6\\x87B@\\x07\\xed\\xd5\\xc7C\\x87U\\xc0\\xc3Y\\x115\\xd1\\x87B@\\x19\\xa9\\xf7TN\\x87U\\xc0\\x01\\x80c\\xcf\\x9e\\x87B@\\xb8R\\xcf\\x82P\\x87U\\xc00\\xb3\\xcfc\\x94\\x87B@w/\\xf7\\xc9Q\\x87U\\xc0\\x9e9\\xebS\\x8e\\x87B@\\xbe,\\xed\\xd4\\\\\\x87U\\xc0\\x12\\t\\xa6\\x9aY\\x87B@\\xac\\x8d\\xb1\\x13^\\x87U\\xc0\\xc2~O\\xacS\\x87B@o\\\'\\x11\\xe1_\\x87U\\xc0\\xe4\\xcf\\xb7\\x05K\\x87B@\\x81\\xe6s\\xeev\\x87U\\xc0\\xab4)\\x05\\xdd\\x86B@`\\xe3\\xfaw}\\x87U\\xc08\\xcem\\xc2\\xbd\\x86B@YO\\xad\\xbe\\xba\\x87U\\xc0v\\xc3\\xb6E\\x99\\x85B@\\x0e\\xbf\\x9bn\\xd9\\x87U\\xc0\\xc1\\xe3\\xdb\\xbb\\x06\\x85B@fM,\\xf0\\x15\\x88U\\xc0\\x83\\x0c\\xe4\\xd9\\xe5\\x83B@\\xfc8\\x9a#+\\x88U\\xc0:\\x8b\\xde\\xa9\\x80\\x83B@16t\\xb3?\\x88U\\xc0\\xa3\\x04\\xfd\\x85\\x1e\\x83B@\\xa5\\x14t{I\\x88U\\xc0\\x07V\\xd5\\xcb\\xef\\x82B@\\xdf\\xa6?\\xfb\\x91\\x88U\\xc0\\xef\\x8f\\xf7\\xaa\\x95\\x81B@\\xa8\\x17|\\x9a\\x93\\x88U\\xc0\\xa9\\xe7\\xa4\\xf7\\x8d\\x81B@\\xcf\\x0e\\xb8\\xae\\x98\\x88U\\xc0c\\x01\\x13\\xb8u\\x81B@\\xb0\\xa7\\x1d\\xfe\\x9a\\x88U\\xc0\\xed\\x7f\\x80\\xb5j\\x81B@ \\xe7\\xfd\\x7f\\x9c\\x88U\\xc0\\xdf\\x18\\x02\\x80c\\x81B@\\xa3\\xcb\\x9b\\xc3\\xb5\\x88U\\xc0\\xf3\\xc9\\x8a\\xe1\\xea\\x80B@\\x82\\xff\\xadd\\xc7\\x88U\\xc0\\xe3\\xc7\\x98\\xbb\\x96\\x80B@\\\'\\x14"\\xe0\\x10\\x89U\\xc0e\\xd8(\\xeb7\\x7fB@)\\x92\\xaf\\x04R\\x89U\\xc0\\xca\\x8a\\xe1\\xea\\x00~B@w\\xd1W\\x90f\\x89U\\xc0\\x01\\x80c\\xcf\\x9e}B@[z4\\xd5\\x93\\x89U\\xc0;S\\xe8\\xbc\\xc6|B@\\x93\\xc5\\xfdG\\xa6\\x89U\\xc0\\xaf\\xcb\\xf0\\x9fn|B@\\xb4Ss\\xb9\\xc1\\x89U\\xc0\\xc3+I\\x9e\\xeb{B@\\x82\\x87i\\xdf\\xdc\\x89U\\xc0\\xd4WW\\x05j{B@\\xbfD\\xbcu\\xfe\\x89U\\xc0\\xd9\\xe2\\x1a\\x9f\\xc9zB@vO\\x1e\\x16j\\x8aU\\xc0\\xe6\\xc4\\x1e\\xda\\xc7xB@+Q\\xf6\\x96r\\x8aU\\xc0\\x7f\\x87\\xa2@\\x9fxB@f\\xd7\\xbd\\x15\\x89\\x8aU\\xc0\\xc2\\xa5c\\xce3xB@\\xfc\\xc5l\\xc9\\xaa\\x8aU\\xc0\\xa3ZD\\x14\\x93wB@\\xd7\\xbb?\\xde\\xab\\x8aU\\xc0\\x98|\\xb3\\xcd\\x8dwB@\\\'\\xf5ei\\xa7\\x8aU\\xc0\\xf4c\\x93\\xfc\\x88wB@\\xbe\\xf4\\xf6\\xe7\\xa2\\x8aU\\xc0\\xb0S\\xac\\x1a\\x84wB@\\xd1\\x932\\xa9\\xa1\\x8aU\\xc0\\x1b>\\xe9D\\x82wB@\\x95^\\x9b\\x8d\\x95\\x8aU\\xc0\\xfc\\x1aI\\x82pwB@\\xb1M*\\x1ak\\x8aU\\xc0\\xafq\\xfd\\xbb>wB@\\xdd_=\\xee[\\x8aU\\xc0\\x0b<\\xf7\\x1e.wB@\\xf9\\xd9\\xc8uS\\x8aU\\xc0\\x1a\\x9d\\xf3S\\x1cwB@\\xd3J!\\x90K\\x8aU\\xc0\\x04(\\r5\\nwB@\\xd3~k\\\'J\\x8aU\\xc0\\x9b\\x88~m\\xfdvB@mk\\x0b\\xcfK\\x8aU\\xc0x\\xc9\\xff\\xe4\\xefvB@\\x84y\\x8f3M\\x8aU\\xc0\\x9d\\x82\\xfcl\\xe4vB@\\x7f\\xbcW\\xadL\\x8aU\\xc0\\\'\\xd1\\x92\\xc7\\xd3vB@\\xb7\\xe7\\xf9\\xd3F\\x8aU\\xc0q\\xf6\\xceh\\xabvB@\\xfa$w\\xd8D\\x8aU\\xc0\\xfeDe\\xc3\\x9avB@\\x1eII\\x0fC\\x8aU\\xc0\\r+\\xdc\\xf2\\x91vB@\\x9c\\x84\\xd2\\x17B\\x8aU\\xc0\\xad\\xe4cw\\x81vB@B9\\xd1\\xaeB\\x8aU\\xc0U/\\xbf\\xd3dvB@\\x9b6\\xe34D\\x8aU\\xc0\\xbe`7l[vB@e\\x8dz\\x88F\\x8aU\\xc0\\xb5\\xfd++MvB@\\xf7TN{J\\x8aU\\xc0\\xab\\xebPMIvB@;\\xe3\\xfb\\xe2R\\x8aU\\xc0:\\xe0\\xbabFvB@x\\xb4q\\xc4Z\\x8aU\\xc0\\x92>\\xad\\xa2?vB@\\xc8>\\xc8\\xb2`\\x8aU\\xc0Z\\xfd\\xd8$?vB@$C\\x8e\\xadg\\x8aU\\xc0z\\xe29[@vB@\\x15\\xc5\\xab\\xacm\\x8aU\\xc0\\\'\\xf0N>=vB@Hj\\xa1dr\\x8aU\\xc0\\xf6JY\\x868vB@\\xd5t=\\xd1u\\x8aU\\xc0\\xac\\xe5\\xceL0vB@\\r\\xa3 x|\\x8aU\\xc0\\x93\\x83\\xd9\\x04\\x18vB@^{fI\\x80\\x8aU\\xc0Q&5\\xb4\\x01vB@G9\\x98M\\x80\\x8aU\\xc0\\x99\\x1d\\xa9\\xbe\\xf3uB@\\xf83\\xbcY\\x83\\x8aU\\xc0YE\\x7fh\\xe6uB@f\\xd7\\xbd\\x15\\x89\\x8aU\\xc0\\x07\\xce\\x19Q\\xdauB@>\\xc9\\x1d6\\x91\\x8aU\\xc06\\x99\\xf1\\xb6\\xd2uB@\\xb1\\xdbg\\x95\\x99\\x8aU\\xc0\\xfb6\\xc4x\\xcduB@x|{\\xd7\\xa0\\x8aU\\xc0\\xe2\\x89 \\xce\\xc3uB@;\\x16\\xdb\\xa4\\xa2\\x8aU\\xc0%\\xe1B\\x1e\\xc1uB@\\xe4\\x83\\x9e\\xcd\\xaa\\x8aU\\xc0\\x90zO\\xe5\\xb4uB@\\xaa\\n\\r\\xc4\\xb2\\x8aU\\xc0HI\\x0fC\\xabuB@\\xa9\\xbf^a\\xc1\\x8aU\\xc0\\x14\\xebT\\xf9\\x9euB@q\\xff\\x91\\xe9\\xd0\\x8aU\\xc0`\\x03"\\xc4\\x95uB@Ad\\x91&\\xde\\x8aU\\xc0\\x86u\\xe3\\xdd\\x91uB@"N\\\'\\xd9\\xea\\x8aU\\xc0Iw\\xd7\\xd9\\x90uB@\\xc1\\xe0\\x9a;\\xfa\\x8aU\\xc0\\xdd\\xc0\\xe4F\\x91uB@\\xc2Kp\\xea\\x03\\x8bU\\xc0\\x98Hi6\\x8fuB@\\xa1H\\xf7s\\n\\x8bU\\xc0i`\\xab\\x04\\x8buB@\\xfdL\\xbdn\\x11\\x8bU\\xc0( \\xed\\x7f\\x80uB@SF\\\\\\x00\\x1a\\x8bU\\xc0Z#\\x82qpuB@\\xc5^(`;\\x8bU\\xc0\\x16\\xd3L\\xf7:uB@\\xd5\\x95\\xcf\\xf2<\\x8bU\\xc0l\\x95`q8uB@jJ\\xb2\\x0eG\\x8bU\\xc0\\x0b\\xeb\\xc6\\xbb#uB@\\xb7\\x99\\n\\
--------------------------------------------------
Table full name: NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.COUNTIES
Column name: county_gnis_code Type: TEXT
Column name: cbsa_fips_code Type: TEXT
Column name: lsad_code Type: TEXT
Column name: mtfcc_feature_class_code Type: TEXT
Column name: fips_class_code Type: TEXT
Column name: int_point_lon Type: FLOAT
Column name: county_geom Type: BINARY
Column name: geo_id Type: TEXT
Column name: lsad_name Type: TEXT
Column name: int_point_geom Type: BINARY
Column name: county_fips_code Type: TEXT
Column name: area_water_meters Type: NUMBER
Column name: functional_status Type: TEXT
Column name: state_fips_code Type: TEXT
Column name: csa_fips_code Type: TEXT
Column name: area_land_meters Type: NUMBER
Column name: met_div_fips_code Type: TEXT
Column name: county_name Type: TEXT
Column name: int_point_lat Type: FLOAT
Sample rows:
[{'geo_id': '55081', 'state_fips_code': '55', 'county_fips_code': '55081', 'county_gnis_code': '01581101', 'county_name': 'Monroe', 'lsad_name': 'Monroe County', 'lsad_code': '06', 'fips_class_code': 'H1', 'mtfcc_feature_class_code': 'G4020', 'csa_fips_code': None, 'cbsa_fips_code': None, 'met_div_fips_code': None, 'functional_status': 'A', 'area_land_meters': 2333329706, 'area_water_meters': 18586826, 'int_point_lat': 43.9451751, 'int_point_lon': -90.6199687, 'int_point_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\xcb\\xc22\\x91\\xad\\xa7V\\xc0-\\xbfg\\x7f\\xfb\\xf8E@')", 'county_geom': 'bytearray(b\'\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00x\\x04\\x00\\x00K\\x92\\xe7\\xfa>\\xbaV\\xc0\\xe5\\xcb\\x0b\\xb0\\x8f\\xf4E@\\x8c\\x9b\\x1ah>\\xbaV\\xc0\\xbc\\x8a\\x8c\\x0eH\\xf4E@\\x04\\xe6!S>\\xbaV\\xc0\\xaf\\x8b\\xa2\\x07>\\xf4E@E\\xd5\\xaft>\\xbaV\\xc0\\x84"\\xdd\\xcf)\\xf4E@\\xce\\x8a\\xa8\\x89>\\xbaV\\xc0\\xc8\\\\\\x19T\\x1b\\xf4E@\\xb6H\\xda\\x8d>\\xbaV\\xc0q\\xad\\xf6\\xb0\\x17\\xf4E@W@\\xa1\\x9e>\\xbaV\\xc0;\\x1b\\xf2\\xcf\\x0c\\xf4E@\\\'\\xbc\\x04\\xa7>\\xbaV\\xc0\\xe2k\\xcf,\\t\\xf4E@\\x0fz6\\xab>\\xbaV\\xc0\\xfdc!:\\x04\\xf4E@\\x80\\xed`\\xc4>\\xbaV\\xc0\\xdc\\xd8\\xecH\\xf5\\xf3E@8\\\'\\xf6\\xd0>\\xbaV\\xc0\\xf6\\xd0>V\\xf0\\xf3E@\\t\\xa3Y\\xd9>\\xbaV\\xc0\\xa2\\xaa\\t\\xa2\\xee\\xf3E@\\xc1\\xdc\\xee\\xe5>\\xbaV\\xc0\\xd5b\\xf00\\xed\\xf3E@2P\\x19\\xff>\\xbaV\\xc0\\x1d\\xab\\x94\\x9e\\xe9\\xf3E@\\xeb\\x89\\xae\\x0b?\\xbaV\\xc0\\x9a\\x00\\xc3\\xf2\\xe7\\xf3E@\\x03\\xcc|\\x07?\\xbaV\\xc0\\xd5fc%\\xe6\\xf3E@K\\x92\\xe7\\xfa>\\xbaV\\xc0\\x8d\\x99D\\xbd\\xe0\\xf3E@K\\x92\\xe7\\xfa>\\xbaV\\xc0\\xc8\\xff\\xe4\\xef\\xde\\xf3E@K\\x92\\xe7\\xfa>\\xbaV\\xc0\\xd1\\xf0f\\r\\xde\\xf3E@2P\\x19\\xff>\\xbaV\\xc0\\xb3?Pn\\xdb\\xf3E@\\x1b\\x0eK\\x03?\\xbaV\\xc0\\x88\\xac5\\x94\\xda\\xf3E@\\x1b\\x0eK\\x03?\\xbaV\\xc0\\xb3s\\x9a\\x05\\xda\\xf3E@\\x1b\\x0eK\\x03?\\xbaV\\xc0\\xba\\x98f\\xba\\xd7\\xf3E@\\xeb\\x89\\xae\\x0b?\\xbaV\\xc0\\x90L\\x87N\\xcf\\xf3E@\\xd4G\\xe0\\x0f?\\xbaV\\xc0\\x90\\xb4\\x1b}\\xcc\\xf3E@\\xd4G\\xe0\\x0f?\\xbaV\\xc0"\\x11\\x1a\\xc1\\xc6\\xf3E@\\xa3\\xc3C\\x18?\\xbaV\\xc0\\x19\\x16\\xa3\\xae\\xb5\\xf3E@\\x8d\\x81u\\x1c?\\xbaV\\xc0{\\xee\\x04\\xfb\\xaf\\xf3E@\\xa3\\xc3C\\x18?\\xbaV\\xc0\\x1c\\xc9\\xe5?\\xa4\\xf3E@\\xa3\\xc3C\\x18?\\xbaV\\xc0\\x971\\x05k\\x9c\\xf3E@\\xc1\\xdc\\xee\\xe5>\\xbaV\\xc0\\xfeX\\x88\\x0e\\x81\\xf3E@\\t\\xa3Y\\xd9>\\xbaV\\xc0\\xb2\\x9eZ}u\\xf3E@!\\xe5\\\'\\xd5>\\xbaV\\xc0r\\x7f\\xf5\\xb8o\\xf3E@\\xf1`\\x8b\\xdd>\\xbaV\\xc0*\\x82\\xff\\xadd\\xf3E@\\xda\\x1e\\xbd\\xe1>\\xbaV\\xc0Kk\\xd3\\xd8^\\xf3E@\\xaa\\x9a \\xea>\\xbaV\\xc0M;\\xfc5Y\\xf3E@\\xaa\\x9a \\xea>\\xbaV\\xc0\\xc7\\x9f\\xa8lX\\xf3E@\\xaa\\x9a \\xea>\\xbaV\\xc0,\\xcd\\xad\\x10V\\xf3E@\\x92XR\\xee>\\xbaV\\xc0\\xa31ZGU\\xf3E@\\x92XR\\xee>\\xbaV\\xc0]\\xb9\\xde6S\\xf3E@z\\x16\\x84\\xf2>\\xbaV\\xc0\\xfa\\xc3\\x96\\x1eM\\xf3E@a\\xd4\\xb5\\xf6>\\xbaV\\xc0\\xc6\\xb6\\x0c8K\\xf3E@K\\x92\\xe7\\xfa>\\xbaV\\xc0\\x9d\\x9ewcA\\xf3E@\\xd4G\\xe0\\x0f?\\xbaV\\xc0Q\\x97\\x8cc$\\xf3E@\\xbd\\x05\\x12\\x14?\\xbaV\\xc0\\x185_%\\x1f\\xf3E@\\xa3\\xc3C\\x18?\\xbaV\\xc0\\xe0\\x9e\\xe7O\\x1b\\xf3E@\\xa3\\xc3C\\x18?\\xbaV\\xc08\\xea\\xe8\\xb8\\x1a\\xf3E@\\x157n1?\\xbaV\\xc0\\xbe\\x92\\xabX\\xfc\\xf2E@\\xdf\\xdb\\xf4g?\\xbaV\\xc0\\x8e2\\xe2\\x02\\xd0\\xf2E@PO\\x1f\\x81?\\xbaV\\xc0\\xfe\\xcfa\\xbe\\xbc\\xf2E@\\x1a\\xda\\x00l@\\xbaV\\xc0[8\\x10\\x92\\x05\\xf2E@\\xea;\\xbf(A\\xbaV\\xc0\\xac\\x89\\x05\\xbe\\xa2\\xf1E@\\xea!\\x1a\\xddA\\xbaV\\xc0\\xe2\\xe2\\xa8\\xdcD\\xf1E@\\\\\\x95D\\xf6A\\xbaV\\xc0\\xad\\xb88*7\\xf1E@\\x96\\xad\\xf5EB\\xbaV\\xc03\\x10\\xcbf\\x0e\\xf1E@\\x7fk\\\'JB\\xbaV\\xc0F\\xaf\\x06(\\r\\xf1E@\\x07! _B\\xbaV\\xc0A\\xd5\\xe8\\xd5\\x00\\xf1E@1\\xce\\xdf\\x84B\\xbaV\\xc0\\x0b&\\xfe(\\xea\\xf0E@=b\\xf4\\xdcB\\xbaV\\xc0\\xd1\\x89\\x04S\\xcd\\xf0E@\\xee\\xaa\\x07\\xccC\\xbaV\\xc0L\\x10u\\x1f\\x80\\xf0E@\\x17$}ZE\\xbaV\\xc0\\xf3\\x85\\x90\\xf3\\xfe\\xefE@\\xa6|\\x08\\xaaF\\xbaV\\xc0\\x90\\x13&\\x8cf\\xefE@\\xa6bc^G\\xbaV\\xc0\\x832\\x8d&\\x17\\xefE@\\x1d\\xadjIG\\xbaV\\xc0\\x13\\xb9\\xe0\\x0c\\xfe\\xeeE@A\\x9d\\xf2\\xe8F\\xbaV\\xc0@\\xfa&M\\x83\\xeeE@([$\\xedF\\xbaV\\xc0\\xc0\\xeb3g}\\xeeE@^\\xd0B\\x02F\\xbaV\\xc0\\rf\\x13`X\\xeeE@\\xdc\\xf1&\\xbfE\\xbaV\\xc05W\\xcdsD\\xeeE@5#\\x83\\xdcE\\xbaV\\xc01M\\xd8~2\\xeeE@\\x06\\x9f\\xe6\\xe4E\\xbaV\\xc0)oG8-\\xeeE@\\xbe\\xd8{\\xf1E\\xbaV\\xc0\\x9e\\xe6\\xe4E&\\xeeE@\\xb8\\x01\\x9f\\x1fF\\xbaV\\xc0\\x8a\\x88b\\xf2\\x06\\xeeE@X\\xf9e0F\\xbaV\\xc0T\\xf6]\\x11\\xfc\\xedE@A\\xb7\\x974F\\xbaV\\xc0\\xfeF;n\\xf8\\xedE@X\\xf9e0F\\xbaV\\xc0\\x8d\\xa39\\xb2\\xf2\\xedE@q;4,F\\xbaV\\xc0\\xb1(\\xec\\xa2\\xe8\\xedE@/L\\xa6\\nF\\xbaV\\xc0o\\xbb\\xd0\\\\\\xa7\\xedE@^\\xd0B\\x02F\\xbaV\\xc0\\x07T\\xff \\x92\\xedE@\\xa0\\xbf\\xd0#F\\xbaV\\xc0\\xa3\\xa5\\xf2v\\x84\\xedE@;\\xe0\\xbabF\\xbaV\\xc0\\x04t_\\xcel\\xedE@\\xd6\\x00\\xa5\\xa1F\\xbaV\\xc0\\xab\\x8ap\\x93Q\\xedE@\\xcf\\x0f#\\x84G\\xbaV\\xc0\\x89\\xb5\\xf8\\x14\\x00\\xedE@\\x82r\\xdb\\xbeG\\xbaV\\xc0s\\xbb\\x97\\xfb\\xe4\\xecE@\\x0b(\\xd4\\xd3G\\xbaV\\xc0l\\xfe_u\\xe4\\xecE@\\xcd\\xdb\\xd8\\xecH\\xbaV\\xc07\\xe8Ko\\x7f\\xecE@\\x9e#\\xf2]J\\xbaV\\xc0\\x95\\xad\\xf5EB\\xebE@\\\\\\x1a\\xbf\\xf0J\\xbaV\\xc0~/\\x85\\x07\\xcd\\xeaE@y\\x19\\xc5rK\\xbaV\\xc0\\xe9\\xac\\x16\\xd8c\\xeaE@\\xe5\\xcf\\xb7\\x05K\\xbaV\\xc0o!\\x8f\\xe0F\\xeaE@\\x80\\nG\\x90J\\xbaV\\xc0\\xef\\x0c\\x1a\\xfa\\\'\\xeaE@>\\x1b\\xb9nJ\\xbaV\\xc09h\\xaf>\\x1e\\xeaE@\\n\\xda\\xe4\\xf0I\\xbaV\\xc0\\xec2\\xfc\\xa7\\x1b\\xeaE@\\xfdE\\xd0\\x98I\\xbaV\\xc0\\xda/\\x9f\\xac\\x18\\xeaE@\\x03\\x1d\\xadjI\\xbaV\\xc0Y\\xb9\\x17\\x98\\x15\\xeaE@\\x03\\x1d\\xadjI\\xbaV\\xc0ZU\\xf6]\\x11\\xeaE@\\x8d\\xd2\\xa5\\x7fI\\xbaV\\xc0\\x9f\\x89\\xb0\\xe1\\xe9\\xe9E@]N\\t\\x88I\\xbaV\\xc0?\\x98\\xdb\\xbd\\xdc\\xe9E@!\\x1c\\xb3\\xecI\\xbaV\\xc0!u;\\xfb\\xca\\xe9E@\\xf7TN{J\\xbaV\\xc0\\x85\\x00\\xe0\\xd8\\xb3\\xe9E@b\\xf1\\x9b\\xc2J\\xbaV\\xc0\\xe8W:\\x1f\\x9e\\xe9E@-\\x96"\\xf9J\\xbaV\\xc0\\x8e\\x87\\xbe\\xbb\\x95\\xe9E@(\\xbfE\\\'K\\xbaV\\xc0\\xc8\\xcc\\x05.\\x8f\\xe9E@2m\\xff\\xcaJ\\xbaV\\xc0)\\xa5gz\\x89\\xe9E@\\x92u8\\xbaJ\\xbaV\\xc0\\xf7\\xcb\\\'+\\x86\\xe9E@sB\\xe8\\xa0K\\xbaV\\xc0\\x10\\xc4y8\\x81\\xe9E@\\x02\\xb5\\x18<L\\xbaV\\xc0\\x9e\\xe28\\xf0j\\xe9E@hz\\x89\\xb1L\\xbaV\\xc0\\xe9*\\xdd]g\\xe9E@\\xc6h\\x1dUM\\xbaV\\xc0\\x18\\x8d|^\\xf1\\xe8E@s\\xf4\\xf8\\xbdM\\xbaV\\xc0J\\x00\\xfe)U\\xe8E@Cp\\\\\\xc6M\\xbaV\\xc0\\xb7\\x99\\n\\xf1H\\xe8E@\\xba\\xbac\\xb1M\\xbaV\\xc0\\x01\\x00\\x00\\x00\\x00\\xe8E@\\xba\\xbac\\xb1M\\xbaV\\xc0\\xe3\\x1a\\x9f\\xc9\\xfe\\xe7E@\\xba\\xbac\\xb1M\\xbaV\\xc0\\xffg\\x94.\\xfd\\xe7E@\\xba\\xbac\\xb1M\\xbaV\\xc0!\\x1d\\x1e\\xc2\\xf8\\xe7E@\\xd2\\xfc1\\xadM\\xbaV\\xc0|\\xb3\\xcd\\x8d\\xe9\\xe7E@\\x19\\xc3\\x9c\\xa0M\\xbaV\\xc0\\xff\\xe9\\x06\\n\\xbc\\xe7E@\\x19\\xc3\\x9c\\xa0M\\xbaV\\xc0)\\xfc\\x19\\xde\\xac\\xe7E@ \\x9ayrM\\xbaV\\xc0\\x12`X\\xfe|\\xe7E@U\\xf5\\xf2;M\\xbaV\\xc0\\x05\\xf3W\\xc8\\\\\\xe7E@\\x02\\x9bs\\xf0L\\xbaV\\xc0s\\x05\\xdb\\x88\\\'\\xe7E@\\x08\\x8c\\xf5\\rL\\xbaV\\xc0\\x19\\xd9\\x95\\x96\\x91\\xe6E@\\x9d\\xd5\\x02{L\\xbaV\\xc0{\\xbef\\xb9l\\xe6E@8\\xdcGnM\\xbaV\\xc0\\x98\\xa42\\xc5\\x1c\\xe6E@\\\\\\xe6tYL\\xbaV\\xc01&\\xfd\\xbd\\x14\\xe6E@\\x02\\xb5\\x18<L\\xbaV\\xc0\\x91c\\xeb\\x19\\xc2\\xe5E@\\x02\\xb5\\x18<L\\xbaV\\xc0\\x1e\\x03\\xb2\\xd7\\xbb\\xe5E@\\xc6h\\x1dUM\\xbaV\\xc0\\x0e$\\xef\\x1c\\xca\\xe4E@g`\\xe4eM\\xbaV\\xc0\\x92\\xfc\\x88_\\xb1\\xe4E@\\x8b6\\xc7\\xb9M\\xbaV\\xc0\\xaa\\xd4\\xec\\x81V\\xe4E@s\\xf4\\xf8\\xbdM\\xbaV\\xc0\\x037R\\xb6H\\xe4E@Cp\\\\\\xc6M\\xbaV\\xc0\\x12^\\x82S\\x1f\\xe4E@\\x13\\xec\\xbf\\xceM\\xbaV\\xc0=<K\\x90\\x11\\xe4E@O\\x1e\\x16jM\\xbaV\\xc0S\\xc9\\x00P\\xc5\\xe3E@s\\x0e\\x9e\\tM\\xbaV\\xc0\\xc1\\xa1\\xb7xx\\xe3E@\\xe5\\x9bmnL\\xbaV\\xc0tWv\\xc1\\xe0\\xe2E@,b\\xd8aL\\xbaV\\xc0\\xd4B\\xc9\\xe4\\xd4\\xe2E@\\xc1\\xc5\\x8a\\x1aL\\xbaV\\xc0\\xfaWV\\x9a\\x94\\xe2E@8\\x10\\x92\\x05L\\xbaV\\xc0\\x0c>\\xcd\\xc9\\x8b\\xe2E@\\xf8 \\x04\\xe4K\\xbaV\\xc0\\x1f\\xd7\\x86\\x8aq\\xe2E@\\xf8 \\x04\\xe4K\\xbaV\\xc0\\xf4\\x8a\\xa7\\x1ei\\xe2E@&\\xa5\\xa0\\xdbK\\xbaV\\xc0^A\\x9a\\xb1h\\xe2E@\\xbb\\x08S\\x94K\\xbaV\\xc0O\\xad\\xbe\\xba*\\xe2E@\\xa9\\x9dajK\\xbaV\\xc0\\t\\x12\\xdb\\xdd\\x03\\xe2E@\\xb6K\\x1b\\x0eK\\xbaV\\xc0\\xcc\\x96\\xac\\x8ap\\xe1E@\\\\\\x1a\\xbf\\xf0J\\xbaV\\xc0,v\\xfb\\xac2\\xe1E@\\xf2\\x97\\x16\\xf5I\\xbaV\\xc0\\xb9d\\x1c#\\xd9\\xdfE@\\x02\\x03\\x08\\x1fJ\\xbaV\\xc0\\xc0yq\\xe2\\xab\\xdfE@\\xdf,%\\xcbI\\xbaV\\xc0`\\xfe\\n\\x99+\\xdfE@\\x10\\xb1\\xc1\\xc2I\\xbaV\\xc0\\xd8\\xcaK\\xfe\\\'\\xdfE@\\\'\\xf3\\x8f\\xbeI\\xbaV\\xc0\\x16\\x99\\x80_#\\xdfE@\\x16\\x88\\x9e\\x94I\\xbaV\\xc0\\x82\\xdb\\xda\\xc2\\xf3\\xdeE@\\x92\\xa9\\x82QI\\xbaV\\xc0\\\\j\\x84~\\xa6\\xdeE@\\xcd\\xdb\\xd8\\xecH\\xbaV\\xc0\\xf4~\\xa3\\x1d7\\xdeE@]h\\xae\\xd3H\\xbaV\\xc0"-\\x95\\xb7#\\xdeE@Y\\xabvMH\\xbaV\\xc0\\xc23\\xa1Ib\\xddE@\\xc9l\\x90IF\\xbaV\\xc0\\xd5\\x00\\xa5\\xa1F\\xddE@\\xe1z\\x14\\xaeG\\xbaV\\xc0.\\x81[w\\xf3\\xdcE@F@\\x85#H\\xbaV\\xc0\\xa1V\\x98\\xbe\\xd7\\xdcE@\\x92\\xdd\\xcc\\xe8G\\xbaV\\xc0t\\xd2\\xfb\\xc6\\xd7\\xdcE@\\x95Ea\\x17E\\xbaV\\xc0&5\\xb4\\x01\\xd8\\xdcE@"gaO;\\xbaV\\xc0~Lk\\xd3\\xd8\\xdcE@\\xd5x\\xe9&1\\xbaV\\xc0\\xa7\\xdf\\x85\\xad\\xd9\\xdcE@>\\xe8\\xd9\\xac\\xfa\\xb9V\\xc058\\x11\\xfd\\xda\\xdcE@\\xc7\\xb7w\\r\\xfa\\xb9V\\xc058\\x11\\xfd\\xda\\xdcE@~5\\x07\\x08\\xe6\\xb9V\\xc0\\x9a\\xfd\\x81r\\xdb\\xdcE@\\xb0U\\x82\\xc5\\xe1\\xb9V\\xc0\\x0bq\\xac\\x8b\\xdb\\xdcE@w\\xd9\\xaf;\\xdd\\xb9V\\xc0M`:\\xad\\xdb\\xdcE@\\x0cq\\xac\\x8b\\xdb\\xb9V\\xc0\\x1d\\xdc\\x9d\\xb5\\xdb\\xdcE@\\x1a\\x87\\xfa]\\xd8\\xb9V\\xc0#\\x99\\xd5;\\xdc\\xdcE@\\x9a\\x10sI\\xd5\\xb9V\\xc0$\\x99\\xd5;\\xdc\\xdcE@c\\x98\\x13\\xb4\\xc9\\xb9V\\xc0\\xf3\\x149D\\xdc\\xdcE@Eb\\x82\\x1a\\xbe\\xb9V\\xc0\\xf3\\x149D\\xdc\\xdcE@\\x05\\xc0x\\x06\\r\\xb9V\\xc0\\x17\\xeb\\x1b\\x98\\xdc\\xdcE@\\xfa_\\xaeE\\x0b\\xb9V\\xc0\\xe7f\\x7f\\xa0\\xdc\\xdcE@\\x87Md\\xe6\\x02\\xb8V\\xc0\\xda\\xb8\\xc5\\xfc\\xdc\\xdcE@\\xd1\\xe7\\xa3\\x8c\\xb8\\xb7V\\xc0i\\x11QL\\xde\\xdcE@\\x04\\xe5\\xb6}\\x8f\\xb7V\\xc0\\xa4C\\xa7\\xe7\\xdd\\xdcE@\\xadG\\xe1z\\x14\\xb7V\\xc0\\xf8\\x9d&3\\xde\\xdcE@ \\x0b\\xd1!p\\xb6V\\x
--------------------------------------------------
Table full name: NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_TRIPS
Column name: start_station_longitude Type: FLOAT Description: Start Station Longitude
Column name: customer_plan Type: TEXT Description: The name of the plan that determines the rate charged for the trip
Column name: birth_year Type: NUMBER Description: Year of Birth
Column name: end_station_name Type: TEXT Description: End Station Name
Column name: usertype Type: TEXT Description: User Type (Customer = 24-hour pass or 7-day pass user, Subscriber = Annual Member)
Column name: gender Type: TEXT Description: Gender (unknown, male, female)
Column name: starttime Type: NUMBER Description: Start Time, in NYC local time.
Column name: bikeid Type: NUMBER Description: Bike ID
Column name: stoptime Type: NUMBER Description: Stop Time, in NYC local time.
Column name: start_station_id Type: NUMBER Description: Start Station ID
Column name: end_station_latitude Type: FLOAT Description: End Station Latitude
Column name: end_station_longitude Type: FLOAT Description: End Station Longitude
Column name: start_station_name Type: TEXT Description: Start Station Name
Column name: start_station_latitude Type: FLOAT Description: Start Station Latitude
Column name: tripduration Type: NUMBER Description: Trip Duration (in seconds)
Column name: end_station_id Type: NUMBER Description: End Station ID
Sample rows:
[{'tripduration': 1609, 'starttime': 1468270231000000, 'stoptime': 1468271840000000, 'start_station_id': 120, 'start_station_name': 'Lexington Ave & Classon Ave', 'start_station_latitude': 40.68676793, 'start_station_longitude': -73.95928168, 'end_station_id': 307, 'end_station_name': 'Canal St & Rutgers St', 'end_station_latitude': 40.71427487, 'end_station_longitude': -73.98990025, 'bikeid': 25672, 'usertype': 'Subscriber', 'birth_year': 1995, 'gender': 'female', 'customer_plan': ''}, {'tripduration': 1174, 'starttime': 1507990925000000, 'stoptime': 1507992100000000, 'start_station_id': 195, 'start_station_name': 'Liberty St & Broadway', 'start_station_latitude': 40.70905623, 'start_station_longitude': -74.01043382, 'end_station_id': 412, 'end_station_name': 'Forsyth St & Canal St', 'end_station_latitude': 40.7158155, 'end_station_longitude': -73.99422366, 'bikeid': 30676, 'usertype': 'Subscriber', 'birth_year': 1995, 'gender': 'female', 'customer_plan': ''}, {'tripduration': 1631, 'starttime': 1505328388000000, 'stoptime': 1505330019000000, 'start_station_id': 430, 'start_station_name': 'York St & Jay St', 'start_station_latitude': 40.7014851, 'start_station_longitude': -73.98656928, 'end_station_id': 455, 'end_station_name': '1 Ave & E 44 St', 'end_station_latitude': 40.75001986, 'end_station_longitude': -73.96905301, 'bikeid': 20702, 'usertype': 'Subscriber', 'birth_year': 1995, 'gender': 'female', 'customer_plan': ''}, {'tripduration': 393, 'starttime': 1502200470000000, 'stoptime': 1502200863000000, 'start_station_id': 3233, 'start_station_name': 'E 48 St & 5 Ave', 'start_station_latitude': 40.75724567911726, 'start_station_longitude': -73.97805914282799, 'end_station_id': 362, 'end_station_name': 'Broadway & W 37 St', 'end_station_latitude': 40.75172632, 'end_station_longitude': -73.98753523, 'bikeid': 21577, 'usertype': 'Subscriber', 'birth_year': 1995, 'gender': 'female', 'customer_plan': ''}, {'tripduration': 651, 'starttime': 1524485470888000, 'stoptime': 1524486122811000, 'start_station_id': 379, 'start_station_name': 'W 31 St & 7 Ave', 'start_station_latitude': 40.749156, 'start_station_longitude': -73.9916, 'end_station_id': 537, 'end_station_name': 'Lexington Ave & E 24 St', 'end_station_latitude': 40.74025878, 'end_station_longitude': -73.98409214, 'bikeid': 30984, 'usertype': 'Subscriber', 'birth_year': 1995, 'gender': 'female', 'customer_plan': ''}]
--------------------------------------------------
Table full name: NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_STATIONS
Column name: latitude Type: FLOAT Description: The latitude of station. The field value must be a valid WGS 84 latitude in decimal degrees format.
Column name: capacity Type: NUMBER Description: ANumber of total docking points installed at this station, both available and unavailable.
Column name: rental_methods Type: TEXT Description: Array of enumerables containing the payment methods accepted at this station.
Column name: is_renting Type: BOOLEAN Description: Is the station currently renting bikes?
Column name: num_bikes_disabled Type: NUMBER Description: Number of disabled bikes at the station.
Column name: station_id Type: TEXT Description: Unique identifier of a station.
Column name: num_docks_available Type: NUMBER Description: Number of docks accepting bike returns.
Column name: eightd_has_available_keys Type: BOOLEAN
Column name: region_id Type: NUMBER Description: ID of the region where station is located.
Column name: num_bikes_available Type: NUMBER Description: Number of bikes available for rental.
Column name: is_installed Type: BOOLEAN Description: Is the station currently on the street?
Column name: longitude Type: FLOAT Description: The longitude of station. The field value must be a valid WGS 84 latitude in decimal degrees format.
Column name: eightd_has_key_dispenser Type: BOOLEAN
Column name: name Type: TEXT Description: Public name of the station.
Column name: short_name Type: TEXT Description: Short name or other type of identifier, as used by the data publisher.
Column name: last_reported Type: NUMBER Description: Timestamp indicating the last time this station reported its status to the backend, in NYC local time.
Column name: is_returning Type: BOOLEAN Description: Is the station accepting bike returns?
Column name: num_docks_disabled Type: NUMBER Description: Number of empty but disabled dock points at the station.
Sample rows:
[{'station_id': '66dc0dab-0aca-11e7-82f6-3863bb44ef7c', 'name': 'W 59 St & 10 Ave', 'short_name': '7023.04', 'latitude': 40.770513, 'longitude': -73.988038, 'region_id': 71, 'rental_methods': 'KEY, CREDITCARD', 'capacity': 117, 'eightd_has_key_dispenser': False, 'num_bikes_available': 0, 'num_bikes_disabled': 0, 'num_docks_available': 0, 'num_docks_disabled': 0, 'is_installed': False, 'is_renting': False, 'is_returning': False, 'eightd_has_available_keys': False, 'last_reported': 1726578102000000}, {'station_id': '66db4282-0aca-11e7-82f6-3863bb44ef7c', 'name': 'W 11 St & 6 Ave', 'short_name': '5914.03', 'latitude': 40.73532427, 'longitude': -73.99800419, 'region_id': 71, 'rental_methods': 'KEY, CREDITCARD', 'capacity': 47, 'eightd_has_key_dispenser': False, 'num_bikes_available': 0, 'num_bikes_disabled': 0, 'num_docks_available': 0, 'num_docks_disabled': 0, 'is_installed': False, 'is_renting': False, 'is_returning': False, 'eightd_has_available_keys': False, 'last_reported': 1726661906000000}, {'station_id': '66ddb6d9-0aca-11e7-82f6-3863bb44ef7c', 'name': 'University Pl & E 8 St', 'short_name': '5755.14', 'latitude': 40.73143724085228, 'longitude': -73.99490341544151, 'region_id': 71, 'rental_methods': 'KEY, CREDITCARD', 'capacity': 79, 'eightd_has_key_dispenser': False, 'num_bikes_available': 0, 'num_bikes_disabled': 0, 'num_docks_available': 0, 'num_docks_disabled': 0, 'is_installed': False, 'is_renting': False, 'is_returning': False, 'eightd_has_available_keys': False, 'last_reported': 1727268154000000}, {'station_id': '9b70cbe2-25fc-42f8-b6e6-ac21ef248e4b', 'name': 'Brooklyn Ave & Dean St', 'short_name': '4131.03', 'latitude': 40.67669, 'longitude': -73.94437, 'region_id': 71, 'rental_methods': 'KEY, CREDITCARD', 'capacity': 19, 'eightd_has_key_dispenser': False, 'num_bikes_available': 0, 'num_bikes_disabled': 0, 'num_docks_available': 0, 'num_docks_disabled': 0, 'is_installed': False, 'is_renting': False, 'is_returning': False, 'eightd_has_available_keys': False, 'last_reported': 1725540317000000}, {'station_id': '821b19c1-ab13-4482-9580-770288a377a7', 'name': 'Madison Ave & E 51 St', 'short_name': '6659.09', 'latitude': 40.75863, 'longitude': -73.97513000000001, 'region_id': 71, 'rental_methods': 'KEY, CREDITCARD', 'capacity': 43, 'eightd_has_key_dispenser': False, 'num_bikes_available': 0, 'num_bikes_disabled': 0, 'num_docks_available': 0, 'num_docks_disabled': 0, 'is_installed': False, 'is_renting': False, 'is_returning': False, 'eightd_has_available_keys': False, 'last_reported': 1729013059000000}]
--------------------------------------------------
Table full name: NEW_YORK_CITIBIKE_1.NOAA_GSOD.GSOD1931
Column name: da Type: TEXT Description: The day
Column name: fog Type: TEXT Description: Indicators (1 = yes, 0 = no/not reported) for the occurrence during the day
Column name: slp Type: FLOAT Description: Mean sea level pressure for the day in millibars to tenths. Missing = 9999.9
Column name: dewp Type: FLOAT Description: Mean dew point for the day in degreesm Fahrenheit to tenths.  Missing = 9999.9
Column name: snow_ice_pellets Type: TEXT Description: Indicators (1 = yes, 0 = no/not reported) for the occurrence during the day
Column name: wdsp Type: TEXT Description: Mean wind speed for the day in knots to tenths. Missing = 999.9
Column name: count_stp Type: NUMBER Description: Number of observations used in calculating mean station pressure
Column name: stp Type: FLOAT Description: Mean station pressure for the day in millibars to tenths. Missing = 9999.9
Column name: flag_prcp Type: TEXT Description: A = 1 report of 6-hour precipitation amount
B = Summation of 2 reports of 6-hour precipitation amount
C = Summation of 3 reports of 6-hour precipitation amount
D = Summation of 4 reports of 6-hour precipitation amount
E = 1 report of 12-hour precipitation amount
F = Summation of 2 reports of 12-hour precipitation amount
G = 1 report of 24-hour precipitation amount
H = Station reported '0' as the amount for the day (eg, from 6-hour reports), but also reported at least one occurrence of precipitation in hourly observations--this could indicate a trace occurred, but should be considered as incomplete data for the day.
I = Station did not report any precip data for the day and did not report any occurrences of precipitation in its hourly observations--it's still possible that precip occurred but was not reported
Column name: tornado_funnel_cloud Type: TEXT Description: Indicators (1 = yes, 0 = no/not reported) for the occurrence during the day
Column name: min Type: FLOAT Description: Minimum temperature reported during the day in Fahrenheit to tenths--time of min temp report varies by country and region, so this will sometimes not be the min for the calendar day. Missing = 9999.9
Column name: hail Type: TEXT Description: Indicators (1 = yes, 0 = no/not reported) for the occurrence during the day
Column name: wban Type: TEXT Description: WBAN number where applicable--this is the historical "Weather Bureau Air Force Navy" number - with WBAN being the acronym
Column name: count_wdsp Type: TEXT Description: Number of observations used in calculating mean wind speed
Column name: prcp Type: FLOAT Description: Total precipitation (rain and/or melted snow) reported during the day in inches and hundredths; will usually not end with the midnight observation--i.e., may include latter part of previous day. 
.00 indicates no measurable precipitation (includes a trace).
Missing = 99.99
Note: Many stations do not report '0' on days with no precipitation--therefore, '99.99' will often appear on these days. Also, for example, a station may only report a 6-hour amount for the period during which rain fell. See Flag field for source of data
Column name: mxpsd Type: TEXT Description: Maximum sustained wind speed reported for the day in knots to tenths. Missing = 999.9
Column name: stn Type: TEXT Description: Station number (WMO/DATSAV3 number) for the location
Column name: count_temp Type: NUMBER Description: Number of observations used in calculating mean temperature
Column name: max Type: FLOAT Description: Maximum temperature reported during the day in Fahrenheit to tenths--time of max temp report varies by country and region, so this will sometimes not be the max for the calendar day. Missing = 9999.9
Column name: thunder Type: TEXT Description: Indicators (1 = yes, 0 = no/not reported) for the occurrence during the day
Column name: count_visib Type: NUMBER Description: Number of observations used in calculating mean visibility
Column name: rain_drizzle Type: TEXT Description: Indicators (1 = yes, 0 = no/not reported) for the occurrence during the day
Column name: count_slp Type: NUMBER Description: Number of observations used in calculating mean sea level pressure
Column name: count_dewp Type: NUMBER Description: Number of observations used in calculating mean dew point
Column name: gust Type: FLOAT Description: Maximum wind gust reported for the day in knots to tenths. Missing = 999.9
Column name: temp Type: FLOAT Description: Mean temperature for the day in degrees Fahrenheit to tenths. Missing = 9999.9
Column name: mo Type: TEXT Description: The month
Column name: visib Type: FLOAT Description: Mean visibility for the day in miles to tenths.  Missing = 999.9
Column name: flag_max Type: TEXT Description: Blank indicates max temp was taken from the explicit max temp report and not from the 'hourly' data.
* indicates max temp was  derived from the hourly data (i.e., highest hourly or synoptic-reported temperature)
Column name: flag_min Type: TEXT Description: Blank indicates min temp was taken from the explicit min temp report and not from the 'hourly' data.
* indicates min temp was derived from the hourly data (i.e., lowest hourly or synoptic-reported temperature)
Column name: year Type: TEXT Description: The year
Column name: sndp Type: FLOAT Description: Snow depth in inches to tenths--last report for the day if reported more thanonce. Missing = 999.9
Note: Most stations do not report '0' ondays with no snow on the ground--therefore, '999.9' will often appear on these days
Sample rows:
[{'stn': '030910', 'wban': '99999', 'year': '1931', 'mo': '01', 'da': '12', 'temp': 36.7, 'count_temp': 4, 'dewp': 9999.9, 'count_dewp': 0, 'slp': 1001.8, 'count_slp': 4, 'stp': 9999.9, 'count_stp': 0, 'visib': 5.9, 'count_visib': 4, 'wdsp': '3.5', 'count_wdsp': '4', 'mxpsd': '8.9', 'gust': 999.9, 'max': 50.0, 'flag_max': None, 'min': 34.0, 'flag_min': None, 'prcp': 99.99, 'flag_prcp': None, 'sndp': 999.9, 'fog': '0', 'rain_drizzle': '1', 'snow_ice_pellets': '0', 'hail': '0', 'thunder': '0', 'tornado_funnel_cloud': '0'}, {'stn': '030910', 'wban': '99999', 'year': '1931', 'mo': '08', 'da': '18', 'temp': 55.8, 'count_temp': 4, 'dewp': 9999.9, 'count_dewp': 0, 'slp': 1005.0, 'count_slp': 4, 'stp': 9999.9, 'count_stp': 0, 'visib': 7.5, 'count_visib': 4, 'wdsp': '6.0', 'count_wdsp': '4', 'mxpsd': '8.9', 'gust': 999.9, 'max': 60.1, 'flag_max': None, 'min': 51.1, 'flag_min': None, 'prcp': 99.99, 'flag_prcp': None, 'sndp': 999.9, 'fog': '0', 'rain_drizzle': '1', 'snow_ice_pellets': '0', 'hail': '0', 'thunder': '0', 'tornado_funnel_cloud': '0'}, {'stn': '030910', 'wban': '99999', 'year': '1931', 'mo': '09', 'da': '23', 'temp': 53.2, 'count_temp': 4, 'dewp': 9999.9, 'count_dewp': 0, 'slp': 1030.9, 'count_slp': 4, 'stp': 9999.9, 'count_stp': 0, 'visib': 12.4, 'count_visib': 4, 'wdsp': '8.9', 'count_wdsp': '4', 'mxpsd': '8.9', 'gust': 999.9, 'max': 63.0, 'flag_max': None, 'min': 51.1, 'flag_min': None, 'prcp': 99.99, 'flag_prcp': None, 'sndp': 999.9, 'fog': '0', 'rain_drizzle': '1', 'snow_ice_pellets': '0', 'hail': '0', 'thunder': '0', 'tornado_funnel_cloud': '0'}, {'stn': '030910', 'wban': '99999', 'year': '1931', 'mo': '11', 'da': '07', 'temp': 47.8, 'count_temp': 4, 'dewp': 9999.9, 'count_dewp': 0, 'slp': 997.6, 'count_slp': 4, 'stp': 9999.9, 'count_stp': 0, 'visib': 2.5, 'count_visib': 4, 'wdsp': '5.4', 'count_wdsp': '4', 'mxpsd': '8.9', 'gust': 999.9, 'max': 51.1, 'flag_max': None, 'min': 46.0, 'flag_min': None, 'prcp': 99.99, 'flag_prcp': None, 'sndp': 999.9, 'fog': '0', 'rain_drizzle': '1', 'snow_ice_pellets': '0', 'hail': '0', 'thunder': '0', 'tornado_funnel_cloud': '0'}, {'stn': '030910', 'wban': '99999', 'year': '1931', 'mo': '12', 'da': '25', 'temp': 44.7, 'count_temp': 4, 'dewp': 9999.9, 'count_dewp': 0, 'slp': 1021.6, 'count_slp': 4, 'stp': 9999.9, 'count_stp': 0, 'visib': 7.8, 'count_visib': 4, 'wdsp': '7.0', 'count_wdsp': '4', 'mxpsd': '8.9', 'gust': 999.9, 'max': 61.0, 'flag_max': None, 'min': 37.0, 'flag_min': None, 'prcp': 99.99, 'flag_prcp': None, 'sndp': 999.9, 'fog': '0', 'rain_drizzle': '1', 'snow_ice_pellets': '0', 'hail': '0', 'thunder': '0', 'tornado_funnel_cloud': '0'}]
Some other tables have the similar structure: ['GSOD1931', 'GSOD1932', 'GSOD1936', 'GSOD1942', 'GSOD1945', 'GSOD1947', 'GSOD1975', 'GSOD1977', 'GSOD1981', 'GSOD1991', 'GSOD2012', 'GSOD1957', 'GSOD1960', 'GSOD1966', 'GSOD2001', 'GSOD2002', 'GSOD2009', 'GSOD2018', 'GSOD2019', 'GSOD2022', 'GSOD1968', 'GSOD1972', 'GSOD1976', 'GSOD2000', 'GSOD1985', 'GSOD2010', 'GSOD2017', 'GSOD1979', 'GSOD1933', 'GSOD1939', 'GSOD1941', 'GSOD1943', 'GSOD1948', 'GSOD1949', 'GSOD1955', 'GSOD1965', 'GSOD1969', 'GSOD1978', 'GSOD2006', 'GSOD2023', 'GSOD2024', 'GSOD1962', 'GSOD1987', 'GSOD2007', 'GSOD2011', 'GSOD2020', 'GSOD2015', 'GSOD1946', 'GSOD1971', 'GSOD1929', 'GSOD1934', 'GSOD1940', 'GSOD1951', 'GSOD1953', 'GSOD1954', 'GSOD1961', 'GSOD1974', 'GSOD1983', 'GSOD1986', 'GSOD1990', 'GSOD2003', 'GSOD2005', 'GSOD1952', 'GSOD1956', 'GSOD1984', 'GSOD1988', 'GSOD2016', 'GSOD1938', 'GSOD1930', 'GSOD1937', 'GSOD1950', 'GSOD1963', 'GSOD1964', 'GSOD1982', 'GSOD1989', 'GSOD1993', 'GSOD1998', 'GSOD1999', 'GSOD2013', 'GSOD2014', 'GSOD1935', 'GSOD1958', 'GSOD1959', 'GSOD1967', 'GSOD1970', 'GSOD1973', 'GSOD1992', 'GSOD1995', 'GSOD2004', 'GSOD2008', 'GSOD1997', 'GSOD1944', 'GSOD1980', 'GSOD1996', 'GSOD2021', 'GSOD1994']
--------------------------------------------------
Table full name: NEW_YORK_CITIBIKE_1.NOAA_GSOD.STATIONS
Column name: elev Type: TEXT
Column name: country Type: TEXT
Column name: usaf Type: TEXT
Column name: lon Type: FLOAT
Column name: call Type: TEXT
Column name: wban Type: TEXT
Column name: name Type: TEXT
Column name: begin Type: TEXT
Column name: state Type: TEXT
Column name: lat Type: FLOAT
Column name: end Type: TEXT
Sample rows:
[{'usaf': '007018', 'wban': '99999', 'name': 'WXPOD 7018                   ', 'country': None, 'state': None, 'call': None, 'lat': 0.0, 'lon': 0.0, 'elev': '+7018.0', 'begin': '20110309', 'end': '20130730'}, {'usaf': '008307', 'wban': '99999', 'name': 'WXPOD 8318                   ', 'country': 'AF', 'state': None, 'call': None, 'lat': 0.0, 'lon': 0.0, 'elev': '+8318.0', 'begin': '20100421', 'end': '20100421'}, {'usaf': '010017', 'wban': '99999', 'name': 'FRIGG', 'country': 'NO', 'state': None, 'call': 'ENFR', 'lat': 59.98, 'lon': 2.25, 'elev': '+0048.0', 'begin': '19880320', 'end': '20050228'}, {'usaf': '010071', 'wban': '99999', 'name': 'LONGYEARBYEN', 'country': 'SV', 'state': None, 'call': None, 'lat': 78.217, 'lon': 15.583, 'elev': '+0037.0', 'begin': '20050210', 'end': '20050210'}, {'usaf': '010190', 'wban': '99999', 'name': 'SVARTTANGEN', 'country': 'NO', 'state': None, 'call': None, 'lat': 77.517, 'lon': 20.817, 'elev': '+0020.0', 'begin': '20100825', 'end': '20140523'}]
--------------------------------------------------
External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: [table name]}}): 
{'NEW_YORK_CITIBIKE_1': {'CYCLISTIC': ['STATE_FIPS', 'ZIP_CODES'], 'GEO_US_BOUNDARIES': ['ADJACENT_COUNTIES', 'CNECTA', 'CONGRESS_DISTRICT_116', 'NWS_FORECAST_REGIONS', 'COASTLINE', 'CSA', 'NATIONAL_OUTLINE', 'ADJACENT_STATES', 'CONGRESS_DISTRICT_115', 'METROPOLITAN_DIVISIONS', 'RAILWAYS', 'STATES', 'URBAN_AREAS', 'ZIP_CODES', 'CBSA', 'COUNTIES'], 'NEW_YORK_CITIBIKE': ['CITIBIKE_TRIPS', 'CITIBIKE_STATIONS'], 'NOAA_GSOD': ['GSOD1931', 'GSOD1931', 'GSOD1932', 'GSOD1936', 'GSOD1942', 'GSOD1945', 'GSOD1947', 'GSOD1975', 'GSOD1977', 'GSOD1981', 'GSOD1991', 'GSOD2012', 'GSOD1957', 'GSOD1960', 'GSOD1966', 'GSOD2001', 'GSOD2002', 'GSOD2009', 'GSOD2018', 'GSOD2019', 'GSOD2022', 'GSOD1968', 'GSOD1972', 'GSOD1976', 'GSOD2000', 'GSOD1985', 'GSOD2010', 'GSOD2017', 'GSOD1979', 'GSOD1933', 'GSOD1939', 'GSOD1941', 'GSOD1943', 'GSOD1948', 'GSOD1949', 'GSOD1955', 'GSOD1965', 'GSOD1969', 'GSOD1978', 'GSOD2006', 'GSOD2023', 'GSOD2024', 'GSOD1962', 'GSOD1987', 'GSOD2007', 'GSOD2011', 'GSOD2020', 'GSOD2015', 'GSOD1946', 'GSOD1971', 'GSOD1929', 'GSOD1934', 'GSOD1940', 'GSOD1951', 'GSOD1953', 'GSOD1954', 'GSOD1961', 'GSOD1974', 'GSOD1983', 'GSOD1986', 'GSOD1990', 'GSOD2003', 'GSOD2005', 'GSOD1952', 'GSOD1956', 'GSOD1984', 'GSOD1988', 'GSOD2016', 'GSOD1938', 'GSOD1930', 'GSOD1937', 'GSOD1950', 'GSOD1963', 'GSOD1964', 'GSOD1982', 'GSOD1989', 'GSOD1993', 'GSOD1998', 'GSOD1999', 'GSOD2013', 'GSOD2014', 'GSOD1935', 'GSOD1958', 'GSOD1959', 'GSOD1967', 'GSOD1970', 'GSOD1973', 'GSOD1992', 'GSOD1995', 'GSOD2004', 'GSOD2008', 'GSOD1997', 'GSOD1944', 'GSOD1980', 'GSOD1996', 'GSOD2021', 'GSOD1994', 'STATIONS']}}

Some few-shot examples after column exploration may be helpful:
Query:
--Description: 1) Look at a few 2014 Citibike trips (micro-second epoch between 2014-01-01 and 2014-12-31)
SELECT 
  "tripduration",
  "starttime",
  "stoptime",
  "start_station_id",
  "end_station_id",
  "start_station_latitude",
  "start_station_longitude",
  "end_station_latitude",
  "end_station_longitude"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_TRIPS
WHERE "starttime" BETWEEN 1388534400000000 AND 1420070399000000
LIMIT 20;
Answer:
tripduration,starttime,stoptime,start_station_id,end_station_id,start_station_latitude,start_station_longitude,end_station_latitude,end_station_longitude
649,1397995463000000,1397996112000000,350,320,40.71559509,-73.9870295,40.717571,-74.005549
689,1413883430000000,1413884119000000,350,320,40.71559509,-73.9870295,40.717571,-74.005549
734,1408018863000000,1408019597000000,497,320,40.73704984,-73.99009296,40.717571,-74.005549
346,1410172330000000,1410172676000000,151,320,40.7218158,-73.9972030
Query:
--Description: 2) Distinct station IDs that appear in 2014 trips (quick idea of node universe)
SELECT DISTINCT 
  "start_station_id"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_TRIPS
WHERE "starttime" BETWEEN 1388534400000000 AND 1420070399000000
LIMIT 20;
Answer:
start_station_id
342
366
348
466
229
446
473
241
359
320
492
223
128
247
540
253
388
173
380
2004
Query:
--Description: 3) Sample of current station table with names & coordinates
SELECT 
  "station_id",
  "name",
  "latitude",
  "longitude",
  "capacity"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_STATIONS
LIMIT 20;
Answer:
station_id,name,latitude,longitude,capacity
66dc0dab-0aca-11e7-82f6-3863bb44ef7c,W 59 St & 10 Ave,40.770513,-73.988038,117
39f756c2-3904-463e-95a8-8d8e3540e845,W 25 St & 9 Ave,40.74783260583772,-74.0005722643582,38
66db4282-0aca-11e7-82f6-3863bb44ef7c,W 11 St & 6 Ave,40.73532427,-73.99800419,47
66ddb6d9-0aca-11e7-82f6-3863bb44ef7c,University Pl & E 8 St,40.73143724085228,-73.99490341544151,79
4ad1714c-528e-4200-882f-82082c4d85b0,Creston Ave & E 178 St,40.850885,-73.906469,28
9b70cbe2-25fc-
Query:
--Description: 5) Cyclistic ZIP-code lookup showing borough and neighborhood labels
SELECT
  "zip",
  "borough",
  "neighborhood"
FROM NEW_YORK_CITIBIKE_1.CYCLISTIC.ZIP_CODES
LIMIT 20
Answer:
zip,borough,neighborhood
10458,Bronx,Bronx Park and Fordham
10467,Bronx,Bronx Park and Fordham
10468,Bronx,Bronx Park and Fordham
10453,Bronx,Central Bronx
10457,Bronx,Central Bronx
10460,Bronx,Central Bronx
10451,Bronx,High Bridge and Morrisania
10452,Bronx,High Bridge and Morrisania
10456,Bronx,High Bridge and Morrisania
10454,Bronx,Hunts Point and Mott Haven
10455,Bronx,Hunts Point and Mott Haven
10459,Bronx,Hunts Point and Mott Haven
Query:
--Description: 6) Identify Central Park weather-station rows in NOAA_GSOD.STATIONS (NY only)
SELECT
  "usaf",
  "wban",
  "name",
  "state",
  "lat",
  "lon",
  "begin",
  "end"
FROM NEW_YORK_CITIBIKE_1.NOAA_GSOD.STATIONS
WHERE "name" ILIKE '%CENTRAL%PARK%'
  AND "state" = 'NY'
LIMIT 20
Answer:
usaf,wban,name,state,lat,lon,begin,end
725033,94728,NYC CENTRAL PARK,NY,40.779,-73.969,19431201,20100817
725060,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969,20100817,20120430
999999,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969,19650101,20120731
725053,94728,CENTRAL PARK,NY,40.779,-73.969,20050101,20210921
Query:
--Description: 8) Examine wind-speed and precipitation for Central Park during 2014  
SELECT
  "wdsp",
  "prcp"
FROM NEW_YORK_CITIBIKE_1.NOAA_GSOD.GSOD2014
WHERE "wban" = '94728'      -- Central Park WBAN
  AND "year" = '2014'
LIMIT 20
Answer:
wdsp,prcp
999.9,0.0
999.9,0.0
999.9,0.02
3.3,0.38
6.9,0.04
6.3,0.0
2.6,0.49
10.1,0.58
5.7,0.04
4.4,0.19
2.9,0.0
4.7,0.0
3.4,0.07
3.1,0.02
6.1,0.09
4.5,1.23
2.0,1.0
8.9,0.04
11.0,0.35
7.3,0.69
Query:
--Description: 9) Count 2014 trips whose start-station ID can be matched to a numeric value in the stations table  
SELECT
  COUNT(*) AS "trip_cnt"
FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_TRIPS  t
JOIN NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_STATIONS s
  ON TRY_TO_NUMBER(s."station_id") = t."start_station_id"
WHERE t."starttime" BETWEEN 1388534400000000 AND 1420070399000000
Answer:
trip_cnt
0
Task: I want to analyze bike trips in New York City for 2014 by linking trip data with weather information to understand how weather conditions (temperature, wind speed, and precipitation) affect bike trips between neighborhoods. For each combination of starting and ending neighborhoods, I need the following: 1. Total number of bike trips between the neighborhoods. 2. Average trip duration in minutes (rounded to 1 decimal). 3. Average temperature at the start of the trip (rounded to 1 decimal). 4. Average wind speed at the start (in meters per second, rounded to 1 decimal). 5. Average precipitation at the start (in centimeters, rounded to 1 decimal). 6. The month with the most trips (e.g., `4` for April). The data should be grouped by the starting and ending neighborhoods, with:`zip_codes` in `geo_us_boundaries` used to map the bike trip locations based on latitude and longitude. `zip_codes` in `cyclistic` used to obtain the borough and neighborhood names. Using weather data from the Central Park station for the trip date, covering all trips in 2014.

Please think step by step and answer only one complete SQL in snowflake dialect in ```sql``` format.
SQL usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'NEW_YORK_CITIBIKE_1': {'CYCLISTIC': ['STATE_FIPS', 'ZIP_CODES'], 'GEO_US_BOUNDARIES': ['ADJACENT_COUNTIES', 'CNECTA', 'CONGRESS_DISTRICT_116', 'NWS_FORECAST_REGIONS', 'COASTLINE', 'CSA', 'NATIONAL_OUTLINE', 'ADJACENT_STATES', 'CONGRESS_DISTRICT_115', 'METROPOLITAN_DIVISIONS', 'RAILWAYS', 'STATES', 'URBAN_AREAS', 'ZIP_CODES', 'CBSA', 'COUNTIES'], 'NEW_YORK_CITIBIKE': ['CITIBIKE_TRIPS', 'CITIBIKE_STATIONS'], 'NOAA_GSOD': ['GSOD1931', 'GSOD1931', 'GSOD1932', 'GSOD1936', 'GSOD1942', 'GSOD1945', 'GSOD1947', 'GSOD1975', 'GSOD1977', 'GSOD1981', 'GSOD1991', 'GSOD2012', 'GSOD1957', 'GSOD1960', 'GSOD1966', 'GSOD2001', 'GSOD2002', 'GSOD2009', 'GSOD2018', 'GSOD2019', 'GSOD2022', 'GSOD1968', 'GSOD1972', 'GSOD1976', 'GSOD2000', 'GSOD1985', 'GSOD2010', 'GSOD2017', 'GSOD1979', 'GSOD1933', 'GSOD1939', 'GSOD1941', 'GSOD1943', 'GSOD1948', 'GSOD1949', 'GSOD1955', 'GSOD1965', 'GSOD1969', 'GSOD1978', 'GSOD2006', 'GSOD2023', 'GSOD2024', 'GSOD1962', 'GSOD1987', 'GSOD2007', 'GSOD2011', 'GSOD2020', 'GSOD2015', 'GSOD1946', 'GSOD1971', 'GSOD1929', 'GSOD1934', 'GSOD1940', 'GSOD1951', 'GSOD1953', 'GSOD1954', 'GSOD1961', 'GSOD1974', 'GSOD1983', 'GSOD1986', 'GSOD1990', 'GSOD2003', 'GSOD2005', 'GSOD1952', 'GSOD1956', 'GSOD1984', 'GSOD1988', 'GSOD2016', 'GSOD1938', 'GSOD1930', 'GSOD1937', 'GSOD1950', 'GSOD1963', 'GSOD1964', 'GSOD1982', 'GSOD1989', 'GSOD1993', 'GSOD1998', 'GSOD1999', 'GSOD2013', 'GSOD2014', 'GSOD1935', 'GSOD1958', 'GSOD1959', 'GSOD1967', 'GSOD1970', 'GSOD1973', 'GSOD1992', 'GSOD1995', 'GSOD2004', 'GSOD2008', 'GSOD1997', 'GSOD1944', 'GSOD1980', 'GSOD1996', 'GSOD2021', 'GSOD1994', 'STATIONS']}}

When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
If the task description does not specify the number of decimal places, retain all decimals to four places.

[Self-refine]
2025-05-07 05:20:37 - Thread-24 (execute) - INFO - [Try to run SQL in self-refine]
```sql
/*  Bike-trip flows (2014) between New York City neighbourhoods
    enriched with same–day Central-Park weather observations         */

WITH trips_2014 AS (   ----------------------------------------------------------
    /* convert micro-second epoch to DATE (local time) and keep the
       coordinates that will be pushed into the ZIP-code polygons    */
    SELECT  "start_station_latitude"   AS start_lat ,
            "start_station_longitude"  AS start_lon ,
            "end_station_latitude"     AS end_lat ,
            "end_station_longitude"    AS end_lon ,
            "tripduration"                         ,
            CAST( TO_TIMESTAMP( "starttime" / 1e6 ) AS DATE)  AS trip_date ,
            EXTRACT ( MONTH FROM TO_TIMESTAMP( "starttime" / 1e6 ) )
                                                     AS trip_month
    FROM   NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_TRIPS
    WHERE  "starttime"
           BETWEEN 1388534400000000      -- 2014-01-01 00:00:00
               AND 1420070399000000      -- 2014-12-31 23:59:59
), start_zip AS (      ----------------------------------------------------------
    /* point-in-polygon to find ZIP code of the START co-ordinate     */
    SELECT  t.* ,
            gz."zip_code"::TEXT AS start_zip
    FROM    trips_2014 t
    JOIN    NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ZIP_CODES gz
           ON ST_CONTAINS
              ( TO_GEOGRAPHY(gz."zip_code_geom")
              , TO_GEOGRAPHY(POINT(t.start_lon , t.start_lat )) )
), both_zips AS (      ----------------------------------------------------------
    /* point-in-polygon to find ZIP code of the END co-ordinate       */
    SELECT  s.* ,
            gz."zip_code"::TEXT AS end_zip
    FROM    start_zip s
    JOIN    NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ZIP_CODES gz
           ON ST_CONTAINS
              ( TO_GEOGRAPHY(gz."zip_code_geom")
              , TO_GEOGRAPHY(POINT(s.end_lon , s.end_lat )) )
), with_neighb AS (    ----------------------------------------------------------
    /* attach borough/neighbourhood names taken from the Cyclistic
       lookup table (one row per trip once both ends are resolved)    */
    SELECT  b.* ,
            czs."neighborhood" AS start_neigh ,
            cze."neighborhood" AS end_neigh
    FROM    both_zips b
    LEFT JOIN NEW_YORK_CITIBIKE_1.CYCLISTIC.ZIP_CODES czs
           ON czs."zip" = TRY_TO_NUMBER(b.start_zip)
    LEFT JOIN NEW_YORK_CITIBIKE_1.CYCLISTIC.ZIP_CODES cze
           ON cze."zip" = TRY_TO_NUMBER(b.end_zip)
    WHERE   czs."neighborhood" IS NOT NULL
      AND   cze."neighborhood" IS NOT NULL
), weather_2014 AS (   ----------------------------------------------------------
    /* Central-Park daily weather – WBAN 94728, year 2014             */
    SELECT TO_DATE( CONCAT("year",'-',"mo",'-',"da") )               AS wx_date ,
           "temp"                           AS temp_f ,
           TRY_TO_NUMBER("wdsp")            AS wind_knots ,
           "prcp"                           AS prcp_in
    FROM   NEW_YORK_CITIBIKE_1.NOAA_GSOD.GSOD2014
    WHERE  "wban" = '94728'
), trips_wx AS (       ----------------------------------------------------------
    /* join every trip with its same-day weather observation          */
    SELECT  n.start_neigh ,
            n.end_neigh ,
            n.tripduration ,
            n.trip_month  ,
            w.temp_f ,
            w.wind_knots ,
            w.prcp_in
    FROM    with_neighb n
    JOIN    weather_2014 w
           ON w.wx_date = n.trip_date
), agg_totals AS (     ----------------------------------------------------------
    /* main aggregates for each origin-destination neighbourhood pair */
    SELECT  start_neigh ,
            end_neigh ,
            COUNT(*)                                   AS total_trips ,
            AVG(tripduration)/60.0                     AS avg_minutes ,
            AVG(temp_f)                                AS avg_temp_f ,
            AVG(wind_knots*0.514444)                   AS avg_wind_mps ,
            AVG(prcp_in*2.54)                          AS avg_prcp_cm
    FROM    trips_wx
    GROUP BY 1,2
), month_counts AS (   ----------------------------------------------------------
    SELECT  start_neigh ,
            end_neigh ,
            trip_month ,
            COUNT(*) AS month_trips
    FROM    trips_wx
    GROUP BY 1,2,3
), busiest AS (        ----------------------------------------------------------
    /* pick the month with the highest number of trips                */
    SELECT  start_neigh ,
            end_neigh ,
            trip_month       AS busiest_month ,
            ROW_NUMBER() OVER (PARTITION BY start_neigh,end_neigh
                                ORDER BY month_trips DESC, trip_month) AS rn
    FROM    month_counts
)
SELECT  a.start_neigh    AS "start_neighborhood" ,
        a.end_neigh      AS "end_neighborhood"   ,
        a.total_trips    AS "total_trips" ,
        ROUND(a.avg_minutes   ,1) AS "avg_trip_duration_minutes" ,
        ROUND(a.avg_temp_f    ,1) AS "avg_temp_f" ,
        ROUND(a.avg_wind_mps  ,1) AS "avg_wind_speed_mps" ,
        ROUND(a.avg_prcp_cm   ,1) AS "avg_precip_cm" ,
        b.busiest_month            AS "busiest_month"
FROM        agg_totals  a
JOIN LATERAL (SELECT busiest_month
              FROM   busiest
              WHERE  rn = 1
                AND  start_neigh = a.start_neigh
                AND  end_neigh   = a.end_neigh) b
     ON TRUE
ORDER BY a.total_trips DESC NULLS LAST;
```
[Try to run SQL in self-refine]
2025-05-07 05:20:38 - Thread-24 (execute) - INFO - itercount: 1
2025-05-07 05:20:38 - Thread-24 (execute) - INFO - [Self-refine]
Input sql:
/*  Bike-trip flows (2014) between New York City neighbourhoods
    enriched with same–day Central-Park weather observations         */

WITH trips_2014 AS (   ----------------------------------------------------------
    /* convert micro-second epoch to DATE (local time) and keep the
       coordinates that will be pushed into the ZIP-code polygons    */
    SELECT  "start_station_latitude"   AS start_lat ,
            "start_station_longitude"  AS start_lon ,
            "end_station_latitude"     AS end_lat ,
            "end_station_longitude"    AS end_lon ,
            "tripduration"                         ,
            CAST( TO_TIMESTAMP( "starttime" / 1e6 ) AS DATE)  AS trip_date ,
            EXTRACT ( MONTH FROM TO_TIMESTAMP( "starttime" / 1e6 ) )
                                                     AS trip_month
    FROM   NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_TRIPS
    WHERE  "starttime"
           BETWEEN 1388534400000000      -- 2014-01-01 00:00:00
               AND 1420070399000000      -- 2014-12-31 23:59:59
), start_zip AS (      ----------------------------------------------------------
    /* point-in-polygon to find ZIP code of the START co-ordinate     */
    SELECT  t.* ,
            gz."zip_code"::TEXT AS start_zip
    FROM    trips_2014 t
    JOIN    NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ZIP_CODES gz
           ON ST_CONTAINS
              ( TO_GEOGRAPHY(gz."zip_code_geom")
              , TO_GEOGRAPHY(POINT(t.start_lon , t.start_lat )) )
), both_zips AS (      ----------------------------------------------------------
    /* point-in-polygon to find ZIP code of the END co-ordinate       */
    SELECT  s.* ,
            gz."zip_code"::TEXT AS end_zip
    FROM    start_zip s
    JOIN    NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ZIP_CODES gz
           ON ST_CONTAINS
              ( TO_GEOGRAPHY(gz."zip_code_geom")
              , TO_GEOGRAPHY(POINT(s.end_lon , s.end_lat )) )
), with_neighb AS (    ----------------------------------------------------------
    /* attach borough/neighbourhood names taken from the Cyclistic
       lookup table (one row per trip once both ends are resolved)    */
    SELECT  b.* ,
            czs."neighborhood" AS start_neigh ,
            cze."neighborhood" AS end_neigh
    FROM    both_zips b
    LEFT JOIN NEW_YORK_CITIBIKE_1.CYCLISTIC.ZIP_CODES czs
           ON czs."zip" = TRY_TO_NUMBER(b.start_zip)
    LEFT JOIN NEW_YORK_CITIBIKE_1.CYCLISTIC.ZIP_CODES cze
           ON cze."zip" = TRY_TO_NUMBER(b.end_zip)
    WHERE   czs."neighborhood" IS NOT NULL
      AND   cze."neighborhood" IS NOT NULL
), weather_2014 AS (   ----------------------------------------------------------
    /* Central-Park daily weather – WBAN 94728, year 2014             */
    SELECT TO_DATE( CONCAT("year",'-',"mo",'-',"da") )               AS wx_date ,
           "temp"                           AS temp_f ,
           TRY_TO_NUMBER("wdsp")            AS wind_knots ,
           "prcp"                           AS prcp_in
    FROM   NEW_YORK_CITIBIKE_1.NOAA_GSOD.GSOD2014
    WHERE  "wban" = '94728'
), trips_wx AS (       ----------------------------------------------------------
    /* join every trip with its same-day weather observation          */
    SELECT  n.start_neigh ,
            n.end_neigh ,
            n.tripduration ,
            n.trip_month  ,
            w.temp_f ,
            w.wind_knots ,
            w.prcp_in
    FROM    with_neighb n
    JOIN    weather_2014 w
           ON w.wx_date = n.trip_date
), agg_totals AS (     ----------------------------------------------------------
    /* main aggregates for each origin-destination neighbourhood pair */
    SELECT  start_neigh ,
            end_neigh ,
            COUNT(*)                                   AS total_trips ,
            AVG(tripduration)/60.0                     AS avg_minutes ,
            AVG(temp_f)                                AS avg_temp_f ,
            AVG(wind_knots*0.514444)                   AS avg_wind_mps ,
            AVG(prcp_in*2.54)                          AS avg_prcp_cm
    FROM    trips_wx
    GROUP BY 1,2
), month_counts AS (   ----------------------------------------------------------
    SELECT  start_neigh ,
            end_neigh ,
            trip_month ,
            COUNT(*) AS month_trips
    FROM    trips_wx
    GROUP BY 1,2,3
), busiest AS (        ----------------------------------------------------------
    /* pick the month with the highest number of trips                */
    SELECT  start_neigh ,
            end_neigh ,
            trip_month       AS busiest_month ,
            ROW_NUMBER() OVER (PARTITION BY start_neigh,end_neigh
                                ORDER BY month_trips DESC, trip_month) AS rn
    FROM    month_counts
)
SELECT  a.start_neigh    AS "start_neighborhood" ,
        a.end_neigh      AS "end_neighborhood"   ,
        a.total_trips    AS "total_trips" ,
        ROUND(a.avg_minutes   ,1) AS "avg_trip_duration_minutes" ,
        ROUND(a.avg_temp_f    ,1) AS "avg_temp_f" ,
        ROUND(a.avg_wind_mps  ,1) AS "avg_wind_speed_mps" ,
        ROUND(a.avg_prcp_cm   ,1) AS "avg_precip_cm" ,
        b.busiest_month            AS "busiest_month"
FROM        agg_totals  a
JOIN LATERAL (SELECT busiest_month
              FROM   busiest
              WHERE  rn = 1
                AND  start_neigh = a.start_neigh
                AND  end_neigh   = a.end_neigh) b
     ON TRUE
ORDER BY a.total_trips DESC NULLS LAST;
The error information is:
{'status': 'error', 'error_msg': '##ERROR##002140 (42601): SQL compilation error:\nUnknown function POINT'}
Please correct it and output only 1 complete SQL query.
[Self-refine]
2025-05-07 05:22:26 - Thread-24 (execute) - INFO - [Try to run SQL in self-refine]
```sql
/*  Bike-trip flows (2014) between NYC neighbourhoods
    enriched with same-day Central-Park weather observations          */

WITH trips_2014 AS (  -----------------------------------------------------------
    /* convert micro-second epoch to DATE and keep co-ordinates        */
    SELECT  "start_station_latitude"   AS start_lat ,
            "start_station_longitude"  AS start_lon ,
            "end_station_latitude"     AS end_lat ,
            "end_station_longitude"    AS end_lon ,
            "tripduration"                         ,
            CAST( TO_TIMESTAMP( "starttime" / 1e6 ) AS DATE) AS trip_date ,
            EXTRACT ( MONTH FROM TO_TIMESTAMP( "starttime" / 1e6 ) )
                                                     AS trip_month
    FROM   NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_TRIPS
    WHERE  "starttime"
           BETWEEN 1388534400000000        -- 2014-01-01
               AND 1420070399000000        -- 2014-12-31
), start_zip AS (      ----------------------------------------------------------
    /* ZIP for START coordinates via point-in-polygon                   */
    SELECT  t.* ,
            gz."zip_code"::TEXT AS start_zip
    FROM    trips_2014 t
    JOIN    NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ZIP_CODES gz
           ON ST_CONTAINS
              ( TO_GEOGRAPHY(gz."zip_code_geom")
              , TO_GEOGRAPHY(
                   CONCAT('POINT('
                          , t.start_lon , ' ' , t.start_lat , ')') ) )
), both_zips AS (      ----------------------------------------------------------
    /* ZIP for END coordinates                                          */
    SELECT  s.* ,
            gz."zip_code"::TEXT AS end_zip
    FROM    start_zip s
    JOIN    NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ZIP_CODES gz
           ON ST_CONTAINS
              ( TO_GEOGRAPHY(gz."zip_code_geom")
              , TO_GEOGRAPHY(
                   CONCAT('POINT('
                          , s.end_lon , ' ' , s.end_lat , ')') ) )
), with_neighb AS (    ----------------------------------------------------------
    /* attach neighbourhood names from Cyclistic lookup                 */
    SELECT  b.* ,
            czs."neighborhood" AS start_neigh ,
            cze."neighborhood" AS end_neigh
    FROM    both_zips b
    LEFT JOIN NEW_YORK_CITIBIKE_1.CYCLISTIC.ZIP_CODES czs
           ON czs."zip" = TRY_TO_NUMBER(b.start_zip)
    LEFT JOIN NEW_YORK_CITIBIKE_1.CYCLISTIC.ZIP_CODES cze
           ON cze."zip" = TRY_TO_NUMBER(b.end_zip)
    WHERE   czs."neighborhood" IS NOT NULL
      AND   cze."neighborhood" IS NOT NULL
), weather_2014 AS (   ----------------------------------------------------------
    /* Central-Park daily weather – WBAN 94728                          */
    SELECT TO_DATE( CONCAT("year",'-',"mo",'-',"da") ) AS wx_date ,
           "temp"                         AS temp_f ,
           TRY_TO_NUMBER("wdsp")          AS wind_knots ,
           "prcp"                         AS prcp_in
    FROM   NEW_YORK_CITIBIKE_1.NOAA_GSOD.GSOD2014
    WHERE  "wban" = '94728'
), trips_wx AS (       ----------------------------------------------------------
    /* join trip with same-day weather                                  */
    SELECT  n.start_neigh ,
            n.end_neigh ,
            n.tripduration ,
            n.trip_month  ,
            w.temp_f ,
            w.wind_knots ,
            w.prcp_in
    FROM    with_neighb n
    JOIN    weather_2014 w
           ON w.wx_date = n.trip_date
), agg_totals AS (     ----------------------------------------------------------
    SELECT  start_neigh ,
            end_neigh ,
            COUNT(*)                          AS total_trips ,
            AVG(tripduration)/60.0            AS avg_minutes ,
            AVG(temp_f)                       AS avg_temp_f ,
            AVG(wind_knots*0.514444)          AS avg_wind_mps ,
            AVG(prcp_in*2.54)                 AS avg_prcp_cm
    FROM    trips_wx
    GROUP BY 1,2
), month_counts AS (   ----------------------------------------------------------
    SELECT  start_neigh ,
            end_neigh ,
            trip_month ,
            COUNT(*) AS month_trips
    FROM    trips_wx
    GROUP BY 1,2,3
), busiest AS (        ----------------------------------------------------------
    SELECT  start_neigh ,
            end_neigh ,
            trip_month  AS busiest_month ,
            ROW_NUMBER() OVER (PARTITION BY start_neigh,end_neigh
                                ORDER BY month_trips DESC, trip_month) AS rn
    FROM    month_counts
)
SELECT  a.start_neigh  AS "start_neighborhood" ,
        a.end_neigh    AS "end_neighborhood"   ,
        a.total_trips  AS "total_trips" ,
        ROUND(a.avg_minutes  ,1) AS "avg_trip_duration_minutes" ,
        ROUND(a.avg_temp_f   ,1) AS "avg_temp_f" ,
        ROUND(a.avg_wind_mps ,1) AS "avg_wind_speed_mps" ,
        ROUND(a.avg_prcp_cm  ,1) AS "avg_precip_cm" ,
        b.busiest_month         AS "busiest_month"
FROM   agg_totals a
JOIN LATERAL (
        SELECT busiest_month
        FROM   busiest
        WHERE  rn = 1
          AND  start_neigh = a.start_neigh
          AND  end_neigh   = a.end_neigh
      ) b
     ON TRUE
ORDER BY a.total_trips DESC NULLS LAST;
```
[Try to run SQL in self-refine]
2025-05-07 05:22:26 - Thread-24 (execute) - INFO - itercount: 2
2025-05-07 05:22:26 - Thread-24 (execute) - INFO - [Self-refine]
Input sql:
/*  Bike-trip flows (2014) between NYC neighbourhoods
    enriched with same-day Central-Park weather observations          */

WITH trips_2014 AS (  -----------------------------------------------------------
    /* convert micro-second epoch to DATE and keep co-ordinates        */
    SELECT  "start_station_latitude"   AS start_lat ,
            "start_station_longitude"  AS start_lon ,
            "end_station_latitude"     AS end_lat ,
            "end_station_longitude"    AS end_lon ,
            "tripduration"                         ,
            CAST( TO_TIMESTAMP( "starttime" / 1e6 ) AS DATE) AS trip_date ,
            EXTRACT ( MONTH FROM TO_TIMESTAMP( "starttime" / 1e6 ) )
                                                     AS trip_month
    FROM   NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_TRIPS
    WHERE  "starttime"
           BETWEEN 1388534400000000        -- 2014-01-01
               AND 1420070399000000        -- 2014-12-31
), start_zip AS (      ----------------------------------------------------------
    /* ZIP for START coordinates via point-in-polygon                   */
    SELECT  t.* ,
            gz."zip_code"::TEXT AS start_zip
    FROM    trips_2014 t
    JOIN    NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ZIP_CODES gz
           ON ST_CONTAINS
              ( TO_GEOGRAPHY(gz."zip_code_geom")
              , TO_GEOGRAPHY(
                   CONCAT('POINT('
                          , t.start_lon , ' ' , t.start_lat , ')') ) )
), both_zips AS (      ----------------------------------------------------------
    /* ZIP for END coordinates                                          */
    SELECT  s.* ,
            gz."zip_code"::TEXT AS end_zip
    FROM    start_zip s
    JOIN    NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ZIP_CODES gz
           ON ST_CONTAINS
              ( TO_GEOGRAPHY(gz."zip_code_geom")
              , TO_GEOGRAPHY(
                   CONCAT('POINT('
                          , s.end_lon , ' ' , s.end_lat , ')') ) )
), with_neighb AS (    ----------------------------------------------------------
    /* attach neighbourhood names from Cyclistic lookup                 */
    SELECT  b.* ,
            czs."neighborhood" AS start_neigh ,
            cze."neighborhood" AS end_neigh
    FROM    both_zips b
    LEFT JOIN NEW_YORK_CITIBIKE_1.CYCLISTIC.ZIP_CODES czs
           ON czs."zip" = TRY_TO_NUMBER(b.start_zip)
    LEFT JOIN NEW_YORK_CITIBIKE_1.CYCLISTIC.ZIP_CODES cze
           ON cze."zip" = TRY_TO_NUMBER(b.end_zip)
    WHERE   czs."neighborhood" IS NOT NULL
      AND   cze."neighborhood" IS NOT NULL
), weather_2014 AS (   ----------------------------------------------------------
    /* Central-Park daily weather – WBAN 94728                          */
    SELECT TO_DATE( CONCAT("year",'-',"mo",'-',"da") ) AS wx_date ,
           "temp"                         AS temp_f ,
           TRY_TO_NUMBER("wdsp")          AS wind_knots ,
           "prcp"                         AS prcp_in
    FROM   NEW_YORK_CITIBIKE_1.NOAA_GSOD.GSOD2014
    WHERE  "wban" = '94728'
), trips_wx AS (       ----------------------------------------------------------
    /* join trip with same-day weather                                  */
    SELECT  n.start_neigh ,
            n.end_neigh ,
            n.tripduration ,
            n.trip_month  ,
            w.temp_f ,
            w.wind_knots ,
            w.prcp_in
    FROM    with_neighb n
    JOIN    weather_2014 w
           ON w.wx_date = n.trip_date
), agg_totals AS (     ----------------------------------------------------------
    SELECT  start_neigh ,
            end_neigh ,
            COUNT(*)                          AS total_trips ,
            AVG(tripduration)/60.0            AS avg_minutes ,
            AVG(temp_f)                       AS avg_temp_f ,
            AVG(wind_knots*0.514444)          AS avg_wind_mps ,
            AVG(prcp_in*2.54)                 AS avg_prcp_cm
    FROM    trips_wx
    GROUP BY 1,2
), month_counts AS (   ----------------------------------------------------------
    SELECT  start_neigh ,
            end_neigh ,
            trip_month ,
            COUNT(*) AS month_trips
    FROM    trips_wx
    GROUP BY 1,2,3
), busiest AS (        ----------------------------------------------------------
    SELECT  start_neigh ,
            end_neigh ,
            trip_month  AS busiest_month ,
            ROW_NUMBER() OVER (PARTITION BY start_neigh,end_neigh
                                ORDER BY month_trips DESC, trip_month) AS rn
    FROM    month_counts
)
SELECT  a.start_neigh  AS "start_neighborhood" ,
        a.end_neigh    AS "end_neighborhood"   ,
        a.total_trips  AS "total_trips" ,
        ROUND(a.avg_minutes  ,1) AS "avg_trip_duration_minutes" ,
        ROUND(a.avg_temp_f   ,1) AS "avg_temp_f" ,
        ROUND(a.avg_wind_mps ,1) AS "avg_wind_speed_mps" ,
        ROUND(a.avg_prcp_cm  ,1) AS "avg_precip_cm" ,
        b.busiest_month         AS "busiest_month"
FROM   agg_totals a
JOIN LATERAL (
        SELECT busiest_month
        FROM   busiest
        WHERE  rn = 1
          AND  start_neigh = a.start_neigh
          AND  end_neigh   = a.end_neigh
      ) b
     ON TRUE
ORDER BY a.total_trips DESC NULLS LAST;
The error information is:
{'status': 'error', 'error_msg': "##ERROR##000904 (42000): SQL compilation error: error line 61 at position 12\ninvalid identifier 'N.TRIPDURATION'"}
Please correct it and output only 1 complete SQL query.
[Self-refine]
2025-05-07 05:24:35 - Thread-24 (execute) - INFO - [Try to run SQL in self-refine]
```sql
/*  Bike-trip flows (2014) between NYC neighbourhoods
    enriched with same-day Central-Park weather observations          */

WITH trips_2014 AS (  -----------------------------------------------------------
    /* Convert micro-second epoch to DATE and keep co-ordinates        */
    SELECT  "start_station_latitude"   AS start_lat ,
            "start_station_longitude"  AS start_lon ,
            "end_station_latitude"     AS end_lat ,
            "end_station_longitude"    AS end_lon ,
            "tripduration"             AS trip_duration ,          -- unquoted
            CAST( TO_TIMESTAMP( "starttime" / 1e6 ) AS DATE) AS trip_date ,
            EXTRACT ( MONTH FROM TO_TIMESTAMP( "starttime" / 1e6 ) )
                                                  AS trip_month
    FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_TRIPS
    WHERE "starttime"
          BETWEEN 1388534400000000        -- 2014-01-01
              AND 1420070399000000        -- 2014-12-31
), start_zip AS (      ----------------------------------------------------------
    /* ZIP for START coordinates via point-in-polygon                   */
    SELECT  t.* ,
            gz."zip_code"::TEXT AS start_zip
    FROM    trips_2014 t
    JOIN NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ZIP_CODES gz
      ON ST_CONTAINS (
           TO_GEOGRAPHY(gz."zip_code_geom"),
           TO_GEOGRAPHY( CONCAT('POINT(', t.start_lon, ' ', t.start_lat, ')') )
         )
), both_zips AS (      ----------------------------------------------------------
    /* ZIP for END coordinates                                          */
    SELECT  s.* ,
            gz."zip_code"::TEXT AS end_zip
    FROM    start_zip s
    JOIN NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ZIP_CODES gz
      ON ST_CONTAINS (
           TO_GEOGRAPHY(gz."zip_code_geom"),
           TO_GEOGRAPHY( CONCAT('POINT(', s.end_lon, ' ', s.end_lat, ')') )
         )
), with_neighb AS (    ----------------------------------------------------------
    /* Attach neighbourhood names from Cyclistic lookup                 */
    SELECT  b.* ,
            czs."neighborhood" AS start_neigh ,
            cze."neighborhood" AS end_neigh
    FROM    both_zips b
    LEFT JOIN NEW_YORK_CITIBIKE_1.CYCLISTIC.ZIP_CODES czs
           ON czs."zip" = TRY_TO_NUMBER(b.start_zip)
    LEFT JOIN NEW_YORK_CITIBIKE_1.CYCLISTIC.ZIP_CODES cze
           ON cze."zip" = TRY_TO_NUMBER(b.end_zip)
    WHERE   czs."neighborhood" IS NOT NULL
      AND   cze."neighborhood" IS NOT NULL
), weather_2014 AS (   ----------------------------------------------------------
    /* Central-Park daily weather – WBAN 94728                          */
    SELECT TO_DATE( CONCAT("year",'-',"mo",'-',"da") ) AS wx_date ,
           "temp"                         AS temp_f ,
           TRY_TO_NUMBER("wdsp")          AS wind_knots ,
           "prcp"                         AS prcp_in
    FROM NEW_YORK_CITIBIKE_1.NOAA_GSOD.GSOD2014
    WHERE "wban" = '94728'
), trips_wx AS (       ----------------------------------------------------------
    /* Join trip with same-day weather                                  */
    SELECT  n.start_neigh ,
            n.end_neigh ,
            n.trip_duration ,
            n.trip_month ,
            w.temp_f ,
            w.wind_knots ,
            w.prcp_in
    FROM   with_neighb n
    JOIN   weather_2014 w
      ON   w.wx_date = n.trip_date
), agg_totals AS (     ----------------------------------------------------------
    SELECT  start_neigh ,
            end_neigh ,
            COUNT(*)                       AS total_trips ,
            AVG(trip_duration)/60.0        AS avg_minutes ,
            AVG(temp_f)                    AS avg_temp_f ,
            AVG(wind_knots*0.514444)       AS avg_wind_mps ,
            AVG(prcp_in*2.54)              AS avg_prcp_cm
    FROM   trips_wx
    GROUP BY 1,2
), month_counts AS (   ----------------------------------------------------------
    SELECT  start_neigh ,
            end_neigh ,
            trip_month ,
            COUNT(*) AS month_trips
    FROM   trips_wx
    GROUP BY 1,2,3
), busiest AS (        ----------------------------------------------------------
    SELECT  start_neigh ,
            end_neigh ,
            trip_month AS busiest_month ,
            ROW_NUMBER() OVER (PARTITION BY start_neigh, end_neigh
                               ORDER BY month_trips DESC, trip_month) AS rn
    FROM   month_counts
)
SELECT  a.start_neigh  AS "start_neighborhood" ,
        a.end_neigh    AS "end_neighborhood"   ,
        a.total_trips  AS "total_trips" ,
        ROUND(a.avg_minutes ,1) AS "avg_trip_duration_minutes" ,
        ROUND(a.avg_temp_f  ,1) AS "avg_temp_f" ,
        ROUND(a.avg_wind_mps,1) AS "avg_wind_speed_mps" ,
        ROUND(a.avg_prcp_cm ,1) AS "avg_precip_cm" ,
        b.busiest_month        AS "busiest_month"
FROM   agg_totals a
JOIN LATERAL (
        SELECT busiest_month
        FROM   busiest
        WHERE  rn = 1
          AND  start_neigh = a.start_neigh
          AND  end_neigh   = a.end_neigh
      ) b
    ON TRUE
ORDER BY a.total_trips DESC NULLS LAST;
```
[Try to run SQL in self-refine]
2025-05-07 05:24:35 - Thread-24 (execute) - INFO - itercount: 3
2025-05-07 05:24:35 - Thread-24 (execute) - INFO - [Self-refine]
Input sql:
/*  Bike-trip flows (2014) between NYC neighbourhoods
    enriched with same-day Central-Park weather observations          */

WITH trips_2014 AS (  -----------------------------------------------------------
    /* Convert micro-second epoch to DATE and keep co-ordinates        */
    SELECT  "start_station_latitude"   AS start_lat ,
            "start_station_longitude"  AS start_lon ,
            "end_station_latitude"     AS end_lat ,
            "end_station_longitude"    AS end_lon ,
            "tripduration"             AS trip_duration ,          -- unquoted
            CAST( TO_TIMESTAMP( "starttime" / 1e6 ) AS DATE) AS trip_date ,
            EXTRACT ( MONTH FROM TO_TIMESTAMP( "starttime" / 1e6 ) )
                                                  AS trip_month
    FROM NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_TRIPS
    WHERE "starttime"
          BETWEEN 1388534400000000        -- 2014-01-01
              AND 1420070399000000        -- 2014-12-31
), start_zip AS (      ----------------------------------------------------------
    /* ZIP for START coordinates via point-in-polygon                   */
    SELECT  t.* ,
            gz."zip_code"::TEXT AS start_zip
    FROM    trips_2014 t
    JOIN NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ZIP_CODES gz
      ON ST_CONTAINS (
           TO_GEOGRAPHY(gz."zip_code_geom"),
           TO_GEOGRAPHY( CONCAT('POINT(', t.start_lon, ' ', t.start_lat, ')') )
         )
), both_zips AS (      ----------------------------------------------------------
    /* ZIP for END coordinates                                          */
    SELECT  s.* ,
            gz."zip_code"::TEXT AS end_zip
    FROM    start_zip s
    JOIN NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ZIP_CODES gz
      ON ST_CONTAINS (
           TO_GEOGRAPHY(gz."zip_code_geom"),
           TO_GEOGRAPHY( CONCAT('POINT(', s.end_lon, ' ', s.end_lat, ')') )
         )
), with_neighb AS (    ----------------------------------------------------------
    /* Attach neighbourhood names from Cyclistic lookup                 */
    SELECT  b.* ,
            czs."neighborhood" AS start_neigh ,
            cze."neighborhood" AS end_neigh
    FROM    both_zips b
    LEFT JOIN NEW_YORK_CITIBIKE_1.CYCLISTIC.ZIP_CODES czs
           ON czs."zip" = TRY_TO_NUMBER(b.start_zip)
    LEFT JOIN NEW_YORK_CITIBIKE_1.CYCLISTIC.ZIP_CODES cze
           ON cze."zip" = TRY_TO_NUMBER(b.end_zip)
    WHERE   czs."neighborhood" IS NOT NULL
      AND   cze."neighborhood" IS NOT NULL
), weather_2014 AS (   ----------------------------------------------------------
    /* Central-Park daily weather – WBAN 94728                          */
    SELECT TO_DATE( CONCAT("year",'-',"mo",'-',"da") ) AS wx_date ,
           "temp"                         AS temp_f ,
           TRY_TO_NUMBER("wdsp")          AS wind_knots ,
           "prcp"                         AS prcp_in
    FROM NEW_YORK_CITIBIKE_1.NOAA_GSOD.GSOD2014
    WHERE "wban" = '94728'
), trips_wx AS (       ----------------------------------------------------------
    /* Join trip with same-day weather                                  */
    SELECT  n.start_neigh ,
            n.end_neigh ,
            n.trip_duration ,
            n.trip_month ,
            w.temp_f ,
            w.wind_knots ,
            w.prcp_in
    FROM   with_neighb n
    JOIN   weather_2014 w
      ON   w.wx_date = n.trip_date
), agg_totals AS (     ----------------------------------------------------------
    SELECT  start_neigh ,
            end_neigh ,
            COUNT(*)                       AS total_trips ,
            AVG(trip_duration)/60.0        AS avg_minutes ,
            AVG(temp_f)                    AS avg_temp_f ,
            AVG(wind_knots*0.514444)       AS avg_wind_mps ,
            AVG(prcp_in*2.54)              AS avg_prcp_cm
    FROM   trips_wx
    GROUP BY 1,2
), month_counts AS (   ----------------------------------------------------------
    SELECT  start_neigh ,
            end_neigh ,
            trip_month ,
            COUNT(*) AS month_trips
    FROM   trips_wx
    GROUP BY 1,2,3
), busiest AS (        ----------------------------------------------------------
    SELECT  start_neigh ,
            end_neigh ,
            trip_month AS busiest_month ,
            ROW_NUMBER() OVER (PARTITION BY start_neigh, end_neigh
                               ORDER BY month_trips DESC, trip_month) AS rn
    FROM   month_counts
)
SELECT  a.start_neigh  AS "start_neighborhood" ,
        a.end_neigh    AS "end_neighborhood"   ,
        a.total_trips  AS "total_trips" ,
        ROUND(a.avg_minutes ,1) AS "avg_trip_duration_minutes" ,
        ROUND(a.avg_temp_f  ,1) AS "avg_temp_f" ,
        ROUND(a.avg_wind_mps,1) AS "avg_wind_speed_mps" ,
        ROUND(a.avg_prcp_cm ,1) AS "avg_precip_cm" ,
        b.busiest_month        AS "busiest_month"
FROM   agg_totals a
JOIN LATERAL (
        SELECT busiest_month
        FROM   busiest
        WHERE  rn = 1
          AND  start_neigh = a.start_neigh
          AND  end_neigh   = a.end_neigh
      ) b
    ON TRUE
ORDER BY a.total_trips DESC NULLS LAST;
The error information is:
{'status': 'error', 'error_msg': '##ERROR##000603 (XX000): SQL execution internal error:\nProcessing aborted due to error 300002:834137686; incident 9199786.'}
Please correct it and output only 1 complete SQL query.
[Self-refine]
2025-05-07 05:26:48 - Thread-24 (execute) - INFO - [Try to run SQL in self-refine]
```sql
/* Bike-trip flows (2014) between NYC neighbourhoods with
   same-day Central-Park weather                                               */

WITH trips_2014 AS ( -----------------------------------------------------------
    SELECT  "start_station_latitude"   AS start_lat ,
            "start_station_longitude"  AS start_lon ,
            "end_station_latitude"     AS end_lat ,
            "end_station_longitude"    AS end_lon ,
            "tripduration"             AS trip_duration ,
            CAST( TO_TIMESTAMP("starttime"/1e6) AS DATE)               AS trip_date ,
            EXTRACT(MONTH FROM TO_TIMESTAMP("starttime"/1e6))          AS trip_month
    FROM    NEW_YORK_CITIBIKE_1.NEW_YORK_CITIBIKE.CITIBIKE_TRIPS
    WHERE   "starttime" BETWEEN 1388534400000000 AND 1420070399000000
), start_zip AS ( --------------------------------------------------------------
    SELECT  t.* ,
            gz."zip_code"::TEXT AS start_zip
    FROM    trips_2014 t
    JOIN    NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ZIP_CODES gz
           ON ST_CONTAINS(
                TO_GEOGRAPHY(gz."zip_code_geom"),
                TO_GEOGRAPHY( CONCAT('POINT(', t.start_lon,' ',t.start_lat,')') )
              )
), both_zips AS ( --------------------------------------------------------------
    SELECT  s.* ,
            gz."zip_code"::TEXT AS end_zip
    FROM    start_zip s
    JOIN    NEW_YORK_CITIBIKE_1.GEO_US_BOUNDARIES.ZIP_CODES gz
           ON ST_CONTAINS(
                TO_GEOGRAPHY(gz."zip_code_geom"),
                TO_GEOGRAPHY( CONCAT('POINT(', s.end_lon,' ',s.end_lat,')') )
              )
), with_neighb AS ( ------------------------------------------------------------
    SELECT  b.* ,
            czs."neighborhood" AS start_neigh ,
            cze."neighborhood" AS end_neigh
    FROM    both_zips b
    LEFT JOIN NEW_YORK_CITIBIKE_1.CYCLISTIC.ZIP_CODES czs
           ON czs."zip" = TRY_TO_NUMBER(b.start_zip)
    LEFT JOIN NEW_YORK_CITIBIKE_1.CYCLISTIC.ZIP_CODES cze
           ON cze."zip" = TRY_TO_NUMBER(b.end_zip)
    WHERE   czs."neighborhood" IS NOT NULL
      AND   cze."neighborhood" IS NOT NULL
), weather_2014 AS ( -----------------------------------------------------------
    SELECT  TO_DATE(CONCAT("year",'-',"mo",'-',"da"))  AS wx_date ,
            "temp"                      AS temp_f ,
            TRY_TO_NUMBER("wdsp")       AS wind_knots ,
            "prcp"                      AS prcp_in
    FROM    NEW_YORK_CITIBIKE_1.NOAA_GSOD.GSOD2014
    WHERE   "wban" = '94728'            -- Central Park
), trips_wx AS ( ---------------------------------------------------------------
    SELECT  n.start_neigh ,
            n.end_neigh ,
            n.trip_duration ,
            n.trip_month ,
            w.temp_f ,
            w.wind_knots ,
            w.prcp_in
    FROM    with_neighb n
    JOIN    weather_2014 w
           ON w.wx_date = n.trip_date
), agg_totals AS ( -------------------------------------------------------------
    SELECT  start_neigh ,
            end_neigh ,
            COUNT(*)                         AS total_trips ,
            AVG(trip_duration)/60.0          AS avg_minutes ,
            AVG(temp_f)                      AS avg_temp_f ,
            AVG(wind_knots * 0.514444)       AS avg_wind_mps ,
            AVG(prcp_in * 2.54)              AS avg_prcp_cm
    FROM    trips_wx
    GROUP BY 1,2
), month_counts AS ( -----------------------------------------------------------
    SELECT  start_neigh ,
            end_neigh ,
            trip_month ,
            COUNT(*) AS month_trips
    FROM    trips_wx
    GROUP BY 1,2,3
), best_month AS ( -------------------------------------------------------------
    SELECT DISTINCT
           start_neigh ,
           end_neigh ,
           FIRST_VALUE(trip_month)
                OVER (PARTITION BY start_neigh,end_neigh
                      ORDER BY month_trips DESC, trip_month) AS busiest_month
    FROM   month_counts
)
SELECT  a.start_neigh  AS "start_neighborhood" ,
        a.end_neigh    AS "end_neighborhood"   ,
        a.total_trips  AS "total_trips" ,
        ROUND(a.avg_minutes  ,1) AS "avg_trip_duration_minutes" ,
        ROUND(a.avg_temp_f   ,1) AS "avg_temp_f" ,
        ROUND(a.avg_wind_mps ,1) AS "avg_wind_speed_mps" ,
        ROUND(a.avg_prcp_cm  ,1) AS "avg_precip_cm" ,
        b.busiest_month      AS "busiest_month"
FROM   agg_totals a
JOIN   best_month b
  ON   b.start_neigh = a.start_neigh
 AND   b.end_neigh   = a.end_neigh
ORDER BY a.total_trips DESC NULLS LAST;
```
[Try to run SQL in self-refine]
2025-05-07 05:28:17 - Thread-24 (execute) - INFO - Total iteration counts: 3
