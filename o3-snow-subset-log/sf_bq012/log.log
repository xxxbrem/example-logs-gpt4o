2025-05-07 02:24:13 - Thread-291 (execute) - INFO - [Exploration]
```sql
--Description: 1) Look at the different kinds of traces that exist together with
--   their execution status and low-level call type.
SELECT DISTINCT 
       "trace_type",
       "call_type",
       "status"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
LIMIT  20;
```

```sql
--Description: 2) Inspect successful value-carrying ETH transfers that are “normal”
--   EVM calls (exclude delegatecall / callcode / staticcall) so we see
--   the raw ETH flows that will be used for net-balance computation.
SELECT 
       "from_address",
       "to_address",
       "value",
       "block_number",
       "block_hash"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
WHERE  "trace_type" = 'call'
  AND  "status"     = 1
  AND  ( "call_type" IS NULL 
         OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
  AND  "value"      > 0
LIMIT  20;
```

```sql
--Description: 3) Explore miner / uncle rewards that appear as traces with 
--   trace_type = 'reward'. These amounts also contribute to the miner balance.
SELECT 
       "to_address"        AS "miner_address",
       "reward_type",
       "value",
       "block_number",
       "block_hash"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
WHERE  "trace_type" = 'reward'
LIMIT  20;
```

```sql
--Description: 4) Examine a few transactions together with the on-chain gas
--   actually used.  This is needed later to debit the sender for gas fees.
SELECT 
       "hash"                     AS "tx_hash",
       "from_address",
       "to_address",
       "gas_price",
       "gas",                     -- gas supplied
       "receipt_gas_used",        -- gas actually consumed
       "block_number",
       "block_hash"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
WHERE  "receipt_gas_used" IS NOT NULL
LIMIT  20;
```

```sql
--Description: 5) Show a sample of blocks together with their miner and the total
--   gas used in the block (will be multiplied by gas_price per tx later to
--   obtain miner gas-fee income).
SELECT 
       "hash"        AS "block_hash",
       "number"      AS "block_number",
       "miner",
       "gas_used",
       "transaction_count"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."BLOCKS"
LIMIT  20;
```

```sql
--Description: 6) Aggregate the total gas fees of each block (Σ gas_used * gas_price)
--   by joining blocks and transactions ‑- quick sample of first 20 blocks found.
SELECT 
       b."number"                              AS "block_number",
       b."miner",
       SUM(t."gas_price" * t."receipt_gas_used") AS "total_gas_fees_wei"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."BLOCKS"        b
JOIN   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"  t
       ON b."hash" = t."block_hash"
GROUP  BY b."number", b."miner"
LIMIT  20;
```

```sql
--Description: 7) Compute, for a sample of addresses, total incoming ETH and
--   outgoing ETH based solely on successful call-traces (value transfers).
SELECT 
       addr,
       SUM(CASE WHEN addr = "to_address"   THEN "value" ELSE 0 END) AS "incoming_wei",
       SUM(CASE WHEN addr = "from_address" THEN "value" ELSE 0 END) AS "outgoing_wei"
FROM  (
        SELECT "to_address"   AS addr, "value", "from_address" FROM ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
        WHERE "trace_type" = 'call'
          AND "status"     = 1
          AND ( "call_type" IS NULL OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
          AND "value"      > 0
        UNION ALL
        SELECT "from_address" AS addr, "value", "from_address" FROM ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
        WHERE "trace_type" = 'call'
          AND "status"     = 1
          AND ( "call_type" IS NULL OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
          AND "value"      > 0
      ) AS x
GROUP BY addr
LIMIT 20;
```

```sql
--Description: 8) Show gas fee that each sender actually paid in a sample of blocks
--   so we can later subtract it from net balance.
SELECT 
       "from_address"                           AS "sender",
       SUM("gas_price" * "receipt_gas_used")    AS "gas_fee_wei"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
WHERE  "receipt_gas_used" IS NOT NULL
GROUP  BY "from_address"
LIMIT  20;
```

```sql
--Description: 9) Bring together miner block rewards (static 2 ETH/3 ETH etc. already
--   present in reward traces) and dynamic gas-fee rewards credited to miners.
SELECT
       r."to_address"                                              AS "miner",
       SUM(r."value")                                              AS "trace_rewards_wei",
       SUM(t."gas_price" * t."receipt_gas_used")                   AS "gas_fee_rewards_wei"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"        r
JOIN   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"  t
       ON r."block_hash" = t."block_hash"
JOIN   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."BLOCKS"        b
       ON b."hash" = r."block_hash"   AND b."miner" = r."to_address"
WHERE  r."trace_type" = 'reward'
GROUP  BY r."to_address"
LIMIT  20;
```

```sql
--Description: 10) Identify the current top-10 addresses by net balance (incoming – 
--   outgoing + miner rewards – sender gas fees) and show their balance converted
--   to quadrillions (10^15 Wei = 1,000 ETH) just to verify magnitudes.  The final
--   AVG() will later be applied to these 10 rows.
WITH eth_flows AS (
      SELECT "to_address"   AS addr, SUM("value") AS in_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
      WHERE  "trace_type" = 'call'
        AND  "status"     = 1
        AND  ( "call_type" IS NULL OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
      GROUP  BY "to_address"
), eth_out AS (
      SELECT "from_address" AS addr, SUM("value") AS out_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
      WHERE  "trace_type" = 'call'
        AND  "status"     = 1
        AND  ( "call_type" IS NULL OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
      GROUP  BY "from_address"
), gas_fees AS (
      SELECT "from_address" AS addr, SUM("gas_price"*"receipt_gas_used") AS gas_paid_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
      WHERE  "receipt_gas_used" IS NOT NULL
      GROUP  BY "from_address"
), miner_rewards AS (
      SELECT r."to_address" AS addr, 
             SUM(r."value") + SUM(t."gas_price"*"receipt_gas_used") AS miner_reward_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"       r
      JOIN   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS" t
             ON r."block_hash" = t."block_hash"
      WHERE  r."trace_type" = 'reward'
      GROUP  BY r."to_address"
)
SELECT addr,
       (COALESCE(in_wei,0) 
      - COALESCE(out_wei,0) 
      + COALESCE(miner_reward_wei,0) 
      - COALESCE(gas_paid_wei,0)) / 1e15 AS balance_quadrillions
FROM   (
        SELECT addr FROM eth_flows
        UNION
        SELECT addr FROM eth_out
        UNION
        SELECT addr FROM gas_fees
        UNION
        SELECT addr FROM miner_rewards
       ) AS u
LEFT  JOIN eth_flows      USING(addr)
LEFT  JOIN eth_out        USING(addr)
LEFT  JOIN gas_fees       USING(addr)
LEFT  JOIN miner_rewards  USING(addr)
WHERE  addr IS NOT NULL        -- exclude null-address
ORDER  BY balance_quadrillions DESC
LIMIT  10;
```
[Exploration]
2025-05-07 02:24:13 - Thread-291 (execute) - INFO - [Try to execute]
--Description: 1) Look at the different kinds of traces that exist together with
--   their execution status and low-level call type.
SELECT DISTINCT 
       "trace_type",
       "call_type",
       "status"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
LIMIT  20;
[Try to execute]
2025-05-07 02:24:14 - Thread-291 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 1) Look at the different kinds of traces that exist together with
--   their execution status and low-level call type.
SELECT DISTINCT 
       "trace_type",
       "call_type",
       "status"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
LIMIT  20;
Results:
trace_type,call_type,status
call,call,1
call,call,0
call,delegatecall,1
suicide,,1
reward,,1
call,delegatecall,0
create,,1
suicide,,0
create,,0
call,staticcall,1
call,callcode,1

[Successfully executed]
2025-05-07 02:24:14 - Thread-291 (execute) - INFO - [Try to execute]
--Description: 2) Inspect successful value-carrying ETH transfers that are “normal”
--   EVM calls (exclude delegatecall / callcode / staticcall) so we see
--   the raw ETH flows that will be used for net-balance computation.
SELECT 
       "from_address",
       "to_address",
       "value",
       "block_number",
       "block_hash"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
WHERE  "trace_type" = 'call'
  AND  "status"     = 1
  AND  ( "call_type" IS NULL 
         OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
  AND  "value"      > 0
LIMIT  20;
[Try to execute]
2025-05-07 02:24:15 - Thread-291 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 2) Inspect successful value-carrying ETH transfers that are “normal”
--   EVM calls (exclude delegatecall / callcode / staticcall) so we see
--   the raw ETH flows that will be used for net-balance computation.
SELECT 
       "from_address",
       "to_address",
       "value",
       "block_number",
       "block_hash"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
WHERE  "trace_type" = 'call'
  AND  "status"     = 1
  AND  ( "call_type" IS NULL 
         OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
  AND  "value"      > 0
LIMIT  20;
Results:
from_address,to_address,value,block_number,block_hash
0xdcc8b63f091de055f526f18cc2f947ad588c4291,0x6d3714d6571be317887d8c7d6e7187930d354975,401118000000000000.000000000,3874204,0xce8fd30565b5bc9447ceab18f745b58e86dc17215878c81a17f37b97f59db858
0x4a83a232132798d7691b89404fe1a7bf061a4297,0x49a6665e2c05b7b39cd8f57d6fbdd80964b0b9c7,7183900000000000000.000000000,3874460,0xc2e2d3fbca3767ede3a3be842d1e74e5bbd54c44114ea6f8ad606204ada6a549
0x6ea2fd5121ee249a53405801db9873bf5367df24,0x760eacab3e65afabd

[Successfully executed]
2025-05-07 02:24:15 - Thread-291 (execute) - INFO - [Try to execute]
--Description: 3) Explore miner / uncle rewards that appear as traces with 
--   trace_type = 'reward'. These amounts also contribute to the miner balance.
SELECT 
       "to_address"        AS "miner_address",
       "reward_type",
       "value",
       "block_number",
       "block_hash"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
WHERE  "trace_type" = 'reward'
LIMIT  20;
[Try to execute]
2025-05-07 02:24:15 - Thread-291 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 3) Explore miner / uncle rewards that appear as traces with 
--   trace_type = 'reward'. These amounts also contribute to the miner balance.
SELECT 
       "to_address"        AS "miner_address",
       "reward_type",
       "value",
       "block_number",
       "block_hash"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
WHERE  "trace_type" = 'reward'
LIMIT  20;
Results:
miner_address,reward_type,value,block_number,block_hash
0xe8baa417ae28c39f723ddf9fc4e4f3b28f5d9f6b,block,5000000000000000000.000000000,3877888,0xa01c1b44e106839466c2f33a0ce2746e6f7a49630be9902e7159191269aa229a
0xea674fdde714fd979de3edf0f56aa9716b898ec8,block,5156250000000000000.000000000,3874050,0xd0efc4f86014f6dfe5e8b7ea0b3ab5907da211d5fdc1a851fdc1996f761d2276
0x2a65aca4d5fc5b5c859090a6c34d164135398226,block,3000000000000000000.000000000,5986306,0x1ecd0110b4f0b13f46e6af99a301cc82d5725da59190

[Successfully executed]
2025-05-07 02:24:15 - Thread-291 (execute) - INFO - [Try to execute]
--Description: 4) Examine a few transactions together with the on-chain gas
--   actually used.  This is needed later to debit the sender for gas fees.
SELECT 
       "hash"                     AS "tx_hash",
       "from_address",
       "to_address",
       "gas_price",
       "gas",                     -- gas supplied
       "receipt_gas_used",        -- gas actually consumed
       "block_number",
       "block_hash"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
WHERE  "receipt_gas_used" IS NOT NULL
LIMIT  20;
[Try to execute]
2025-05-07 02:24:15 - Thread-291 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 4) Examine a few transactions together with the on-chain gas
--   actually used.  This is needed later to debit the sender for gas fees.
SELECT 
       "hash"                     AS "tx_hash",
       "from_address",
       "to_address",
       "gas_price",
       "gas",                     -- gas supplied
       "receipt_gas_used",        -- gas actually consumed
       "block_number",
       "block_hash"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
WHERE  "receipt_gas_used" IS NOT NULL
LIMIT  20;
Results:
tx_hash,from_address,to_address,gas_price,gas,receipt_gas_used,block_number,block_hash
0xc499d6ba82f798ceaf165cec2e8af8a58871f2e728105afdf27c3babdaf803e2,0x74a6c4823d81cbd6393e5957ccec128799a3f0c2,0xbff68676836ee64f26845a21a9dcbdd89512bf29,3000000000,7340032,7340032,7138313,0xbe6a5fe4c3ec8f4e8eb9bf4b0791115f4a10d904c769e41d6ec2af241a478319
0x6ce738ca184115b6ff34555d3ea2b4d8a84aca028d7802a7729e37e54b58b455,0x731e6cc591b055001ccb9758008f636819df6152,0xf2a6b57c7f5a6835f1b84bffedd821e7f392fead,200

[Successfully executed]
2025-05-07 02:24:15 - Thread-291 (execute) - INFO - [Try to execute]
--Description: 5) Show a sample of blocks together with their miner and the total
--   gas used in the block (will be multiplied by gas_price per tx later to
--   obtain miner gas-fee income).
SELECT 
       "hash"        AS "block_hash",
       "number"      AS "block_number",
       "miner",
       "gas_used",
       "transaction_count"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."BLOCKS"
LIMIT  20;
[Try to execute]
2025-05-07 02:24:16 - Thread-291 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 5) Show a sample of blocks together with their miner and the total
--   gas used in the block (will be multiplied by gas_price per tx later to
--   obtain miner gas-fee income).
SELECT 
       "hash"        AS "block_hash",
       "number"      AS "block_number",
       "miner",
       "gas_used",
       "transaction_count"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."BLOCKS"
LIMIT  20;
Results:
block_hash,block_number,miner,gas_used,transaction_count
0xcf5326c1ac7a9bc76f90ec9b7188903c49977e2dbcb749012592f1f9166aba62,5875076,0xf3b9d2c81f2b24b0fa0acaaa865b7d9ced5fc2fb,7970437,103
0xda9d8facba4f7aad75f0175d15e368e58f4eaa0428a17edbf46720dd4bec6a61,5873225,0xcc16e3c00dbbe76603fa833ec20a48f786dfe610,7951584,100
0x75f019b26fcf856492810a8bfa3555dba398a128031c52b23c2e2156a729066f,5875115,0xf3b9d2c81f2b24b0fa0acaaa865b7d9ced5fc2fb,7974034,128
0x8a54e2cb5c29df25e56fcd3572e807b848d86d70df38bbe

[Successfully executed]
2025-05-07 02:24:16 - Thread-291 (execute) - INFO - [Try to execute]
--Description: 6) Aggregate the total gas fees of each block (Σ gas_used * gas_price)
--   by joining blocks and transactions ‑- quick sample of first 20 blocks found.
SELECT 
       b."number"                              AS "block_number",
       b."miner",
       SUM(t."gas_price" * t."receipt_gas_used") AS "total_gas_fees_wei"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."BLOCKS"        b
JOIN   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"  t
       ON b."hash" = t."block_hash"
GROUP  BY b."number", b."miner"
LIMIT  20;
[Try to execute]
2025-05-07 02:24:23 - Thread-291 (execute) - INFO - [Error occurred]
No data found for the specified query.

[Error occurred]
2025-05-07 02:26:57 - Thread-291 (execute) - INFO - [Corrected SQL]
```sql
--Description: To be certain we retrieve rows, begin with TRANSACTIONS (which always
--             has entries), keep only those that have a non-null actual gas used,
--             then join to BLOCKS on the block hash.  Aggregate the paid gas fees
--             (gas_price × receipt_gas_used) per block so we can later credit this
--             amount to the miner.  Display 20 example blocks to verify data exists.
SELECT
       t."block_hash",
       b."number"                               AS "block_number",
       b."miner",
       SUM(t."gas_price" * t."receipt_gas_used") AS "total_gas_fees_wei"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"  t
JOIN   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."BLOCKS"        b
         ON b."hash" = t."block_hash"
WHERE  t."receipt_gas_used" IS NOT NULL
GROUP  BY t."block_hash", b."number", b."miner"
LIMIT  20;
```
[Corrected SQL]
2025-05-07 02:26:57 - Thread-291 (execute) - INFO - [Results for corrected sql]
No data found for the specified query.

[Results for corrected sql]
2025-05-07 02:29:39 - Thread-291 (execute) - INFO - [Corrected SQL]
```sql
--Description:  Join BLOCKS and TRANSACTIONS on their shared numeric column 
--              "block_number" (always populated) to avoid the previous empty
--              result produced when joining on block hashes.  For each block
--              sum up the product of "gas_price" and "receipt_gas_used" across
--              all its transactions to compute the miner’s total gas-fee
--              earnings.  Return 20 sample blocks with the miner address and
--              the calculated gas-fee total to confirm data is present.
SELECT
       b."number"                                AS "block_number",
       b."miner",
       SUM(t."gas_price" * t."receipt_gas_used") AS "total_gas_fees_wei"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"  t
JOIN   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."BLOCKS"        b
           ON b."number" = t."block_number"
WHERE  t."receipt_gas_used" IS NOT NULL
GROUP  BY b."number", b."miner"
LIMIT  20;
```
[Corrected SQL]
2025-05-07 02:31:18 - Thread-291 (execute) - INFO - [Results for corrected sql]
No data found for the specified query.

[Results for corrected sql]
2025-05-07 02:34:08 - Thread-291 (execute) - INFO - [Corrected SQL]
```sql
--Description:  The previous “no data” arose because the hash join missed rows in the tiny sample that the execution engine surfaces.  
--              Both BLOCKS and TRANSACTIONS always share a populated numeric column, "block_number", so join on that instead.  
--              For each block we aggregate Σ(gas_price × receipt_gas_used) across all its transactions to obtain the total gas-fee revenue  
--              earned by the miner.  A LEFT JOIN ensures we still return rows even if a given block isn’t present in the small BLOCKS slice  
--              the engine shows.  Display 20 sample blocks with their miner and the computed fee total to verify that data now appears.
SELECT
       t."block_number",
       b."miner",
       SUM(t."gas_price" * t."receipt_gas_used") AS "total_gas_fees_wei"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"  t
LEFT   JOIN ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."BLOCKS"   b
           ON b."number" = t."block_number"
WHERE  t."receipt_gas_used" IS NOT NULL
GROUP  BY t."block_number", b."miner"
LIMIT  20;
```
[Corrected SQL]
2025-05-07 02:34:26 - Thread-291 (execute) - INFO - [Results for corrected sql]
block_number,miner,total_gas_fees_wei
7139768,,40359441974449722
7141304,,19075644581250000
8126649,,17761306616830000
8127417,,10764893890840568
8127673,,16461052753400000
8130745,,48637300000000000
8132025,,31262465000000000
4275129,,35686430000219398
4276409,,47240856963562374
4277177,,92152078055499078
7137721,,50633618659175504
7138489,,20221523000000000
7139001,,25531032786822384
7139513,,32951852802867968
7137209,,14076920833875524

[Results for corrected sql]
2025-05-07 02:37:24 - Thread-291 (execute) - INFO - [Corrected other sqls]
```sql
--Description: 7) Compute, for a sample of addresses, total incoming and outgoing
--              ether based solely on successful value-carrying “normal” call-traces
--              (exclude delegatecall / callcode / staticcall).  No JOIN fixes
--              were needed here.
SELECT 
       addr,
       SUM(CASE WHEN addr = "to_address"   THEN "value" ELSE 0 END) AS "incoming_wei",
       SUM(CASE WHEN addr = "from_address" THEN "value" ELSE 0 END) AS "outgoing_wei"
FROM  (
        SELECT "to_address"   AS addr, "value", "from_address"
        FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
        WHERE  "trace_type" = 'call'
          AND  "status"     = 1
          AND  ( "call_type" IS NULL
                 OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
          AND  "value"      > 0
        UNION ALL
        SELECT "from_address" AS addr, "value", "from_address"
        FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
        WHERE  "trace_type" = 'call'
          AND  "status"     = 1
          AND  ( "call_type" IS NULL
                 OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
          AND  "value"      > 0
      ) AS x
GROUP BY addr
LIMIT 20;
```

```sql
--Description: 8) Show the total gas fee each sender actually paid
--              (Σ gas_price × receipt_gas_used).  No JOIN involved, so
--              original query stands unchanged.
SELECT 
       "from_address"                             AS "sender",
       SUM("gas_price" * "receipt_gas_used")      AS "gas_fee_wei"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
WHERE  "receipt_gas_used" IS NOT NULL
GROUP  BY "from_address"
LIMIT  20;
```

```sql
--Description: 9) Bring together static miner rewards (reward traces) and dynamic
--              gas-fee rewards.  FIX: join TRACES ↔ TRANSACTIONS and TRACES ↔ BLOCKS
--              on the always-present numeric "block_number" instead of hashes.
SELECT
       r."to_address"                                              AS "miner",
       SUM(r."value")                                              AS "trace_rewards_wei",
       SUM(t."gas_price" * t."receipt_gas_used")                   AS "gas_fee_rewards_wei"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"        r
JOIN   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"  t
         ON r."block_number" = t."block_number"
JOIN   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."BLOCKS"        b
         ON b."number" = r."block_number" 
        AND b."miner"  = r."to_address"
WHERE  r."trace_type" = 'reward'
GROUP  BY r."to_address"
LIMIT  20;
```

```sql
--Description: 10) Identify the current top-10 addresses by net balance
--              (incoming − outgoing + miner rewards − sender gas fees).
--              FIX: in miner_rewards CTE, join TRACES ↔ TRANSACTIONS on
--              "block_number" instead of "block_hash".
WITH eth_flows AS (
      SELECT "to_address"   AS addr, SUM("value") AS in_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
      WHERE  "trace_type" = 'call'
        AND  "status"     = 1
        AND  ( "call_type" IS NULL 
               OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
      GROUP  BY "to_address"
), eth_out AS (
      SELECT "from_address" AS addr, SUM("value") AS out_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
      WHERE  "trace_type" = 'call'
        AND  "status"     = 1
        AND  ( "call_type" IS NULL 
               OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
      GROUP  BY "from_address"
), gas_fees AS (
      SELECT "from_address" AS addr,
             SUM("gas_price" * "receipt_gas_used") AS gas_paid_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
      WHERE  "receipt_gas_used" IS NOT NULL
      GROUP  BY "from_address"
), miner_rewards AS (
      SELECT r."to_address" AS addr,
             SUM(r."value") + SUM(t."gas_price" * t."receipt_gas_used") AS miner_reward_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"       r
      JOIN   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS" t
               ON r."block_number" = t."block_number"
      WHERE  r."trace_type" = 'reward'
      GROUP  BY r."to_address"
)
SELECT addr,
       (COALESCE(in_wei,0)
      - COALESCE(out_wei,0)
      + COALESCE(miner_reward_wei,0)
      - COALESCE(gas_paid_wei,0)) / 1e15 AS balance_quadrillions
FROM   (
        SELECT addr FROM eth_flows
        UNION
        SELECT addr FROM eth_out
        UNION
        SELECT addr FROM gas_fees
        UNION
        SELECT addr FROM miner_rewards
       ) AS u
LEFT  JOIN eth_flows      USING(addr)
LEFT  JOIN eth_out        USING(addr)
LEFT  JOIN gas_fees       USING(addr)
LEFT  JOIN miner_rewards  USING(addr)
WHERE  addr IS NOT NULL                 -- exclude null address
ORDER  BY balance_quadrillions DESC
LIMIT  10;
```

[Corrected other sqls]
2025-05-07 02:37:24 - Thread-291 (execute) - INFO - [Successfully corrected]
Successfully corrected. SQL:
--Description:  The previous “no data” arose because the hash join missed rows in the tiny sample that the execution engine surfaces.  
--              Both BLOCKS and TRANSACTIONS always share a populated numeric column, "block_number", so join on that instead.  
--              For each block we aggregate Σ(gas_price × receipt_gas_used) across all its transactions to obtain the total gas-fee revenue  
--              earned by the miner.  A LEFT JOIN ensures we still return rows even if a given block isn’t present in the small BLOCKS slice  
--              the engine shows.  Display 20 sample blocks with their miner and the computed fee total to verify that data now appears.
SELECT
       t."block_number",
       b."miner",
       SUM(t."gas_price" * t."receipt_gas_used") AS "total_gas_fees_wei"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"  t
LEFT   JOIN ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."BLOCKS"   b
           ON b."number" = t."block_number"
WHERE  t."receipt_gas_used" IS NOT NULL
GROUP  BY t."block_number", b."miner"
LIMIT  20;
Results:
block_number,miner,total_gas_fees_wei
7139768,,40359441974449722
7141304,,19075644581250000
8126649,,17761306616830000
8127417,,10764893890840568
8127673,,16461052753400000
8130745,,48637300000000000
8132025,,31262465000000000
4275129,,35686430000219398
4276409,,47240856963562374
4277177,,92152078055499078
7137721,,50633618659175504
7138489,,20221523000000000
7139001,,25531032786822384
7139513,,32951852802867968
7137209,,14076920833875524

[Successfully corrected]
2025-05-07 02:37:24 - Thread-291 (execute) - INFO - [Try to execute]
--Description: 7) Compute, for a sample of addresses, total incoming and outgoing
--              ether based solely on successful value-carrying “normal” call-traces
--              (exclude delegatecall / callcode / staticcall).  No JOIN fixes
--              were needed here.
SELECT 
       addr,
       SUM(CASE WHEN addr = "to_address"   THEN "value" ELSE 0 END) AS "incoming_wei",
       SUM(CASE WHEN addr = "from_address" THEN "value" ELSE 0 END) AS "outgoing_wei"
FROM  (
        SELECT "to_address"   AS addr, "value", "from_address"
        FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
        WHERE  "trace_type" = 'call'
          AND  "status"     = 1
          AND  ( "call_type" IS NULL
                 OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
          AND  "value"      > 0
        UNION ALL
        SELECT "from_address" AS addr, "value", "from_address"
        FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
        WHERE  "trace_type" = 'call'
          AND  "status"     = 1
          AND  ( "call_type" IS NULL
                 OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
          AND  "value"      > 0
      ) AS x
GROUP BY addr
LIMIT 20
[Try to execute]
2025-05-07 02:37:24 - Thread-291 (execute) - INFO - [Error occurred]
{'status': 'error', 'error_msg': '##ERROR##000904 (42000): SQL compilation error: error line 3 at position 28\ninvalid identifier \'"to_address"\''}
[Error occurred]
2025-05-07 02:40:55 - Thread-291 (execute) - INFO - [Corrected SQL]
```sql
--Description: Resolve the previous “invalid identifier” error by making sure the
--              outer query references only the three columns that exist in the
--              derived table (addr, value, direction).  The derived table is
--              produced via UNION ALL of incoming and outgoing CALL traces
--              (successful, value > 0, and not delegatecall / callcode /
--              staticcall).  The outer query then sums “value” separately for
--              the ‘in’ and ‘out’ directions to obtain per-address totals.
SELECT
       addr,
       SUM(CASE WHEN direction = 'in'  THEN "value" ELSE 0 END) AS "incoming_wei",
       SUM(CASE WHEN direction = 'out' THEN "value" ELSE 0 END) AS "outgoing_wei"
FROM (
        /* incoming transfers */
        SELECT
               "to_address"   AS addr,
               "value",
               'in'           AS direction
        FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
        WHERE  "trace_type" = 'call'
          AND  "status"     = 1
          AND  ( "call_type" IS NULL
                 OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
          AND  "value"      > 0

        UNION ALL

        /* outgoing transfers */
        SELECT
               "from_address" AS addr,
               "value",
               'out'          AS direction
        FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
        WHERE  "trace_type" = 'call'
          AND  "status"     = 1
          AND  ( "call_type" IS NULL
                 OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
          AND  "value"      > 0
     ) AS x
GROUP BY addr
LIMIT 20;
```
[Corrected SQL]
2025-05-07 02:40:56 - Thread-291 (execute) - INFO - [Results for corrected sql]
ADDR,incoming_wei,outgoing_wei
0x463815773ecf24c1cb2abadc75404c2147ba3a6e,21991786018790556.000000000,0E-9
0xa4c3d3eae61a0627d0f7c0e73a3ab3b7b793e222,318614373891369722.000000000,163346888984714278.000000000
0x575dfbaa37554c15b31ffdecc7ff517ee17e9a33,208271050690000000000.000000000,210064849020000000000.000000000
0x2c06b21648517fdde52c54cc8e28771d9339c5c1,3266200000000000.000000000,0E-9
0xe309d92cecb4068abefd2b204d2713c489aa4c73,586605190000000000.000000000,584074030000000000.000000000

[Results for corrected sql]
2025-05-07 02:42:50 - Thread-291 (execute) - INFO - [Corrected other sqls]
```sql
--Description: 8) Calculate the total gas fee each sender actually paid
--              (Σ gas_price × receipt_gas_used) for a quick sample of 20
--              addresses.  No joins are involved, so the original statement
--              remains valid.
SELECT
       "from_address"                              AS "sender",
       SUM("gas_price" * "receipt_gas_used")       AS "gas_fee_wei"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
WHERE  "receipt_gas_used" IS NOT NULL
GROUP  BY "from_address"
LIMIT  20;
```

```sql
--Description: 9) Combine static miner rewards (reward traces) with the dynamic
--              gas-fee rewards they earn.  Join TRACES ↔ TRANSACTIONS and
--              TRACES ↔ BLOCKS on the reliable numeric column "block_number"
--              instead of hashes to avoid empty results.
SELECT
       r."to_address"                                              AS "miner",
       SUM(r."value")                                              AS "trace_rewards_wei",
       SUM(t."gas_price" * t."receipt_gas_used")                   AS "gas_fee_rewards_wei"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"        r
JOIN   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"  t
         ON r."block_number" = t."block_number"
JOIN   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."BLOCKS"        b
         ON b."number" = r."block_number"
        AND b."miner"  = r."to_address"
WHERE  r."trace_type" = 'reward'
GROUP  BY r."to_address"
LIMIT  20;
```

```sql
--Description: 10) Produce the net balance for the top-10 addresses:
--              incoming − outgoing + miner rewards − gas fees, expressed in
--              quadrillions of Wei (10^15).  The miner_rewards CTE now joins
--              TRACES ↔ TRANSACTIONS on "block_number" to ensure matches.
WITH eth_flows AS (
      SELECT "to_address"   AS addr, SUM("value") AS in_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
      WHERE  "trace_type" = 'call'
        AND  "status"     = 1
        AND  ( "call_type" IS NULL
               OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
      GROUP  BY "to_address"
), eth_out AS (
      SELECT "from_address" AS addr, SUM("value") AS out_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
      WHERE  "trace_type" = 'call'
        AND  "status"     = 1
        AND  ( "call_type" IS NULL
               OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
      GROUP  BY "from_address"
), gas_fees AS (
      SELECT "from_address" AS addr,
             SUM("gas_price" * "receipt_gas_used") AS gas_paid_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
      WHERE  "receipt_gas_used" IS NOT NULL
      GROUP  BY "from_address"
), miner_rewards AS (
      SELECT r."to_address" AS addr,
             SUM(r."value") + SUM(t."gas_price" * t."receipt_gas_used") AS miner_reward_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"       r
      JOIN   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS" t
             ON r."block_number" = t."block_number"
      WHERE  r."trace_type" = 'reward'
      GROUP  BY r."to_address"
)
SELECT addr,
       (COALESCE(in_wei,0)
      - COALESCE(out_wei,0)
      + COALESCE(miner_reward_wei,0)
      - COALESCE(gas_paid_wei,0)) / 1e15 AS balance_quadrillions
FROM (
        SELECT addr FROM eth_flows
        UNION
        SELECT addr FROM eth_out
        UNION
        SELECT addr FROM gas_fees
        UNION
        SELECT addr FROM miner_rewards
     ) AS u
LEFT  JOIN eth_flows      USING(addr)
LEFT  JOIN eth_out        USING(addr)
LEFT  JOIN gas_fees       USING(addr)
LEFT  JOIN miner_rewards  USING(addr)
WHERE addr IS NOT NULL               -- exclude null (0x) address
ORDER BY balance_quadrillions DESC
LIMIT 10;
```
[Corrected other sqls]
2025-05-07 02:42:50 - Thread-291 (execute) - INFO - [Successfully corrected]
Successfully corrected. SQL:
--Description: Resolve the previous “invalid identifier” error by making sure the
--              outer query references only the three columns that exist in the
--              derived table (addr, value, direction).  The derived table is
--              produced via UNION ALL of incoming and outgoing CALL traces
--              (successful, value > 0, and not delegatecall / callcode /
--              staticcall).  The outer query then sums “value” separately for
--              the ‘in’ and ‘out’ directions to obtain per-address totals.
SELECT
       addr,
       SUM(CASE WHEN direction = 'in'  THEN "value" ELSE 0 END) AS "incoming_wei",
       SUM(CASE WHEN direction = 'out' THEN "value" ELSE 0 END) AS "outgoing_wei"
FROM (
        /* incoming transfers */
        SELECT
               "to_address"   AS addr,
               "value",
               'in'           AS direction
        FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
        WHERE  "trace_type" = 'call'
          AND  "status"     = 1
          AND  ( "call_type" IS NULL
                 OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
          AND  "value"      > 0

        UNION ALL

        /* outgoing transfers */
        SELECT
               "from_address" AS addr,
               "value",
               'out'          AS direction
        FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
        WHERE  "trace_type" = 'call'
          AND  "status"     = 1
          AND  ( "call_type" IS NULL
                 OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
          AND  "value"      > 0
     ) AS x
GROUP BY addr
LIMIT 20;
Results:
ADDR,incoming_wei,outgoing_wei
0x463815773ecf24c1cb2abadc75404c2147ba3a6e,21991786018790556.000000000,0E-9
0xa4c3d3eae61a0627d0f7c0e73a3ab3b7b793e222,318614373891369722.000000000,163346888984714278.000000000
0x575dfbaa37554c15b31ffdecc7ff517ee17e9a33,208271050690000000000.000000000,210064849020000000000.000000000
0x2c06b21648517fdde52c54cc8e28771d9339c5c1,3266200000000000.000000000,0E-9
0xe309d92cecb4068abefd2b204d2713c489aa4c73,586605190000000000.000000000,584074030000000000.000000000

[Successfully corrected]
2025-05-07 02:42:50 - Thread-291 (execute) - INFO - [Try to execute]
--Description: 8) Calculate the total gas fee each sender actually paid
--              (Σ gas_price × receipt_gas_used) for a quick sample of 20
--              addresses.  No joins are involved, so the original statement
--              remains valid.
SELECT
       "from_address"                              AS "sender",
       SUM("gas_price" * "receipt_gas_used")       AS "gas_fee_wei"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
WHERE  "receipt_gas_used" IS NOT NULL
GROUP  BY "from_address"
LIMIT  20
[Try to execute]
2025-05-07 02:42:50 - Thread-291 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 8) Calculate the total gas fee each sender actually paid
--              (Σ gas_price × receipt_gas_used) for a quick sample of 20
--              addresses.  No joins are involved, so the original statement
--              remains valid.
SELECT
       "from_address"                              AS "sender",
       SUM("gas_price" * "receipt_gas_used")       AS "gas_fee_wei"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
WHERE  "receipt_gas_used" IS NOT NULL
GROUP  BY "from_address"
LIMIT  20
Results:
sender,gas_fee_wei
0x4fbda70fe3047a2764aeb621cb7857ca6cc385c5,471618000000000
0x564286362092d8e7936f0549571a803b203aaced,2170031520000000000
0xfdb16996831753d5331ff813c29a93c76834a0ad,100160634000000000
0x49497a4d914ae91d34ce80030fe620687bf333fd,656714905800000000
0x8e5539996a21fa05f7e553cb43d25f373ba6a1fa,668493800000000
0xcf96de628d40adcf84c501206547b5c5a74c49e8,1135080000000000
0xab5622d7da96c571c6abe08e4b85e462eb666e4f,615432024241036492
0xfaa001ae098f5f705b9a5b562950a4dd745c6554,584

[Successfully executed]
2025-05-07 02:42:50 - Thread-291 (execute) - INFO - [Try to execute]
--Description: 9) Combine static miner rewards (reward traces) with the dynamic
--              gas-fee rewards they earn.  Join TRACES ↔ TRANSACTIONS and
--              TRACES ↔ BLOCKS on the reliable numeric column "block_number"
--              instead of hashes to avoid empty results.
SELECT
       r."to_address"                                              AS "miner",
       SUM(r."value")                                              AS "trace_rewards_wei",
       SUM(t."gas_price" * t."receipt_gas_used")                   AS "gas_fee_rewards_wei"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"        r
JOIN   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"  t
         ON r."block_number" = t."block_number"
JOIN   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."BLOCKS"        b
         ON b."number" = r."block_number"
        AND b."miner"  = r."to_address"
WHERE  r."trace_type" = 'reward'
GROUP  BY r."to_address"
LIMIT  20
[Try to execute]
2025-05-07 02:42:51 - Thread-291 (execute) - INFO - [Error occurred]
No data found for the specified query.

[Error occurred]
2025-05-07 02:46:13 - Thread-291 (execute) - INFO - [Corrected SQL]
```sql
--Description:  Create a small per-block gas-fee table from TRANSACTIONS
--              (sum of gas_price × receipt_gas_used), then LEFT JOIN it to
--              “block” reward traces.  This avoids the earlier empty result
--              because it does not require an additional BLOCKS join; every
--              reward trace is preserved even if its block has no transactions
--              in the limited preview slice.  Finally aggregate both the static
--              block reward (r.value) and the dynamic gas-fee reward for each
--              miner address, returning 20 sample rows so we can confirm data
--              now appears.
WITH gas_fees AS (       -- dynamic gas-fee rewards per block
     SELECT
            "block_number",
            SUM("gas_price" * "receipt_gas_used") AS "gas_fee_rewards_wei"
     FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
     WHERE  "receipt_gas_used" IS NOT NULL
     GROUP  BY "block_number"
)
SELECT
       r."to_address"                          AS "miner",
       SUM(r."value")                          AS "trace_rewards_wei",      -- static reward
       SUM(COALESCE(gf."gas_fee_rewards_wei",0)) AS "gas_fee_rewards_wei"   -- dynamic fee
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"  r
LEFT   JOIN gas_fees gf
         ON gf."block_number" = r."block_number"
WHERE  r."trace_type"  = 'reward'
  AND  r."reward_type" = 'block'
GROUP  BY r."to_address"
LIMIT 20;
```
[Corrected SQL]
2025-05-07 02:46:14 - Thread-291 (execute) - INFO - [Results for corrected sql]
miner,trace_rewards_wei,gas_fee_rewards_wei
0x625a083bee9e6f0fd756e79880b26b955826702c,33000000000000000000.000000000,0
0x2a5994b501e6a560e727b6c2de5d856396aadd38,18281250000000000000.000000000,0
0x72a5345c4c17b6989706d171139551d7258d3f01,6000000000000000000.000000000,0
0x2a65aca4d5fc5b5c859090a6c34d164135398226,1352187500000000000000.000000000,0
0xa42af2c70d316684e57aefcc6e393fecb1c7e84e,260468750000000000000.000000000,0
0x8722141eeebeceb88c2891ce30925396f4be2d69,5000000000000000000.00000

[Results for corrected sql]
2025-05-07 02:47:40 - Thread-291 (execute) - INFO - [Corrected other sqls]
```sql
--Description: 10) Compute net balance for the top-10 addresses
--              (incoming − outgoing + miner rewards − gas fees) in quadrillions
--              of Wei.  The miner_rewards CTE now mirrors the corrected logic
--              from query 9: it builds a per-block gas-fee table, joins it to
--              “block” reward traces, and aggregates the sum of static rewards
--              plus dynamic gas-fee rewards per miner.  All joins use the
--              numeric column "block_number" to guarantee matches.
WITH eth_flows AS (                           -- incoming ether
      SELECT "to_address"   AS addr,
             SUM("value")   AS in_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
      WHERE  "trace_type" = 'call'
        AND  "status"     = 1
        AND  ( "call_type" IS NULL
               OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
      GROUP  BY "to_address"
), eth_out AS (                               -- outgoing ether
      SELECT "from_address" AS addr,
             SUM("value")   AS out_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
      WHERE  "trace_type" = 'call'
        AND  "status"     = 1
        AND  ( "call_type" IS NULL
               OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
      GROUP  BY "from_address"
), gas_fees AS (                              -- gas fees paid by senders
      SELECT "from_address" AS addr,
             SUM("gas_price" * "receipt_gas_used") AS gas_paid_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
      WHERE  "receipt_gas_used" IS NOT NULL
      GROUP  BY "from_address"
), per_block_fees AS (                        -- dynamic fees earned per block
      SELECT "block_number",
             SUM("gas_price" * "receipt_gas_used") AS gas_fee_rewards_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
      WHERE  "receipt_gas_used" IS NOT NULL
      GROUP  BY "block_number"
), miner_rewards AS (                         -- static + dynamic miner rewards
      SELECT r."to_address" AS addr,
             SUM(r."value") +                 -- static block reward
             SUM(COALESCE(gf.gas_fee_rewards_wei,0)) AS miner_reward_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES" r
      LEFT   JOIN per_block_fees gf
               ON gf."block_number" = r."block_number"
      WHERE  r."trace_type"  = 'reward'
        AND  r."reward_type" = 'block'
      GROUP  BY r."to_address"
)
SELECT addr,
       ROUND( (COALESCE(in_wei,0)
             - COALESCE(out_wei,0)
             + COALESCE(miner_reward_wei,0)
             - COALESCE(gas_paid_wei,0)) / 1e15 , 2) AS balance_quadrillions
FROM (
        SELECT addr FROM eth_flows
        UNION
        SELECT addr FROM eth_out
        UNION
        SELECT addr FROM gas_fees
        UNION
        SELECT addr FROM miner_rewards
     ) AS u
LEFT  JOIN eth_flows     USING(addr)
LEFT  JOIN eth_out       USING(addr)
LEFT  JOIN gas_fees      USING(addr)
LEFT  JOIN miner_rewards USING(addr)
WHERE addr IS NOT NULL                -- exclude null (0x) address
ORDER BY balance_quadrillions DESC
LIMIT 10;
```
[Corrected other sqls]
2025-05-07 02:47:40 - Thread-291 (execute) - INFO - [Successfully corrected]
Successfully corrected. SQL:
--Description:  Create a small per-block gas-fee table from TRANSACTIONS
--              (sum of gas_price × receipt_gas_used), then LEFT JOIN it to
--              “block” reward traces.  This avoids the earlier empty result
--              because it does not require an additional BLOCKS join; every
--              reward trace is preserved even if its block has no transactions
--              in the limited preview slice.  Finally aggregate both the static
--              block reward (r.value) and the dynamic gas-fee reward for each
--              miner address, returning 20 sample rows so we can confirm data
--              now appears.
WITH gas_fees AS (       -- dynamic gas-fee rewards per block
     SELECT
            "block_number",
            SUM("gas_price" * "receipt_gas_used") AS "gas_fee_rewards_wei"
     FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
     WHERE  "receipt_gas_used" IS NOT NULL
     GROUP  BY "block_number"
)
SELECT
       r."to_address"                          AS "miner",
       SUM(r."value")                          AS "trace_rewards_wei",      -- static reward
       SUM(COALESCE(gf."gas_fee_rewards_wei",0)) AS "gas_fee_rewards_wei"   -- dynamic fee
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"  r
LEFT   JOIN gas_fees gf
         ON gf."block_number" = r."block_number"
WHERE  r."trace_type"  = 'reward'
  AND  r."reward_type" = 'block'
GROUP  BY r."to_address"
LIMIT 20;
Results:
miner,trace_rewards_wei,gas_fee_rewards_wei
0x625a083bee9e6f0fd756e79880b26b955826702c,33000000000000000000.000000000,0
0x2a5994b501e6a560e727b6c2de5d856396aadd38,18281250000000000000.000000000,0
0x72a5345c4c17b6989706d171139551d7258d3f01,6000000000000000000.000000000,0
0x2a65aca4d5fc5b5c859090a6c34d164135398226,1352187500000000000000.000000000,0
0xa42af2c70d316684e57aefcc6e393fecb1c7e84e,260468750000000000000.000000000,0
0x8722141eeebeceb88c2891ce30925396f4be2d69,5000000000000000000.00000

[Successfully corrected]
2025-05-07 02:47:40 - Thread-291 (execute) - INFO - [Try to execute]
--Description: 10) Compute net balance for the top-10 addresses
--              (incoming − outgoing + miner rewards − gas fees) in quadrillions
--              of Wei.  The miner_rewards CTE now mirrors the corrected logic
--              from query 9: it builds a per-block gas-fee table, joins it to
--              “block” reward traces, and aggregates the sum of static rewards
--              plus dynamic gas-fee rewards per miner.  All joins use the
--              numeric column "block_number" to guarantee matches.
WITH eth_flows AS (                           -- incoming ether
      SELECT "to_address"   AS addr,
             SUM("value")   AS in_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
      WHERE  "trace_type" = 'call'
        AND  "status"     = 1
        AND  ( "call_type" IS NULL
               OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
      GROUP  BY "to_address"
), eth_out AS (                               -- outgoing ether
      SELECT "from_address" AS addr,
             SUM("value")   AS out_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
      WHERE  "trace_type" = 'call'
        AND  "status"     = 1
        AND  ( "call_type" IS NULL
               OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
      GROUP  BY "from_address"
), gas_fees AS (                              -- gas fees paid by senders
      SELECT "from_address" AS addr,
             SUM("gas_price" * "receipt_gas_used") AS gas_paid_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
      WHERE  "receipt_gas_used" IS NOT NULL
      GROUP  BY "from_address"
), per_block_fees AS (                        -- dynamic fees earned per block
      SELECT "block_number",
             SUM("gas_price" * "receipt_gas_used") AS gas_fee_rewards_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
      WHERE  "receipt_gas_used" IS NOT NULL
      GROUP  BY "block_number"
), miner_rewards AS (                         -- static + dynamic miner rewards
      SELECT r."to_address" AS addr,
             SUM(r."value") +                 -- static block reward
             SUM(COALESCE(gf.gas_fee_rewards_wei,0)) AS miner_reward_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES" r
      LEFT   JOIN per_block_fees gf
               ON gf."block_number" = r."block_number"
      WHERE  r."trace_type"  = 'reward'
        AND  r."reward_type" = 'block'
      GROUP  BY r."to_address"
)
SELECT addr,
       ROUND( (COALESCE(in_wei,0)
             - COALESCE(out_wei,0)
             + COALESCE(miner_reward_wei,0)
             - COALESCE(gas_paid_wei,0)) / 1e15 , 2) AS balance_quadrillions
FROM (
        SELECT addr FROM eth_flows
        UNION
        SELECT addr FROM eth_out
        UNION
        SELECT addr FROM gas_fees
        UNION
        SELECT addr FROM miner_rewards
     ) AS u
LEFT  JOIN eth_flows     USING(addr)
LEFT  JOIN eth_out       USING(addr)
LEFT  JOIN gas_fees      USING(addr)
LEFT  JOIN miner_rewards USING(addr)
WHERE addr IS NOT NULL                -- exclude null (0x) address
ORDER BY balance_quadrillions DESC
LIMIT 10
[Try to execute]
2025-05-07 02:48:16 - Thread-291 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 10) Compute net balance for the top-10 addresses
--              (incoming − outgoing + miner rewards − gas fees) in quadrillions
--              of Wei.  The miner_rewards CTE now mirrors the corrected logic
--              from query 9: it builds a per-block gas-fee table, joins it to
--              “block” reward traces, and aggregates the sum of static rewards
--              plus dynamic gas-fee rewards per miner.  All joins use the
--              numeric column "block_number" to guarantee matches.
WITH eth_flows AS (                           -- incoming ether
      SELECT "to_address"   AS addr,
             SUM("value")   AS in_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
      WHERE  "trace_type" = 'call'
        AND  "status"     = 1
        AND  ( "call_type" IS NULL
               OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
      GROUP  BY "to_address"
), eth_out AS (                               -- outgoing ether
      SELECT "from_address" AS addr,
             SUM("value")   AS out_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
      WHERE  "trace_type" = 'call'
        AND  "status"     = 1
        AND  ( "call_type" IS NULL
               OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
      GROUP  BY "from_address"
), gas_fees AS (                              -- gas fees paid by senders
      SELECT "from_address" AS addr,
             SUM("gas_price" * "receipt_gas_used") AS gas_paid_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
      WHERE  "receipt_gas_used" IS NOT NULL
      GROUP  BY "from_address"
), per_block_fees AS (                        -- dynamic fees earned per block
      SELECT "block_number",
             SUM("gas_price" * "receipt_gas_used") AS gas_fee_rewards_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
      WHERE  "receipt_gas_used" IS NOT NULL
      GROUP  BY "block_number"
), miner_rewards AS (                         -- static + dynamic miner rewards
      SELECT r."to_address" AS addr,
             SUM(r."value") +                 -- static block reward
             SUM(COALESCE(gf.gas_fee_rewards_wei,0)) AS miner_reward_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES" r
      LEFT   JOIN per_block_fees gf
               ON gf."block_number" = r."block_number"
      WHERE  r."trace_type"  = 'reward'
        AND  r."reward_type" = 'block'
      GROUP  BY r."to_address"
)
SELECT addr,
       ROUND( (COALESCE(in_wei,0)
             - COALESCE(out_wei,0)
             + COALESCE(miner_reward_wei,0)
             - COALESCE(gas_paid_wei,0)) / 1e15 , 2) AS balance_quadrillions
FROM (
        SELECT addr FROM eth_flows
        UNION
        SELECT addr FROM eth_out
        UNION
        SELECT addr FROM gas_fees
        UNION
        SELECT addr FROM miner_rewards
     ) AS u
LEFT  JOIN eth_flows     USING(addr)
LEFT  JOIN eth_out       USING(addr)
LEFT  JOIN gas_fees      USING(addr)
LEFT  JOIN miner_rewards USING(addr)
WHERE addr IS NOT NULL                -- exclude null (0x) address
ORDER BY balance_quadrillions DESC
LIMIT 10
Results:
ADDR,BALANCE_QUADRILLIONS
0x7727e5113d1d161373623e5f49fd568b4f543a9e,38117709.84
0x209c4784ab1e8183cf58ca33cb740efbf3fc18ef,35474695.19
0xcff5a79f5d2dfc8b10569c6bb105194cb87a10be,28747477.55
0x22b84d5ffea8b801c0422afe752377a64aa738c2,27030229.49
0x93025150b13eb744d51d927549a30630912e8fe8,26963808.90
0xeb31acbf35b4e48ae39c8c62bb5674cf9d7c4fbe,26199819.73
0xcafb10ee663f465f9d10588ac44ed20ed608c11e,21588017.15
0x742d35cc6634c0532925a3b844bc454e4438f44e,20165135.19

[Successfully executed]
2025-05-07 02:48:16 - Thread-291 (execute) - INFO - itercount: 0
2025-05-07 02:48:16 - Thread-291 (execute) - INFO - [Self-refine]
Table full name: ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN.BLOCKS
Column name: hash Type: TEXT Description: Hash of this block
Column name: nonce Type: TEXT Description: Difficulty solution specified in block header
Column name: extra_data Type: TEXT
Column name: receipts_root Type: TEXT
Column name: state_root Type: TEXT
Column name: miner Type: TEXT
Column name: transaction_count Type: NUMBER Description: Number of transactions included in this block
Column name: total_difficulty Type: NUMBER
Column name: parent_hash Type: TEXT
Column name: sha3_uncles Type: TEXT
Column name: size Type: NUMBER Description: The size of block data in bytes
Column name: gas_limit Type: NUMBER
Column name: number Type: NUMBER Description: The number of the block
Column name: gas_used Type: NUMBER
Column name: timestamp Type: NUMBER Description: Block creation timestamp specified in block header
Column name: logs_bloom Type: TEXT
Column name: difficulty Type: NUMBER
Column name: transactions_root Type: TEXT
Sample rows:
[{'timestamp': 1530279523000000, 'number': 5875076, 'hash': '0xcf5326c1ac7a9bc76f90ec9b7188903c49977e2dbcb749012592f1f9166aba62', 'parent_hash': '0x7d1daeed5bb2bc25bfa2adea08f12ac34ced255613b1f81e05901c365f4b1d32', 'nonce': '0x0ac4077c0b9326e4', 'sha3_uncles': '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347', 'logs_bloom': '0xe1023fc1247c5120022420803014c60a40047141181001080308213a8603830ca58000048800412411bc0820a1080228e603441200288082002040085124b24041806319220004898189080e9018a105300000009bec690000017161938000000a00810a1221840090b3011810042c00003b038ba50910080001809c642ac18000e50c20002e2000100a0448840782d600e000b14a40000050142811840600093680181c60c3ac8108400b0511cdd03053512c203a10be004e2901830045448814000322818d602005e101004227a2e0108069a501412d6c22041022c40cec06321021402460141000404250a8008020022905010c0000401629422400d12380', 'transactions_root': '0xafdfaf62b3b4aad38015a63dfa560803f554b75c2da01cdc853df210fac80395', 'state_root': '0x63e85963a40f0281405dd65d57e6f27bcf694f4b3260ec0f142a71b254528bb9', 'receipts_root': '0x89e806edc9d9332e8efe2b537da16aa71ee28192162c540c576eec488001e793', 'miner': '0xf3b9d2c81f2b24b0fa0acaaa865b7d9ced5fc2fb', 'difficulty': '3270516286141262.000000000', 'total_difficulty': '5053204936794953558848.000000000', 'size': 27519, 'extra_data': '0x', 'gas_limit': 7980567, 'gas_used': 7970437, 'transaction_count': 103}, {'timestamp': 1530255101000000, 'number': 5873509, 'hash': '0x8a54e2cb5c29df25e56fcd3572e807b848d86d70df38bbe28025b753de96e670', 'parent_hash': '0x503476bdb0b566a78ddeb8bc2a5b570924a36f2fdc7167d0fa36dbeaeb4520f7', 'nonce': '0x4cf643080595df19', 'sha3_uncles': '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347', 'logs_bloom': '0x61508102651a02b804006503a729020842a4116c498000088ac185b210ac5220880285192004390c63916846534c04224aa61002f8027091529c001684642220854a3065b829250d4845500842113460514a1248082101080000484211b1a004705000250603162c08a7082050012da40a010a103fc4e00041450b19904806000828181700822034a0043ca08182a000005721d22282290544f02a8138c561080a1090014802b82892500841730a8400490029220a20000e08cd828102042129501a0082019624021b4042830294492a4202741700080804098e01054000ba2a0e56610181100e0070c24284d0d1801431484b30062b44468080a82910091336', 'transactions_root': '0x91c784ebb01146ce44ce0b5292e6bb762169cce5ec483bcaddb678fca786f82e', 'state_root': '0x0d7523fdd73d9608823fb634c6bf75435820c55dc38ff73f08dfe216b5d18a7a', 'receipts_root': '0xdbc0aa3a3cbe84319b3c2663c2b3873d7b44b3f96324173b46b172bf65f86ac1', 'miner': '0xf3b9d2c81f2b24b0fa0acaaa865b7d9ced5fc2fb', 'difficulty': '3454068746553944.000000000', 'total_difficulty': '5047936796321690252596.000000000', 'size': 21481, 'extra_data': '0x', 'gas_limit': 7988374, 'gas_used': 7971359, 'transaction_count': 130}, {'timestamp': 1530284989000000, 'number': 5875464, 'hash': '0xd3b49c7843e7fbf0385cb50c7acf2a21c9b13565d60481d734b31d6d6e1aeba7', 'parent_hash': '0x28fb8593dc30635a47f0f7698558855d05ebe2dc9aff29e943cb01d1549bb713', 'nonce': '0x409af6c003358bf8', 'sha3_uncles': '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347', 'logs_bloom': '0x060600500800042400090a8d440e80220444b94840180c208b0014202c6940ea702048890100020010100040f509060843084204880882891c018010002cc01801810254400020190254100880181020520000c0900c0008411200244a449040012000210290088024c0402c21004a1040090204088601418020203114280080500500484e2100800846b4208087e000000000c000000244d0411a88003730324b0708020040149100c051405814800813e5a82010408000080010581200310242300042442120048500431400804410184a2c25401a082026811684021064012414210080051202805040808088a0045400404184c0020481a0580800310001', 'transactions_root': '0x0b12836ecd34644920b7dc669ff630395e26b0aa531d5bb8d6f174472d3d3472', 'state_root': '0x72cb415743ccff1f70e677dfa77fb8f584dd65483f70b3de1645e47b767a9074', 'receipts_root': '0x96041ccf32c4d3fddfd7d05956650bfcb1cbecf05a81d29b4b4ee80ef109367b', 'miner': '0xf3b9d2c81f2b24b0fa0acaaa865b7d9ced5fc2fb', 'difficulty': '3325022667093859.000000000', 'total_difficulty': '5054479629228330254249.000000000', 'size': 20905, 'extra_data': '0x', 'gas_limit': 7988374, 'gas_used': 7973434, 'transaction_count': 121}, {'timestamp': 1530262087000000, 'number': 5873962, 'hash': '0xaae9246a7857dd66b69ae8e8c3a822ee1038d4d1614bcf556a236ee7241c0b82', 'parent_hash': '0x6e21652b2190451aa04876434d003f4a2c1116f0861031667285c28e3278d50d', 'nonce': '0xaac2e7980e46e709', 'sha3_uncles': '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347', 'logs_bloom': '0x812809508e7402152151eea028300140c68ea10ad0d01a184ee120a21aea566c0b8d88121b0411f4440148002254212100a00800008055020c494c0481aa2671090024c9023d909151504b296380a28514cd506c816b10280781785841ac6485012a20117f715c10196b61534cb148137503a047c41ef2840c12065930016302220a99e0116400642626484e99ceb442205308b1f70008549154040da34b78c0de6cd83ec0c088a2f07108919004c59190221082218b801181a046300a030a70441e702b54043682a2f90b4002a3484258012125a1182d412b70a1110c21e982209b01e110008004189a00e40401a0674399a2e7780400c808529944124c7391', 'transactions_root': '0x3c3c878ade658d507bb9d2361908eb3ddbc6ec04ff9987de2880ae315d317396', 'state_root': '0x27fa7e70f875f2544347679b3dd8c22a2d3c991997ffe864e929103078f20f42', 'receipts_root': '0x41458f034b936fd1b40081c6766a9a1dae9a299782d7c173973395e7e1b16280', 'miner': '0xf3b9d2c81f2b24b0fa0acaaa865b7d9ced5fc2fb', 'difficulty': '3420156028672864.000000000', 'total_difficulty': '5049485027491369116267.000000000', 'size': 27249, 'extra_data': '0x', 'gas_limit': 7995996, 'gas_used': 7982549, 'transaction_count': 172}, {'timestamp': 1530247008000000, 'number': 5872961, 'hash': '0x5106fb58c998c3515e4058ad88d8e1bc3a4b91bfedef06239990ad0b71e4c260', 'parent_hash': '0xa3a3e82d74681e2c14131900e387899ae02146e050ec4ce56690411fee24a33c', 'nonce': '0x52f9c740094d447f', 'sha3_uncles': '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347', 'logs_bloom': '0x050029c44d6e9875614004a50850021010d48961421002acc2d10f20332d03ba1180485008042008a188f20ab072546e762042011a9408c0100d83182126600c0182746dee2cb5144ac4a50b78487e914700c665592447911817e14182a500640c20802e0f256c4694b0458b481a6fc034e110b82cfc5d6205280d127706504428e10c42007a8704a2e9342ca60203010c1c238954884a10600aad08040971020b08e0c6d5eb000a235a0a036f9951a3113c0482180184815a4320ce88608434041416b609e41c8021dbc8c1f887891d868a70cd451a0acd081a350a4160e8502a18f15481203018820400cf089860e40638002322e082c080589f4543c1d8d4', 'transactions_root': '0xe32bde9c0eeba7b29f651d59825d56ef703978d455ff1947010ee4cfb8d2ad46', 'state_root': '0xbdd43a5e54dcdab904a145cdaa1c4f28924b73e78813600536d86a03803f84b2', 'receipts_root': '0xfbc1267408d47186beeed5f0bce2f0a8d76f1f1275e08fed34f56f7112bfe980', 'miner': '0xf3b9d2c81f2b24b0fa0acaaa865b7d9ced5fc2fb', 'difficulty': '3446008445291348.000000000', 'total_difficulty': '5046054676752051433297.000000000', 'size': 25477, 'extra_data': '0x', 'gas_limit': 7968875, 'gas_used': 7957920, 'transaction_count': 83}]

--------------------------------------------------
Table full name: ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN.TOKENS
Column name: name Type: TEXT Description: The name of the ERC20 token
Column name: address Type: TEXT Description: The address of the ERC20 token
Column name: decimals Type: TEXT Description: The number of decimals the token uses. Use safe_cast for casting to NUMERIC or FLOAT64
Column name: block_hash Type: TEXT Description: Hash of the block where this token was created
Column name: block_number Type: NUMBER Description: Block number where this token was created
Column name: block_timestamp Type: NUMBER Description: Timestamp of the block where this token was created
Column name: symbol Type: TEXT Description: The symbol of the ERC20 token
Column name: total_supply Type: TEXT Description: The total token supply. Use safe_cast for casting to NUMERIC or FLOAT64
Sample rows:
[{'address': '0xd6905b68f1f41821a501ef508f5af8ce5cfe2e10', 'symbol': 'BGP15', 'name': 'BGP15', 'decimals': None, 'total_supply': None, 'block_timestamp': 1523684894000000, 'block_number': 5437409, 'block_hash': '0xa82213066e99a6ee94114b0019d1366464f56705a9a3991bb4cfec629d24e18c'}, {'address': '0x18adafe1e755da4824e4f977179e8b0f06981688', 'symbol': 'VTNFT', 'name': 'Volca Test NFT', 'decimals': None, 'total_supply': None, 'block_timestamp': 1542200869000000, 'block_number': 6703061, 'block_hash': '0xaf6519a1e8c940e8c13190f828d8c5c3b30a42009a8d5078a2a9fcffef39514e'}, {'address': '0x33d022f09f87c3267749215392c14be700fd2ebc', 'symbol': 'ART', 'name': 'CryptoArt by kaypohleb', 'decimals': None, 'total_supply': None, 'block_timestamp': 1551151963000000, 'block_number': 7268583, 'block_hash': '0xf3fc280967f64d187d69a215895c5d7e981002921fd5294d048203c35d00e078'}, {'address': '0xba9e4bff12b5770c56b9400c9f4f9a752a5be4d7', 'symbol': None, 'name': None, 'decimals': None, 'total_supply': None, 'block_timestamp': 1489638439000000, 'block_number': 3360133, 'block_hash': '0x15417bbb2609542f0e0396bf5ab66ce9fc99f0ef254e60216d542d2dc3ba1b55'}, {'address': '0x68662fae9167d1e3eb6fd0ed7c416826faa20b0c', 'symbol': None, 'name': None, 'decimals': None, 'total_supply': None, 'block_timestamp': 1487370853000000, 'block_number': 3202541, 'block_hash': '0x3147176865d0c08400f5b52433d56fa6c6d7c6fb45826a094a2a5abba3f9008b'}]

--------------------------------------------------
Table full name: ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN.TRACES
Column name: value Type: NUMBER Description: Value transferred in Wei
Column name: to_address Type: TEXT Description: Address of the receiver if trace_type is call, address of new contract or null if trace_type is create, beneficiary address if trace_type is suicide, miner address if trace_type is reward, shareholder address if trace_type is genesis, WithdrawDAO address if trace_type is daofork
Column name: trace_type Type: TEXT Description: One of call, create, suicide, reward, genesis, daofork
Column name: subtraces Type: NUMBER Description: Number of subtraces
Column name: output Type: TEXT Description: The output of the message call, bytecode of contract when trace_type is create
Column name: block_hash Type: TEXT Description: Hash of the block where this trace was in
Column name: error Type: TEXT Description: Error if message call failed. This field doesn't contain top-level trace errors.
Column name: transaction_hash Type: TEXT Description: Transaction hash where this trace was in
Column name: block_timestamp Type: NUMBER Description: Timestamp of the block where this trace was in
Column name: call_type Type: TEXT Description: One of call, callcode, delegatecall, staticcall
Column name: trace_address Type: TEXT Description: Comma separated list of trace address in call tree
Column name: gas Type: NUMBER Description: Gas provided with the message call
Column name: reward_type Type: TEXT Description: One of block, uncle
Column name: input Type: TEXT Description: The data sent along with the message call
Column name: gas_used Type: NUMBER Description: Gas used by the message call
Column name: from_address Type: TEXT Description: Address of the sender, null when trace_type is genesis or reward
Column name: transaction_index Type: NUMBER Description: Integer of the transactions index position in the block
Column name: block_number Type: NUMBER Description: Block number where this trace was in
Column name: status Type: NUMBER Description: Either 1 (success) or 0 (failure, due to any operation that can cause the call itself or any top-level call to revert)
Sample rows:
[{'transaction_hash': '0x357e9067fc3a5a5dce38b968d01a4d8c67cc47ebb8001975c4998065748f4d83', 'transaction_index': 10, 'from_address': '0xb09f8a62c6681b0c739dfde7221bfe8f2da3f128', 'to_address': '0x7f6e12cee775346d6ba776510e25d703279886f3', 'value': '0E-9', 'input': '0x', 'output': None, 'trace_type': 'call', 'call_type': 'delegatecall', 'reward_type': None, 'gas': 0, 'gas_used': None, 'subtraces': 0, 'trace_address': '3718', 'error': 'Out of gas', 'status': 0, 'block_timestamp': 1475369605000000, 'block_number': 2363392, 'block_hash': '0x99fbd59028ed558a6cfb1061788165736dbca4e3c70babbef68acace880caa34'}, {'transaction_hash': '0x357e9067fc3a5a5dce38b968d01a4d8c67cc47ebb8001975c4998065748f4d83', 'transaction_index': 10, 'from_address': '0xb09f8a62c6681b0c739dfde7221bfe8f2da3f128', 'to_address': '0x7f6e12cee775346d6ba776510e25d703279886f3', 'value': '0E-9', 'input': '0x', 'output': None, 'trace_type': 'call', 'call_type': 'delegatecall', 'reward_type': None, 'gas': 0, 'gas_used': None, 'subtraces': 0, 'trace_address': '1409', 'error': 'Out of gas', 'status': 0, 'block_timestamp': 1475369605000000, 'block_number': 2363392, 'block_hash': '0x99fbd59028ed558a6cfb1061788165736dbca4e3c70babbef68acace880caa34'}, {'transaction_hash': '0xc3d4888217040e9b1ed5f1870f5189ec6d7567d882700d81a2758595575c4d07', 'transaction_index': 12, 'from_address': '0xb09f8a62c6681b0c739dfde7221bfe8f2da3f128', 'to_address': '0x7f6e12cee775346d6ba776510e25d703279886f3', 'value': '0E-9', 'input': '0x', 'output': None, 'trace_type': 'call', 'call_type': 'delegatecall', 'reward_type': None, 'gas': 0, 'gas_used': None, 'subtraces': 0, 'trace_address': '2574', 'error': 'Out of gas', 'status': 0, 'block_timestamp': 1475369605000000, 'block_number': 2363392, 'block_hash': '0x99fbd59028ed558a6cfb1061788165736dbca4e3c70babbef68acace880caa34'}, {'transaction_hash': '0x357e9067fc3a5a5dce38b968d01a4d8c67cc47ebb8001975c4998065748f4d83', 'transaction_index': 10, 'from_address': '0xb09f8a62c6681b0c739dfde7221bfe8f2da3f128', 'to_address': '0x7f6e12cee775346d6ba776510e25d703279886f3', 'value': '0E-9', 'input': '0x', 'output': None, 'trace_type': 'call', 'call_type': 'delegatecall', 'reward_type': None, 'gas': 0, 'gas_used': None, 'subtraces': 0, 'trace_address': '4647', 'error': 'Out of gas', 'status': 0, 'block_timestamp': 1475369605000000, 'block_number': 2363392, 'block_hash': '0x99fbd59028ed558a6cfb1061788165736dbca4e3c70babbef68acace880caa34'}, {'transaction_hash': '0x03b85e8e14bd404a1a2c15cbde921dcd21249d8bffc9b378c2cce62d925b5e54', 'transaction_index': 11, 'from_address': '0xb09f8a62c6681b0c739dfde7221bfe8f2da3f128', 'to_address': '0x7f6e12cee775346d6ba776510e25d703279886f3', 'value': '0E-9', 'input': '0x', 'output': None, 'trace_type': 'call', 'call_type': 'delegatecall', 'reward_type': None, 'gas': 0, 'gas_used': None, 'subtraces': 0, 'trace_address': '5188', 'error': 'Out of gas', 'status': 0, 'block_timestamp': 1475369605000000, 'block_number': 2363392, 'block_hash': '0x99fbd59028ed558a6cfb1061788165736dbca4e3c70babbef68acace880caa34'}]

--------------------------------------------------
Table full name: ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN.CONTRACTS
Column name: function_sighashes Type: VARIANT Description: 4-byte function signature hashes
Column name: is_erc20 Type: BOOLEAN Description: Whether this contract is an ERC20 contract
Column name: bytecode Type: TEXT Description: Bytecode of the contract
Column name: address Type: TEXT Description: Address of the contract
Column name: block_timestamp Type: NUMBER Description: Timestamp of the block where this contract was created
Column name: is_erc721 Type: BOOLEAN Description: Whether this contract is an ERC721 contract
Column name: block_number Type: NUMBER Description: Block number where this contract was created
Column name: block_hash Type: TEXT Description: Hash of the block where this contract was created
Sample rows:
[{'address': '0xac9212b0e0023c275b6830c12e3ffe5f754b0d5a', 'bytecode': '0x6060604052341561000f57600080fd5b6000610019610141565b6000805473ffffffffffffffffffffffffffffffffffffffff16906313e7c9d8903290604051602001526040517c010000000000000000000000000000000000000000000000000000000063ffffffff841602815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401602060405180830381600087803b15156100a757600080fd5b6102c65a03f115156100b857600080fd5b5050506040518051905015156100cd57600080fd5b60015473ffffffffffffffffffffffffffffffffffffffff169150600036806020601f820181900481020160405190810160405281815292919060208401838380828437509495506040945050505050516000818351602085016000875af13d806000843e81801561013d578184f35b8184fd5b602060405190810160405260008152905600a165627a7a723058202808c79164fe8b48c88735a3375ed8cf247b67ba22a14506e658603a0d3a25db0029', 'function_sighashes': '[]', 'is_erc20': False, 'is_erc721': False, 'block_timestamp': 1573830635000000, 'block_number': 8939101, 'block_hash': '0xd2a481bc6412e5a3f1fa1ce63c8f6ef77caad6e9c126eafa6cd0da4569f9fc75'}, {'address': '0xe24993a66e7755015b002269df12e50b5664afaa', 'bytecode': '0x6060604052341561000f57600080fd5b6000610019610141565b6000805473ffffffffffffffffffffffffffffffffffffffff16906313e7c9d8903290604051602001526040517c010000000000000000000000000000000000000000000000000000000063ffffffff841602815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401602060405180830381600087803b15156100a757600080fd5b6102c65a03f115156100b857600080fd5b5050506040518051905015156100cd57600080fd5b60015473ffffffffffffffffffffffffffffffffffffffff169150600036806020601f820181900481020160405190810160405281815292919060208401838380828437509495506040945050505050516000818351602085016000875af13d806000843e81801561013d578184f35b8184fd5b602060405190810160405260008152905600a165627a7a723058202808c79164fe8b48c88735a3375ed8cf247b67ba22a14506e658603a0d3a25db0029', 'function_sighashes': '[]', 'is_erc20': False, 'is_erc721': False, 'block_timestamp': 1573783430000000, 'block_number': 8935830, 'block_hash': '0x1ea1ec3636f7c43e28efa52dcd4808a9a0c649e045076cc8fd2555267692d8b9'}, {'address': '0x7c00dc2079d85711a0cec0bd7e484414aa14e9a6', 'bytecode': '0x6060604052341561000f57600080fd5b6000610019610141565b6000805473ffffffffffffffffffffffffffffffffffffffff16906313e7c9d8903290604051602001526040517c010000000000000000000000000000000000000000000000000000000063ffffffff841602815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401602060405180830381600087803b15156100a757600080fd5b6102c65a03f115156100b857600080fd5b5050506040518051905015156100cd57600080fd5b60015473ffffffffffffffffffffffffffffffffffffffff169150600036806020601f820181900481020160405190810160405281815292919060208401838380828437509495506040945050505050516000818351602085016000875af13d806000843e81801561013d578184f35b8184fd5b602060405190810160405260008152905600a165627a7a723058202808c79164fe8b48c88735a3375ed8cf247b67ba22a14506e658603a0d3a25db0029', 'function_sighashes': '[]', 'is_erc20': False, 'is_erc721': False, 'block_timestamp': 1573860639000000, 'block_number': 8941233, 'block_hash': '0xb618a1808894fa36fcd837c18a26f944c1c667f3c72d41197256a2b7a15eb8b8'}, {'address': '0xee170613ea22eeb67c370295767f1459798202c9', 'bytecode': '0x6060604052341561000f57600080fd5b6000610019610141565b6000805473ffffffffffffffffffffffffffffffffffffffff16906313e7c9d8903290604051602001526040517c010000000000000000000000000000000000000000000000000000000063ffffffff841602815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401602060405180830381600087803b15156100a757600080fd5b6102c65a03f115156100b857600080fd5b5050506040518051905015156100cd57600080fd5b60015473ffffffffffffffffffffffffffffffffffffffff169150600036806020601f820181900481020160405190810160405281815292919060208401838380828437509495506040945050505050516000818351602085016000875af13d806000843e81801561013d578184f35b8184fd5b602060405190810160405260008152905600a165627a7a723058202808c79164fe8b48c88735a3375ed8cf247b67ba22a14506e658603a0d3a25db0029', 'function_sighashes': '[]', 'is_erc20': False, 'is_erc721': False, 'block_timestamp': 1573776680000000, 'block_number': 8935394, 'block_hash': '0x94c64b27b462b762c88fbcc1426278d51ad3372eb8a574b22b47d7f01e2824e4'}, {'address': '0x76f94f65d5177b9d8ea205498f49e60077f72632', 'bytecode': '0x6060604052341561000f57600080fd5b6000610019610141565b6000805473ffffffffffffffffffffffffffffffffffffffff16906313e7c9d8903290604051602001526040517c010000000000000000000000000000000000000000000000000000000063ffffffff841602815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401602060405180830381600087803b15156100a757600080fd5b6102c65a03f115156100b857600080fd5b5050506040518051905015156100cd57600080fd5b60015473ffffffffffffffffffffffffffffffffffffffff169150600036806020601f820181900481020160405190810160405281815292919060208401838380828437509495506040945050505050516000818351602085016000875af13d806000843e81801561013d578184f35b8184fd5b602060405190810160405260008152905600a165627a7a723058202808c79164fe8b48c88735a3375ed8cf247b67ba22a14506e658603a0d3a25db0029', 'function_sighashes': '[]', 'is_erc20': False, 'is_erc721': False, 'block_timestamp': 1573817994000000, 'block_number': 8938218, 'block_hash': '0x789492195adc3a0f30062a6a29d5ccbe848dc108eed30047fa98a816c5665cc0'}]

--------------------------------------------------
Table full name: ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN.LOGS
Column name: data Type: TEXT Description: Contains one or more 32 Bytes non-indexed arguments of the log
Column name: block_timestamp Type: NUMBER Description: Timestamp of the block where this log was in
Column name: address Type: TEXT Description: Address from which this log originated
Column name: log_index Type: NUMBER Description: Integer of the log index position in the block
Column name: block_hash Type: TEXT Description: Hash of the block where this log was in
Column name: transaction_index Type: NUMBER Description: Integer of the transactions index position log was created from
Column name: topics Type: VARIANT Description: Indexed log arguments (0 to 4 32-byte hex strings). (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256)), except you declared the event with the anonymous specifier.)
Column name: transaction_hash Type: TEXT Description: Hash of the transactions this log was created from
Column name: block_number Type: NUMBER Description: The block number where this log was in
Sample rows:
[{'log_index': 44, 'transaction_hash': '0xc8c5d852bd35bbce871c47dbb0d155d3e4f122fd6d93f5e22cde63da06a7372f', 'transaction_index': 24, 'address': '0xf629cbd94d3791c9250152bd8dfbdf380e2a3b9c', 'data': '0x00000000000000000000000000000000000000000000011d92c28403f4cbf513', 'topics': '[\n  "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",\n  "0x000000000000000000000000f20b9e713a33f61fa38792d2afaf1cd30339126a",\n  "0x00000000000000000000000085c5c26dc2af5546341fc1988b9d178148b4838b"\n]', 'block_timestamp': 1541983788000000, 'block_number': 6687744, 'block_hash': '0x7b4ce722f8bad6032797a603504850b8a145cc354ff1107753b1a6a226c873c0'}, {'log_index': 78, 'transaction_hash': '0x33a43a36b2d0671921230f4316c32b3133eaf97bc8b521ae55581e9a7cdc11a3', 'transaction_index': 63, 'address': '0xa3c1e324ca1ce40db73ed6026c4a177f099b5770', 'data': '0x000000000000000000000000ee66e718c1c6c59d0d5e05e79244705ea8f948af', 'topics': '[\n  "0xef4c8685c12779a52dae7549eb7defa8523f67a054ad425b877a6b2da469a331"\n]', 'block_timestamp': 1541983788000000, 'block_number': 6687744, 'block_hash': '0x7b4ce722f8bad6032797a603504850b8a145cc354ff1107753b1a6a226c873c0'}, {'log_index': 74, 'transaction_hash': '0x6fb9c4f6859db3825fccd3bce5a0925b154c3b0a21ce73013626fc2484d266d2', 'transaction_index': 59, 'address': '0xa3c1e324ca1ce40db73ed6026c4a177f099b5770', 'data': '0x0000000000000000000000006a0cea7f9970ebb3057761f158eb9b3ac00651bc', 'topics': '[\n  "0xef4c8685c12779a52dae7549eb7defa8523f67a054ad425b877a6b2da469a331"\n]', 'block_timestamp': 1541983788000000, 'block_number': 6687744, 'block_hash': '0x7b4ce722f8bad6032797a603504850b8a145cc354ff1107753b1a6a226c873c0'}, {'log_index': 75, 'transaction_hash': '0x4f4d0bcd7c23e8a3e8de68d7aad24251c4f55fff91cb0d9946777a7853d82578', 'transaction_index': 60, 'address': '0xa3c1e324ca1ce40db73ed6026c4a177f099b5770', 'data': '0x0000000000000000000000005338b3818842973ac363ad7132ba46608ecb95d5', 'topics': '[\n  "0xef4c8685c12779a52dae7549eb7defa8523f67a054ad425b877a6b2da469a331"\n]', 'block_timestamp': 1541983788000000, 'block_number': 6687744, 'block_hash': '0x7b4ce722f8bad6032797a603504850b8a145cc354ff1107753b1a6a226c873c0'}, {'log_index': 90, 'transaction_hash': '0x78d1af778303b4054aaac4920c2f6bd45d21bf0b84ecb590119f8f534c3db81e', 'transaction_index': 73, 'address': '0x399934a1b63154c825e518c68b7da2147d6cb0c9', 'data': '0x0000000000000000000000000000000000000000000000000000003a35294400', 'topics': '[\n  "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",\n  "0x0000000000000000000000000000000000000000000000000000000000000000",\n  "0x0000000000000000000000002005cb8d7fe9a55f774da1bd6583e85bf1eab7a3"\n]', 'block_timestamp': 1541983788000000, 'block_number': 6687744, 'block_hash': '0x7b4ce722f8bad6032797a603504850b8a145cc354ff1107753b1a6a226c873c0'}]

--------------------------------------------------
Table full name: ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN.TOKEN_TRANSFERS
Column name: log_index Type: NUMBER Description: Log index in the transaction receipt
Column name: transaction_hash Type: TEXT Description: Transaction hash
Column name: block_timestamp Type: NUMBER Description: Timestamp of the block where this transfer was in
Column name: to_address Type: TEXT Description: Address of the receiver
Column name: block_number Type: NUMBER Description: Block number where this transfer was in
Column name: value Type: TEXT Description: Amount of tokens transferred (ERC20) / id of the token transferred (ERC721). Use safe_cast for casting to NUMERIC or FLOAT64
Column name: block_hash Type: TEXT Description: Hash of the block where this transfer was in
Column name: from_address Type: TEXT Description: Address of the sender
Column name: token_address Type: TEXT Description: ERC20 token address
Sample rows:
[{'token_address': '0xd204616e2ecf6d0b27ee79207c4ba54f91182a9d', 'from_address': '0x4b378475fb135fe4c0c1ce47fc407d5dfffa4e67', 'to_address': '0x267156058644ba2cb33ef074bba901bbfd66c833', 'value': '33903399999999995904', 'transaction_hash': '0xaeae15467bc1f2ebd0c319c5bb9aecccdda67255928daf368199d46786172784', 'log_index': 112, 'block_timestamp': 1528073142000000, 'block_number': 5728000, 'block_hash': '0xa88d11e5c6278180cfd2846c8d8302a9f7150dbddfa8e52162a75e81f64328ea'}, {'token_address': '0xd204616e2ecf6d0b27ee79207c4ba54f91182a9d', 'from_address': '0x4b378475fb135fe4c0c1ce47fc407d5dfffa4e67', 'to_address': '0xb944b70defe45f7a20725c93b5bb5e99d22f2a8d', 'value': '33903399999999995904', 'transaction_hash': '0x5047c71a00bd47d8b25779a3d21ee21d5589131f561ddb20ea336b5dde378dd4', 'log_index': 106, 'block_timestamp': 1528073142000000, 'block_number': 5728000, 'block_hash': '0xa88d11e5c6278180cfd2846c8d8302a9f7150dbddfa8e52162a75e81f64328ea'}, {'token_address': '0x9b68bfae21df5a510931a262cecf63f41338f264', 'from_address': '0x4c789df2c1e21bb17c5ab24ed95d6abeb114726b', 'to_address': '0xcf1cc6ed5b653def7417e3fa93992c3ffe49139b', 'value': '1142583453384104931343', 'transaction_hash': '0x570fa5b49face845ff24043405c296c02a919ba245468de0bab1d8dad35bd64b', 'log_index': 21, 'block_timestamp': 1528073142000000, 'block_number': 5728000, 'block_hash': '0xa88d11e5c6278180cfd2846c8d8302a9f7150dbddfa8e52162a75e81f64328ea'}, {'token_address': '0x1f573d6fb3f13d689ff844b4ce37794d79a7ff1c', 'from_address': '0x1f573d6fb3f13d689ff844b4ce37794d79a7ff1c', 'to_address': '0xcf1cc6ed5b653def7417e3fa93992c3ffe49139b', 'value': '71073650272275662513', 'transaction_hash': '0x570fa5b49face845ff24043405c296c02a919ba245468de0bab1d8dad35bd64b', 'log_index': 12, 'block_timestamp': 1528073142000000, 'block_number': 5728000, 'block_hash': '0xa88d11e5c6278180cfd2846c8d8302a9f7150dbddfa8e52162a75e81f64328ea'}, {'token_address': '0xd204616e2ecf6d0b27ee79207c4ba54f91182a9d', 'from_address': '0x4b378475fb135fe4c0c1ce47fc407d5dfffa4e67', 'to_address': '0x242f80ec35220b6c6f17d537d217386b912419cf', 'value': '94929600000000000000', 'transaction_hash': '0x2e785f1528ef861962da67546aaeedd02502bbb568f195d924949addcec69d82', 'log_index': 116, 'block_timestamp': 1528073142000000, 'block_number': 5728000, 'block_hash': '0xa88d11e5c6278180cfd2846c8d8302a9f7150dbddfa8e52162a75e81f64328ea'}]

--------------------------------------------------
Table full name: ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN.TRANSACTIONS
Column name: receipt_contract_address Type: TEXT
Column name: block_number Type: NUMBER Description: Number of the block which contains this transaction
Column name: receipt_status Type: NUMBER
Column name: receipt_gas_used Type: NUMBER
Column name: gas Type: NUMBER
Column name: nonce Type: NUMBER
Column name: from_address Type: TEXT
Column name: to_address Type: TEXT
Column name: receipt_root Type: TEXT
Column name: block_hash Type: TEXT Description: Hash of the block which contains this transaction
Column name: transaction_index Type: NUMBER
Column name: block_timestamp Type: NUMBER Description: Timestamp of the block which contains this transaction
Column name: gas_price Type: NUMBER
Column name: input Type: TEXT
Column name: value Type: NUMBER
Column name: receipt_cumulative_gas_used Type: NUMBER
Column name: hash Type: TEXT Description: The hash of this transaction
Sample rows:
[{'hash': '0xc499d6ba82f798ceaf165cec2e8af8a58871f2e728105afdf27c3babdaf803e2', 'nonce': 372, 'transaction_index': 15, 'from_address': '0x74a6c4823d81cbd6393e5957ccec128799a3f0c2', 'to_address': '0xbff68676836ee64f26845a21a9dcbdd89512bf29', 'value': '0E-9', 'gas': 7340032, 'gas_price': 3000000000, 'input': '0x5ea84b33000000000000000000000000c7f7295d1bb957db59f4105eeb1320fca7ede75d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000e40000000000000000000000000000000000000000000000000000000000000006e0000000000000000000000003b58a35694aa15ddcaddbfd69aae213354e481920000000000000000000000000ef25426a04f7bfb249d9c4ffc95dd312831787d0000000000000000000000000015d694f582f10f77f8fa96966aa88818355e18000000000000000000000000002645db1397e8a8a04e0e97dfab317af6e9b135000000000000000000000000004f1b23cb02b61ac063922153c311bb6575433700000000000000000000000000633acf2dd6e43592579c7dc7ce10657a7b037f00000000000000000000000000eb7f63272b7693013a80d9bf04b9a440f1a017000000000000000000000000029d501cfc5a44b3d271f37c76dd427b3ac502ba00000000000000000000000003bafca12df7d1ba64b27dd53c60c1575651c05a000000000000000000000000045f0df00f25133bcc25e083296027905ee8b7220000000000000000000000000483997cad5ac588f2216f95638c194537f44061000000000000000000000000055e9fc83e23303e57db26d8caf5b55be4dac99100000000000000000000000005f9e52fa6c93aeac1dae2f3b3cb880a89a0329f000000000000000000000000062637ee5e41091e3890b8938afec0791143083300000000000000000000000007c59125b0c62686330ec66db89b8e1a2e597e8f000000000000000000000000085091ea11788715afa5c8ce916060e886dcf48b000000000000000000000000090ec0fc9fe7f0095b495217d28539ece07f82730000000000000000000000000a63203df483b1b40ede6caeb9bb3ab3d087ea1c0000000000000000000000000ac4617911b1cb7039d4920aa639e65aa6ca3d620000000000000000000000000b81d1bb6fe98516d7276f8a95fa119ac68c22b60000000000000000000000000cbb31af047e32f3267d92d9a0a335f87cadc94a0000000000000000000000000d609b940e207b28653d739541aa73df57f873fc0000000000000000000000000d957e9c2e9d22236b6105fc29cb5c199e4fb26b0000000000000000000000000dbf27eb507682e8c8101c63cd725589ee8748a10000000000000000000000000e900c1e99c0d3480fb9ffedec9a649d4a455d4200000000000000000000000010e2c84f44ec367c45a8a7d46d3186164764e67f00000000000000000000000011d78940ba739d0ef909300a175e6d760cfeb8a800000000000000000000000012332f2f397ff182664083a9b3e03ecdae37dd5100000000000000000000000013a94aa7ad16356bcf68408df8e5c593d252a70400000000000000000000000013bed373961426cb428937f766891d19f5c02d6a0000000000000000000000001432c4d31a338bbb7af34901cf0cd82c212c118d00000000000000000000000014b5d6fb00a21d99231e9d96afac533a3e1d35800000000000000000000000001525afdab3280dab25973a0bf79281c505e1765f000000000000000000000000157252999170cd6dd90a586f8ca458d01082e62200000000000000000000000015e122e906e4192b3675d5b3fca1476d28b9d4700000000000000000000000001689f19f072eaee12f97a89826b59aaf151bf39100000000000000000000000016a07bdfa1fbee714e3668f9223c7e374ba64b18000000000000000000000000172a65da16eaf7341932b4514caae70daf1ed50b000000000000000000000000177d8556ac83a579073b60bf07ac88458ed9d84400000000000000000000000017c2b20d7618a90153b736862138f44c5035cfde00000000000000000000000017c760cb90bb627cdeec5a9c0f721f0966d38fc80000000000000000000000001897e9d679a7db6ee58115e19553d7ecb40b2272000000000000000000000000197a3cd66376e5b632863d0f9993f510829e594a000000000000000000000000198b0c80cf3643e7c0287208d86991950abcf0480000000000000000000000001a018f5162920e3e07bf705404a34523562344010000000000000000000000001a53e149a4ab8cde92dc35e87ce5', 'receipt_cumulative_gas_used': 7876681, 'receipt_gas_used': 7340032, 'receipt_contract_address': None, 'receipt_root': None, 'receipt_status': 0.0, 'block_timestamp': 1548664911000000, 'block_number': 7138313, 'block_hash': '0xbe6a5fe4c3ec8f4e8eb9bf4b0791115f4a10d904c769e41d6ec2af241a478319'}, {'hash': '0x6ce738ca184115b6ff34555d3ea2b4d8a84aca028d7802a7729e37e54b58b455', 'nonce': 50970, 'transaction_index': 130, 'from_address': '0x731e6cc591b055001ccb9758008f636819df6152', 'to_address': '0xf2a6b57c7f5a6835f1b84bffedd821e7f392fead', 'value': '0E-9', 'gas': 193707, 'gas_price': 20000000000, 'input': '0xb61d27f600000000000000000000000042b974424f0066c2446810369f2eae0d49d3136e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000044a9059cbb000000000000000000000000e711d15f5520d50390db9a83b681f31c7673a0fd000000000000000000000000000000000000000000000000000000009502f90000000000000000000000000000000000000000000000000000000000', 'receipt_cumulative_gas_used': 5622257, 'receipt_gas_used': 65792, 'receipt_contract_address': None, 'receipt_root': '0x3aa1c84da6b14a7c690e8e672ee961f35257d91d29816c629385129d288484da', 'receipt_status': nan, 'block_timestamp': 1505477107000000, 'block_number': 4276613, 'block_hash': '0xd697042c2ca95a8788a92170678ef9251ab3e10fec1478a86ca81e4ef648d239'}, {'hash': '0xef7873d77c161fd9b9bf9a3337141c7acbdb14d8ce0f3d4e3d3b5a45d34f1c01', 'nonce': 605, 'transaction_index': 57, 'from_address': '0xc1a1a63c331fc442bbbd04f32b923f8aa5f9f954', 'to_address': '0x8e5660b4ab70168b5a6feea0e0315cb49c8cd539', 'value': '0E-9', 'gas': 414492, 'gas_price': 4000000000, 'input': '0xae7b0333000000000000000000000000f87e31492faf9a91b02ee0deaad50d51d56d5d4dffffffffffffffffffffffffffffffd400000000000000000000000000000001000000000000000000000000000000000000000000000e3013c87ac943e00000', 'receipt_cumulative_gas_used': 4981720, 'receipt_gas_used': 131840, 'receipt_contract_address': None, 'receipt_root': None, 'receipt_status': 1.0, 'block_timestamp': 1548682988000000, 'block_number': 7139311, 'block_hash': '0x0d9265a5889328e12cf0af68ba92554b486581c8a3be311a17094153afe24b1a'}, {'hash': '0x9297e226d6a19c9f60a551525aaa59e35aac90cef855f02648863674279ec880', 'nonce': 3261, 'transaction_index': 20, 'from_address': '0x3ba6c0229cdedfb99785d6193121c90a6e9085d1', 'to_address': '0x89ba53cd0455f5b9e9b8f16bbdb6242c26bef83e', 'value': '0E-9', 'gas': 200200, 'gas_price': 7000000000, 'input': '0x5a68669900000000000000000000000000000000000000000000000000f6db547192c000000000000000000000000000000000000000000000000000000000005d26f1600000000000000000000000006adadda09ea70f82cf6bbc4c890fd040f6fb3d4b', 'receipt_cumulative_gas_used': 1280591, 'receipt_gas_used': 67072, 'receipt_contract_address': None, 'receipt_root': None, 'receipt_status': 1.0, 'block_timestamp': 1562818876000000, 'block_number': 8127796, 'block_hash': '0x1f302c0172917a0e2ccd7861922046eda70b4961b69ca4be627f86c26e86f945'}, {'hash': '0xa9c298ffa27fd7eb036fcec5f7bbb5e1ebf9ba5ace93001c4d423686be50c8a7', 'nonce': 25475, 'transaction_index': 41, 'from_address': '0x00bdb5699745f5b860228c8f939abf1b9ae374ed', 'to_address': '0x1522900b6dafac587d499a862861c0869be6e428', 'value': '0E-9', 'gas': 500000, 'gas_price': 28000000000, 'input': '0x39125215000000000000000000000000e2c2da1f8726254dd034932ddce692015ac30aa700000000000000000000000000000000000000000000000018fae27693b4000000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000059c59d5900000000000000000000000000000000000000000000000000000000000038df00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000416045cf5e769b61a08b6293e23adb270e1b1d2310716defe60c25ba1d5e63b74332c483f4b2ecbd3a07d1ce0756113dc627c65a888d277e240b3322312c974c601c00000000000000000000000000000000000000000000000000000000000000', 'receipt_cumulative_gas_used': 2139461, 'receipt_gas_used': 67584, 'receipt_contract_address': None, 'receipt_root': '0x06a9f96e1bbe0e70ebe80b3ae72f74cc3de9f0f2a4e68bd49b9205ed01fcc397', 'receipt_status': nan, 'block_timestamp': 1505518325000000, 'block_number': 4278343, 'block_hash': '0xdb9202190b80c5aa903ea6a0e40614030bcfda959ea2c51dfa511843f56d7e40'}]

--------------------------------------------------
External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: [table name]}}): 
{'ETHEREUM_BLOCKCHAIN': {'ETHEREUM_BLOCKCHAIN': ['BLOCKS', 'TOKENS', 'TRACES', 'CONTRACTS', 'LOGS', 'TOKEN_TRANSFERS', 'TRANSACTIONS']}}

Some few-shot examples after column exploration may be helpful:
Query:
--Description: 1) Look at the different kinds of traces that exist together with
--   their execution status and low-level call type.
SELECT DISTINCT 
       "trace_type",
       "call_type",
       "status"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
LIMIT  20;
Answer:
trace_type,call_type,status
call,call,1
call,call,0
call,delegatecall,1
suicide,,1
reward,,1
call,delegatecall,0
create,,1
suicide,,0
create,,0
call,staticcall,1
call,callcode,1
Query:
--Description: 2) Inspect successful value-carrying ETH transfers that are “normal”
--   EVM calls (exclude delegatecall / callcode / staticcall) so we see
--   the raw ETH flows that will be used for net-balance computation.
SELECT 
       "from_address",
       "to_address",
       "value",
       "block_number",
       "block_hash"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
WHERE  "trace_type" = 'call'
  AND  "status"     = 1
  AND  ( "call_type" IS NULL 
         OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
  AND  "value"      > 0
LIMIT  20;
Answer:
from_address,to_address,value,block_number,block_hash
0xdcc8b63f091de055f526f18cc2f947ad588c4291,0x6d3714d6571be317887d8c7d6e7187930d354975,401118000000000000.000000000,3874204,0xce8fd30565b5bc9447ceab18f745b58e86dc17215878c81a17f37b97f59db858
0x4a83a232132798d7691b89404fe1a7bf061a4297,0x49a6665e2c05b7b39cd8f57d6fbdd80964b0b9c7,7183900000000000000.000000000,3874460,0xc2e2d3fbca3767ede3a3be842d1e74e5bbd54c44114ea6f8ad606204ada6a549
0x6ea2fd5121ee249a53405801db9873bf5367df24,0x760eacab3e65afabd
Query:
--Description: 3) Explore miner / uncle rewards that appear as traces with 
--   trace_type = 'reward'. These amounts also contribute to the miner balance.
SELECT 
       "to_address"        AS "miner_address",
       "reward_type",
       "value",
       "block_number",
       "block_hash"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
WHERE  "trace_type" = 'reward'
LIMIT  20;
Answer:
miner_address,reward_type,value,block_number,block_hash
0xe8baa417ae28c39f723ddf9fc4e4f3b28f5d9f6b,block,5000000000000000000.000000000,3877888,0xa01c1b44e106839466c2f33a0ce2746e6f7a49630be9902e7159191269aa229a
0xea674fdde714fd979de3edf0f56aa9716b898ec8,block,5156250000000000000.000000000,3874050,0xd0efc4f86014f6dfe5e8b7ea0b3ab5907da211d5fdc1a851fdc1996f761d2276
0x2a65aca4d5fc5b5c859090a6c34d164135398226,block,3000000000000000000.000000000,5986306,0x1ecd0110b4f0b13f46e6af99a301cc82d5725da59190
Query:
--Description: 4) Examine a few transactions together with the on-chain gas
--   actually used.  This is needed later to debit the sender for gas fees.
SELECT 
       "hash"                     AS "tx_hash",
       "from_address",
       "to_address",
       "gas_price",
       "gas",                     -- gas supplied
       "receipt_gas_used",        -- gas actually consumed
       "block_number",
       "block_hash"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
WHERE  "receipt_gas_used" IS NOT NULL
LIMIT  20;
Answer:
tx_hash,from_address,to_address,gas_price,gas,receipt_gas_used,block_number,block_hash
0xc499d6ba82f798ceaf165cec2e8af8a58871f2e728105afdf27c3babdaf803e2,0x74a6c4823d81cbd6393e5957ccec128799a3f0c2,0xbff68676836ee64f26845a21a9dcbdd89512bf29,3000000000,7340032,7340032,7138313,0xbe6a5fe4c3ec8f4e8eb9bf4b0791115f4a10d904c769e41d6ec2af241a478319
0x6ce738ca184115b6ff34555d3ea2b4d8a84aca028d7802a7729e37e54b58b455,0x731e6cc591b055001ccb9758008f636819df6152,0xf2a6b57c7f5a6835f1b84bffedd821e7f392fead,200
Query:
--Description: 5) Show a sample of blocks together with their miner and the total
--   gas used in the block (will be multiplied by gas_price per tx later to
--   obtain miner gas-fee income).
SELECT 
       "hash"        AS "block_hash",
       "number"      AS "block_number",
       "miner",
       "gas_used",
       "transaction_count"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."BLOCKS"
LIMIT  20;
Answer:
block_hash,block_number,miner,gas_used,transaction_count
0xcf5326c1ac7a9bc76f90ec9b7188903c49977e2dbcb749012592f1f9166aba62,5875076,0xf3b9d2c81f2b24b0fa0acaaa865b7d9ced5fc2fb,7970437,103
0xda9d8facba4f7aad75f0175d15e368e58f4eaa0428a17edbf46720dd4bec6a61,5873225,0xcc16e3c00dbbe76603fa833ec20a48f786dfe610,7951584,100
0x75f019b26fcf856492810a8bfa3555dba398a128031c52b23c2e2156a729066f,5875115,0xf3b9d2c81f2b24b0fa0acaaa865b7d9ced5fc2fb,7974034,128
0x8a54e2cb5c29df25e56fcd3572e807b848d86d70df38bbe
Query:
--Description: 8) Calculate the total gas fee each sender actually paid
--              (Σ gas_price × receipt_gas_used) for a quick sample of 20
--              addresses.  No joins are involved, so the original statement
--              remains valid.
SELECT
       "from_address"                              AS "sender",
       SUM("gas_price" * "receipt_gas_used")       AS "gas_fee_wei"
FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
WHERE  "receipt_gas_used" IS NOT NULL
GROUP  BY "from_address"
LIMIT  20
Answer:
sender,gas_fee_wei
0x4fbda70fe3047a2764aeb621cb7857ca6cc385c5,471618000000000
0x564286362092d8e7936f0549571a803b203aaced,2170031520000000000
0xfdb16996831753d5331ff813c29a93c76834a0ad,100160634000000000
0x49497a4d914ae91d34ce80030fe620687bf333fd,656714905800000000
0x8e5539996a21fa05f7e553cb43d25f373ba6a1fa,668493800000000
0xcf96de628d40adcf84c501206547b5c5a74c49e8,1135080000000000
0xab5622d7da96c571c6abe08e4b85e462eb666e4f,615432024241036492
0xfaa001ae098f5f705b9a5b562950a4dd745c6554,584
Query:
--Description: 10) Compute net balance for the top-10 addresses
--              (incoming − outgoing + miner rewards − gas fees) in quadrillions
--              of Wei.  The miner_rewards CTE now mirrors the corrected logic
--              from query 9: it builds a per-block gas-fee table, joins it to
--              “block” reward traces, and aggregates the sum of static rewards
--              plus dynamic gas-fee rewards per miner.  All joins use the
--              numeric column "block_number" to guarantee matches.
WITH eth_flows AS (                           -- incoming ether
      SELECT "to_address"   AS addr,
             SUM("value")   AS in_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
      WHERE  "trace_type" = 'call'
        AND  "status"     = 1
        AND  ( "call_type" IS NULL
               OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
      GROUP  BY "to_address"
), eth_out AS (                               -- outgoing ether
      SELECT "from_address" AS addr,
             SUM("value")   AS out_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
      WHERE  "trace_type" = 'call'
        AND  "status"     = 1
        AND  ( "call_type" IS NULL
               OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
      GROUP  BY "from_address"
), gas_fees AS (                              -- gas fees paid by senders
      SELECT "from_address" AS addr,
             SUM("gas_price" * "receipt_gas_used") AS gas_paid_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
      WHERE  "receipt_gas_used" IS NOT NULL
      GROUP  BY "from_address"
), per_block_fees AS (                        -- dynamic fees earned per block
      SELECT "block_number",
             SUM("gas_price" * "receipt_gas_used") AS gas_fee_rewards_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
      WHERE  "receipt_gas_used" IS NOT NULL
      GROUP  BY "block_number"
), miner_rewards AS (                         -- static + dynamic miner rewards
      SELECT r."to_address" AS addr,
             SUM(r."value") +                 -- static block reward
             SUM(COALESCE(gf.gas_fee_rewards_wei,0)) AS miner_reward_wei
      FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES" r
      LEFT   JOIN per_block_fees gf
               ON gf."block_number" = r."block_number"
      WHERE  r."trace_type"  = 'reward'
        AND  r."reward_type" = 'block'
      GROUP  BY r."to_address"
)
SELECT addr,
       ROUND( (COALESCE(in_wei,0)
             - COALESCE(out_wei,0)
             + COALESCE(miner_reward_wei,0)
             - COALESCE(gas_paid_wei,0)) / 1e15 , 2) AS balance_quadrillions
FROM (
        SELECT addr FROM eth_flows
        UNION
        SELECT addr FROM eth_out
        UNION
        SELECT addr FROM gas_fees
        UNION
        SELECT addr FROM miner_rewards
     ) AS u
LEFT  JOIN eth_flows     USING(addr)
LEFT  JOIN eth_out       USING(addr)
LEFT  JOIN gas_fees      USING(addr)
LEFT  JOIN miner_rewards USING(addr)
WHERE addr IS NOT NULL                -- exclude null (0x) address
ORDER BY balance_quadrillions DESC
LIMIT 10
Answer:
ADDR,BALANCE_QUADRILLIONS
0x7727e5113d1d161373623e5f49fd568b4f543a9e,38117709.84
0x209c4784ab1e8183cf58ca33cb740efbf3fc18ef,35474695.19
0xcff5a79f5d2dfc8b10569c6bb105194cb87a10be,28747477.55
0x22b84d5ffea8b801c0422afe752377a64aa738c2,27030229.49
0x93025150b13eb744d51d927549a30630912e8fe8,26963808.90
0xeb31acbf35b4e48ae39c8c62bb5674cf9d7c4fbe,26199819.73
0xcafb10ee663f465f9d10588ac44ed20ed608c11e,21588017.15
0x742d35cc6634c0532925a3b844bc454e4438f44e,20165135.19
Task: Calculate the average balance (in quadrillions, 10^15) of the top 10 Ethereum addresses by net balance, including incoming and outgoing transfers from traces (only successful transactions and excluding call types like delegatecall, callcode, and staticcall), miner rewards (sum of gas fees per block), and sender gas fee deductions. Exclude null addresses and round the result to two decimal places.

Please think step by step and answer only one complete SQL in snowflake dialect in ```sql``` format.
SQL usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'ETHEREUM_BLOCKCHAIN': {'ETHEREUM_BLOCKCHAIN': ['BLOCKS', 'TOKENS', 'TRACES', 'CONTRACTS', 'LOGS', 'TOKEN_TRANSFERS', 'TRANSACTIONS']}}

When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
If the task description does not specify the number of decimal places, retain all decimals to four places.

[Self-refine]
2025-05-07 02:50:05 - Thread-291 (execute) - INFO - [Try to run SQL in self-refine]
```sql
WITH eth_in AS (                 -- incoming ETH (successful “normal” calls)
    SELECT
        "to_address"                    AS addr,
        SUM("value")                    AS in_wei
    FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
    WHERE  "trace_type" = 'call'
      AND  "status"     = 1
      AND  ( "call_type" IS NULL
             OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
    GROUP  BY "to_address"
), eth_out AS (                 -- outgoing ETH
    SELECT
        "from_address"                 AS addr,
        SUM("value")                   AS out_wei
    FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"
    WHERE  "trace_type" = 'call'
      AND  "status"     = 1
      AND  ( "call_type" IS NULL
             OR "call_type" NOT IN ('delegatecall','callcode','staticcall') )
    GROUP  BY "from_address"
), gas_fees AS (                -- gas fees paid by senders
    SELECT
        "from_address"                         AS addr,
        SUM("gas_price" * "receipt_gas_used")  AS gas_paid_wei
    FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
    WHERE  "receipt_gas_used" IS NOT NULL
    GROUP  BY "from_address"
), per_block_fees AS (          -- dynamic gas-fee rewards per block
    SELECT
        "block_number",
        SUM("gas_price" * "receipt_gas_used")  AS gas_fee_rewards_wei
    FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRANSACTIONS"
    WHERE  "receipt_gas_used" IS NOT NULL
    GROUP  BY "block_number"
), miner_rewards AS (           -- static + dynamic miner rewards
    SELECT
        r."to_address"                         AS addr,
        SUM(r."value" +
            COALESCE(f.gas_fee_rewards_wei,0)) AS miner_reward_wei
    FROM   ETHEREUM_BLOCKCHAIN.ETHEREUM_BLOCKCHAIN."TRACES"      r
    LEFT   JOIN per_block_fees                                    f
           ON f."block_number" = r."block_number"
    WHERE  r."trace_type"  = 'reward'
      AND  r."reward_type" = 'block'
    GROUP  BY r."to_address"
), all_addrs AS (              -- union of every address that appears anywhere
    SELECT addr FROM eth_in
    UNION
    SELECT addr FROM eth_out
    UNION
    SELECT addr FROM gas_fees
    UNION
    SELECT addr FROM miner_rewards
), balances AS (               -- net balance per address (in Wei)
    SELECT
        a.addr,
        COALESCE(in_wei,0)
      - COALESCE(out_wei,0)
      + COALESCE(miner_reward_wei,0)
      - COALESCE(gas_paid_wei,0)         AS balance_wei
    FROM all_addrs              a
    LEFT JOIN eth_in        USING(addr)
    LEFT JOIN eth_out       USING(addr)
    LEFT JOIN gas_fees      USING(addr)
    LEFT JOIN miner_rewards USING(addr)
    WHERE a.addr IS NOT NULL
), top10 AS (                  -- 10 largest balances
    SELECT balance_wei
    FROM   balances
    ORDER  BY balance_wei DESC NULLS LAST
    LIMIT  10
)
SELECT
    ROUND(AVG(balance_wei) / 1e15 , 2)   AS avg_balance_quadrillions
FROM   top10;
```
[Try to run SQL in self-refine]
2025-05-07 02:50:06 - Thread-291 (execute) - INFO - Total iteration counts: 0
