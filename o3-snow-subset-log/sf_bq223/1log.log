2025-05-07 01:33:20 - Thread-22 (execute) - INFO - [Exploration]
```sql
--Description: 1) Peek at a few publications where the assignee (harmonized) contains “DENSO” to confirm
--              how DENSO CORP patents are recorded in the table.
SELECT 
    t."publication_number",
    t."assignee_harmonized",
    t."assignee",
    t."filing_date"
FROM 
    PATENTS.PATENTS.PUBLICATIONS t
WHERE 
    t."assignee_harmonized" ILIKE '%DENSO%'
LIMIT 20;
```

```sql
--Description: 2) Look into the structure of the “citation” VARIANT column for an arbitrary publication
--              to understand the keys available (e.g., publication_number).
SELECT 
    f.value
FROM 
    PATENTS.PATENTS.PUBLICATIONS t,
    LATERAL FLATTEN(input => t."citation") f
WHERE 
    t."publication_number" IS NOT NULL        -- coarse filter
LIMIT 20;
```

```sql
--Description: 3) List all distinct publication numbers that are assigned to DENSO CORP and have a
--              non-null filing date (these will be our *cited* patents).
SELECT DISTINCT
    t."publication_number"
FROM 
    PATENTS.PATENTS.PUBLICATIONS t
WHERE 
    t."assignee_harmonized" ILIKE '%DENSO%CORP%' 
    AND t."filing_date" IS NOT NULL
LIMIT 20;
```

```sql
--Description: 4) Take one of the DENSO publication numbers found above and verify that other patents
--              indeed cite it, by flattening the “citation” array and matching on it.
SELECT 
    c."publication_number"  AS "citing_pub",
    f.value:"publication_number"::STRING      AS "cited_pub"
FROM 
    PATENTS.PATENTS.PUBLICATIONS c,
    LATERAL FLATTEN(input => c."citation") f
WHERE 
    f.value:"publication_number"::STRING = 'US-7650331-B1'   -- replace with actual DENSO pub from step 3
LIMIT 20;
```

```sql
--Description: 5) Inspect the “cpc” array for one citing patent to understand the structure and locate
--              the first CPC code.
SELECT 
    cp.value:"code"::STRING         AS "cpc_code",
    cp.value:"first"::BOOLEAN       AS "is_first"
FROM 
    PATENTS.PATENTS.PUBLICATIONS t,
    LATERAL FLATTEN(input => t."cpc") cp
WHERE 
    t."publication_number" = 'DE-69630331-T2'          -- replace with a citing_pub from step 4
LIMIT 20;
```

```sql
--Description: 6) For a sample of citing publications, pull the *first* CPC code only (where “first”=true
--              OR the first element in array) together with the assignee to check data quality.
SELECT 
    t."publication_number",
    t."assignee_harmonized",
    FIRST_VALUE(cp.value:"code"::STRING) 
        OVER (PARTITION BY t."publication_number" ORDER BY cp.index) AS "primary_cpc"
FROM 
    PATENTS.PATENTS.PUBLICATIONS t,
    LATERAL FLATTEN(input => t."cpc") cp
WHERE 
    cp.index = 0                -- take the very first element
    AND t."publication_number" IN ('DE-69630331-T2','DE-69636755-T2')   -- sample
LIMIT 20;
```

```sql
--Description: 7) Retrieve the CPC title (“titleFull”) from CPC_DEFINITION for a handful of codes
--              to confirm the join field.
SELECT 
    d."symbol",
    d."titleFull"
FROM 
    PATENTS.PATENTS.CPC_DEFINITION d
WHERE 
    d."symbol" IN ('H04L9/08','C12N5/10','B32B15/04')
LIMIT 20;
```

```sql
--Description: 8) Build a lightweight join of citing publications (excluding DENSO assignees) that cite
--              any DENSO CORP patent; fetch citing assignee and primary CPC subclass title.
SELECT 
    cit."citing_pub",
    pub."assignee_harmonized"                 AS "citing_assignee",
    pc."primary_cpc",
    def."titleFull"
FROM (
    SELECT DISTINCT
        c."publication_number"                AS "citing_pub",
        f.value:"publication_number"::STRING  AS "cited_pub"
    FROM 
        PATENTS.PATENTS.PUBLICATIONS c,
        LATERAL FLATTEN(input => c."citation") f
    ) cit
JOIN PATENTS.PATENTS.PUBLICATIONS denso
      ON cit."cited_pub" = denso."publication_number"
     AND denso."assignee_harmonized" ILIKE '%DENSO%CORP%'
JOIN PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = cit."citing_pub"
LEFT JOIN LATERAL (
        SELECT 
            FIRST_VALUE(cp.value:"code"::STRING) 
               OVER (PARTITION BY pub."publication_number" ORDER BY cp.index) AS "primary_cpc"
        FROM LATERAL FLATTEN(input => pub."cpc") cp
        LIMIT 1
     ) pc ON TRUE
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION def
      ON def."symbol" = pc."primary_cpc"
WHERE 
    pub."assignee_harmonized" NOT ILIKE '%DENSO%CORP%'
    AND pub."filing_date" IS NOT NULL
LIMIT 20;
```

```sql
--Description: 9) Aggregate the result: count citations by (citing assignee, CPC subclass title).
SELECT 
    pub."assignee_harmonized"::STRING                     AS "citing_assignee",
    def."titleFull"                                       AS "cpc_title",
    COUNT(*)                                              AS "citation_cnt"
FROM (
    SELECT DISTINCT
        c."publication_number"                AS "citing_pub",
        f.value:"publication_number"::STRING  AS "cited_pub"
    FROM 
        PATENTS.PATENTS.PUBLICATIONS c,
        LATERAL FLATTEN(input => c."citation") f
    ) cit
JOIN PATENTS.PATENTS.PUBLICATIONS denso
      ON cit."cited_pub" = denso."publication_number"
     AND denso."assignee_harmonized" ILIKE '%DENSO%CORP%'
JOIN PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = cit."citing_pub"
LEFT JOIN LATERAL (
        SELECT 
            FIRST_VALUE(cp.value:"code"::STRING) 
               OVER (PARTITION BY pub."publication_number" ORDER BY cp.index) AS "primary_cpc"
        FROM LATERAL FLATTEN(input => pub."cpc") cp
        LIMIT 1
     ) pc ON TRUE
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION def
      ON def."symbol" = pc."primary_cpc"
WHERE 
    pub."assignee_harmonized" NOT ILIKE '%DENSO%CORP%'
    AND pub."filing_date" IS NOT NULL
GROUP BY 
    pub."assignee_harmonized",
    def."titleFull"
LIMIT 20;
```

```sql
--Description: 10) (Optional final) Order the aggregated result by the number of citations in descending
--                 order to spot the major citing assignees and CPC subclasses.
SELECT 
    agg."citing_assignee",
    agg."cpc_title",
    agg."citation_cnt"
FROM (
    /* same sub-query as step 9 */ 
    SELECT 
        pub."assignee_harmonized"::STRING       AS "citing_assignee",
        def."titleFull"                         AS "cpc_title",
        COUNT(*)                                AS "citation_cnt"
    FROM (
        SELECT DISTINCT
            c."publication_number"                AS "citing_pub",
            f.value:"publication_number"::STRING  AS "cited_pub"
        FROM 
            PATENTS.PATENTS.PUBLICATIONS c,
            LATERAL FLATTEN(input => c."citation") f
        ) cit
    JOIN PATENTS.PATENTS.PUBLICATIONS denso
          ON cit."cited_pub" = denso."publication_number"
         AND denso."assignee_harmonized" ILIKE '%DENSO%CORP%'
    JOIN PATENTS.PATENTS.PUBLICATIONS pub
          ON pub."publication_number" = cit."citing_pub"
    LEFT JOIN LATERAL (
            SELECT 
                FIRST_VALUE(cp.value:"code"::STRING) 
                   OVER (PARTITION BY pub."publication_number" ORDER BY cp.index) AS "primary_cpc"
            FROM LATERAL FLATTEN(input => pub."cpc") cp
            LIMIT 1
         ) pc ON TRUE
    LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION def
          ON def."symbol" = pc."primary_cpc"
    WHERE 
        pub."assignee_harmonized" NOT ILIKE '%DENSO%CORP%'
        AND pub."filing_date" IS NOT NULL
    GROUP BY 
        pub."assignee_harmonized",
        def."titleFull"
) agg
ORDER BY 
    agg."citation_cnt" DESC
LIMIT 20;
```
[Exploration]
2025-05-07 01:33:20 - Thread-22 (execute) - INFO - [Try to execute]
--Description: 1) Peek at a few publications where the assignee (harmonized) contains “DENSO” to confirm
--              how DENSO CORP patents are recorded in the table.
SELECT 
    t."publication_number",
    t."assignee_harmonized",
    t."assignee",
    t."filing_date"
FROM 
    PATENTS.PATENTS.PUBLICATIONS t
WHERE 
    t."assignee_harmonized" ILIKE '%DENSO%'
LIMIT 20;
[Try to execute]
2025-05-07 01:33:23 - Thread-22 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 1) Peek at a few publications where the assignee (harmonized) contains “DENSO” to confirm
--              how DENSO CORP patents are recorded in the table.
SELECT 
    t."publication_number",
    t."assignee_harmonized",
    t."assignee",
    t."filing_date"
FROM 
    PATENTS.PATENTS.PUBLICATIONS t
WHERE 
    t."assignee_harmonized" ILIKE '%DENSO%'
LIMIT 20;
Results:
publication_number,assignee_harmonized,assignee,filing_date
US-2019152298-A1,"[
  {
    ""country_code"": ""JP"",
    ""name"": ""DENSO CORP""
  }
]","[
  ""Denso Corporation""
]",20190108
DE-102007000459-B4,"[
  {
    ""country_code"": ""JP"",
    ""name"": ""DENSO CORP""
  }
]","[
  ""Denso Corporation""
]",20070822
DE-112014004013-B4,"[
  {
    ""country_code"": ""JP"",
    ""name"": ""DENSO CORP""
  }
]","[
  ""Denso Corporation""
]",20140901
DE-102017201555-B4,"[
  {
    ""country_code"

[Successfully executed]
2025-05-07 01:33:23 - Thread-22 (execute) - INFO - [Try to execute]
--Description: 2) Look into the structure of the “citation” VARIANT column for an arbitrary publication
--              to understand the keys available (e.g., publication_number).
SELECT 
    f.value
FROM 
    PATENTS.PATENTS.PUBLICATIONS t,
    LATERAL FLATTEN(input => t."citation") f
WHERE 
    t."publication_number" IS NOT NULL        -- coarse filter
LIMIT 20;
[Try to execute]
2025-05-07 01:33:25 - Thread-22 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 2) Look into the structure of the “citation” VARIANT column for an arbitrary publication
--              to understand the keys available (e.g., publication_number).
SELECT 
    f.value
FROM 
    PATENTS.PATENTS.PUBLICATIONS t,
    LATERAL FLATTEN(input => t."citation") f
WHERE 
    t."publication_number" IS NOT NULL        -- coarse filter
LIMIT 20;
Results:
VALUE
"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""JP-S599312-B2"",
  ""type"": """"
}"
"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""JP-S62140788-A"",
  ""type"": """"
}"
"{
  ""application_number"": """",
  ""category"": ""EXA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""JP-S63250472-A"",
  

[Successfully executed]
2025-05-07 01:33:25 - Thread-22 (execute) - INFO - [Try to execute]
--Description: 3) List all distinct publication numbers that are assigned to DENSO CORP and have a
--              non-null filing date (these will be our *cited* patents).
SELECT DISTINCT
    t."publication_number"
FROM 
    PATENTS.PATENTS.PUBLICATIONS t
WHERE 
    t."assignee_harmonized" ILIKE '%DENSO%CORP%' 
    AND t."filing_date" IS NOT NULL
LIMIT 20;
[Try to execute]
2025-05-07 01:33:26 - Thread-22 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 3) List all distinct publication numbers that are assigned to DENSO CORP and have a
--              non-null filing date (these will be our *cited* patents).
SELECT DISTINCT
    t."publication_number"
FROM 
    PATENTS.PATENTS.PUBLICATIONS t
WHERE 
    t."assignee_harmonized" ILIKE '%DENSO%CORP%' 
    AND t."filing_date" IS NOT NULL
LIMIT 20;
Results:
publication_number
JP-H1070801-A
US-2024010045-A1
JP-2015130098-A
US-8676437-B2
US-2021041508-A1
JP-2006264404-A
JP-2004191321-A
US-2024004972-A1
US-2024017616-A1
US-2022190113-A1
JP-2002174152-A
US-2006152215-A1
US-2019152298-A1
US-2018006520-A1
JP-2005166291-A
JP-2023107015-A
JP-2018199473-A
US-6989627-B2
JP-H10103210-A
DE-102013105851-A1

[Successfully executed]
2025-05-07 01:33:26 - Thread-22 (execute) - INFO - [Try to execute]
--Description: 4) Take one of the DENSO publication numbers found above and verify that other patents
--              indeed cite it, by flattening the “citation” array and matching on it.
SELECT 
    c."publication_number"  AS "citing_pub",
    f.value:"publication_number"::STRING      AS "cited_pub"
FROM 
    PATENTS.PATENTS.PUBLICATIONS c,
    LATERAL FLATTEN(input => c."citation") f
WHERE 
    f.value:"publication_number"::STRING = 'US-7650331-B1'   -- replace with actual DENSO pub from step 3
LIMIT 20;
[Try to execute]
2025-05-07 01:33:27 - Thread-22 (execute) - INFO - [Error occurred]
No data found for the specified query.

[Error occurred]
2025-05-07 01:34:51 - Thread-22 (execute) - INFO - [Corrected SQL]
```sql
--Description:  We need to confirm that patents assigned to “DENSO CORP” (with valid
--              filing dates) are cited by other patents.  First, the sub-query collects
--              every publication_number that belongs to a DENSO-assigned patent and
--              has a non-null filing_date.  Next, the outer query scans every patent
--              record, explodes its “citation” array, and keeps only those rows where
--              the cited publication_number is in the DENSO list.  If the query returns
--              (citing_pub, cited_pub) pairs, it proves that our join logic will work
--              for the later aggregation tasks.
SELECT
    c."publication_number"                                   AS "citing_pub",
    f.value:"publication_number"::STRING                     AS "cited_pub"
FROM
    PATENTS.PATENTS.PUBLICATIONS  c,
    LATERAL FLATTEN(input => c."citation") f
WHERE
    f.value:"publication_number"::STRING IN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d
        WHERE d."assignee_harmonized" ILIKE '%DENSO%CORP%'
          AND d."filing_date" IS NOT NULL
)
LIMIT 20;
```
[Corrected SQL]
2025-05-07 01:36:40 - Thread-22 (execute) - INFO - [Results for corrected sql]
citing_pub,cited_pub
US-2015369515-A1,US-6178292-B1
US-10774689-B2,US-2007044473-A1
CN-109203994-A,JP-2008089479-A
DE-102006000312-B4,EP-1672346-A2
JP-2020117051-A,JP-2008238870-A
US-10616959-B2,US-6178292-B1
US-8807647-B2,JP-2010104485-A
CN-108292892-A,JP-2009071935-A
US-9151260-B2,JP-2004332657-A

[Results for corrected sql]
2025-05-07 01:38:23 - Thread-22 (execute) - INFO - [Corrected other sqls]
```sql
--Description: 5) Inspect the CPC array structure for a few random publications to locate
--              the “code” value and verify that index 0 indeed represents the primary CPC.
SELECT  
    t."publication_number",
    cp.value:"code"::STRING   AS "cpc_code",
    cp.value:"first"::BOOLEAN AS "is_first",
    cp.index                  AS "cpc_index"
FROM   PATENTS.PATENTS.PUBLICATIONS t,
       LATERAL FLATTEN(input => t."cpc") cp
WHERE  cp.value:"code" IS NOT NULL               -- ensure we have a CPC code
LIMIT 20;
```

```sql
--Description: 6) For a quick quality check, pull the first (index 0) CPC code for any
--              publication together with its assignee information.
SELECT  
    t."publication_number",
    t."assignee_harmonized",
    cp.value:"code"::STRING AS "primary_cpc"
FROM   PATENTS.PATENTS.PUBLICATIONS t
JOIN   LATERAL FLATTEN(input => t."cpc") cp
       ON cp.index = 0                           -- take only the first CPC element
LIMIT 20;
```

```sql
--Description: 7) Retrieve full CPC titles from CPC_DEFINITION for a few example codes
--              (verifies join field and data format).
SELECT  
    d."symbol",
    d."titleFull"
FROM   PATENTS.PATENTS.CPC_DEFINITION d
WHERE  d."symbol" IN ('H04L9/08', 'C12N5/10', 'B32B15/04')
LIMIT 20;
```

```sql
--Description: 8) Build a lightweight join of publications (excluding DENSO assignees) that
--              cite any DENSO-assigned patent.  Return citing assignee, primary CPC code,
--              and its full title.
SELECT  
    cit."citing_pub",
    pub."assignee_harmonized"                 AS "citing_assignee",
    cp.value:"code"::STRING                   AS "primary_cpc",
    def."titleFull"
FROM  (
        SELECT DISTINCT
               c."publication_number"                AS "citing_pub",
               f.value:"publication_number"::STRING  AS "cited_pub"
        FROM   PATENTS.PATENTS.PUBLICATIONS c,
               LATERAL FLATTEN(input => c."citation") f
      ) cit
JOIN  PATENTS.PATENTS.PUBLICATIONS denso
      ON cit."cited_pub" = denso."publication_number"
     AND denso."assignee_harmonized" ILIKE '%DENSO%CORP%'
JOIN  PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = cit."citing_pub"
LEFT JOIN LATERAL FLATTEN(input => pub."cpc") cp
      ON cp.index = 0                             -- first CPC only
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION def
      ON def."symbol" = cp.value:"code"::STRING
WHERE pub."assignee_harmonized" NOT ILIKE '%DENSO%CORP%'
  AND pub."filing_date" IS NOT NULL
LIMIT 20;
```

```sql
--Description: 9) Aggregate the preceding result: count how many times each non-DENSO assignee
--              cites DENSO patents within each CPC subclass title.
SELECT  
    pub."assignee_harmonized"::STRING  AS "citing_assignee",
    def."titleFull"                    AS "cpc_title",
    COUNT(*)                           AS "citation_cnt"
FROM  (
        SELECT DISTINCT
               c."publication_number"                AS "citing_pub",
               f.value:"publication_number"::STRING  AS "cited_pub"
        FROM   PATENTS.PATENTS.PUBLICATIONS c,
               LATERAL FLATTEN(input => c."citation") f
      ) cit
JOIN  PATENTS.PATENTS.PUBLICATIONS denso
      ON cit."cited_pub" = denso."publication_number"
     AND denso."assignee_harmonized" ILIKE '%DENSO%CORP%'
JOIN  PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = cit."citing_pub"
LEFT JOIN LATERAL FLATTEN(input => pub."cpc") cp
      ON cp.index = 0
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION def
      ON def."symbol" = cp.value:"code"::STRING
WHERE pub."assignee_harmonized" NOT ILIKE '%DENSO%CORP%'
  AND pub."filing_date" IS NOT NULL
GROUP BY 
      pub."assignee_harmonized",
      def."titleFull"
LIMIT 20;
```

```sql
--Description: 10) Order the aggregated citation counts (query 9) in descending order to
--               highlight the most frequent (assignee × CPC title) pairs.
SELECT  
    agg."citing_assignee",
    agg."cpc_title",
    agg."citation_cnt"
FROM (
        SELECT  
            pub."assignee_harmonized"::STRING  AS "citing_assignee",
            def."titleFull"                    AS "cpc_title",
            COUNT(*)                           AS "citation_cnt"
        FROM  (
                SELECT DISTINCT
                       c."publication_number"                AS "citing_pub",
                       f.value:"publication_number"::STRING  AS "cited_pub"
                FROM   PATENTS.PATENTS.PUBLICATIONS c,
                       LATERAL FLATTEN(input => c."citation") f
              ) cit
        JOIN  PATENTS.PATENTS.PUBLICATIONS denso
              ON cit."cited_pub" = denso."publication_number"
             AND denso."assignee_harmonized" ILIKE '%DENSO%CORP%'
        JOIN  PATENTS.PATENTS.PUBLICATIONS pub
              ON pub."publication_number" = cit."citing_pub"
        LEFT JOIN LATERAL FLATTEN(input => pub."cpc") cp
              ON cp.index = 0
        LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION def
              ON def."symbol" = cp.value:"code"::STRING
        WHERE pub."assignee_harmonized" NOT ILIKE '%DENSO%CORP%'
          AND pub."filing_date" IS NOT NULL
        GROUP BY 
              pub."assignee_harmonized",
              def."titleFull"
     ) agg
ORDER BY 
    agg."citation_cnt" DESC
LIMIT 20;
```
[Corrected other sqls]
2025-05-07 01:38:23 - Thread-22 (execute) - INFO - [Successfully corrected]
Successfully corrected. SQL:
--Description:  We need to confirm that patents assigned to “DENSO CORP” (with valid
--              filing dates) are cited by other patents.  First, the sub-query collects
--              every publication_number that belongs to a DENSO-assigned patent and
--              has a non-null filing_date.  Next, the outer query scans every patent
--              record, explodes its “citation” array, and keeps only those rows where
--              the cited publication_number is in the DENSO list.  If the query returns
--              (citing_pub, cited_pub) pairs, it proves that our join logic will work
--              for the later aggregation tasks.
SELECT
    c."publication_number"                                   AS "citing_pub",
    f.value:"publication_number"::STRING                     AS "cited_pub"
FROM
    PATENTS.PATENTS.PUBLICATIONS  c,
    LATERAL FLATTEN(input => c."citation") f
WHERE
    f.value:"publication_number"::STRING IN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d
        WHERE d."assignee_harmonized" ILIKE '%DENSO%CORP%'
          AND d."filing_date" IS NOT NULL
)
LIMIT 20;
Results:
citing_pub,cited_pub
US-2015369515-A1,US-6178292-B1
US-10774689-B2,US-2007044473-A1
CN-109203994-A,JP-2008089479-A
DE-102006000312-B4,EP-1672346-A2
JP-2020117051-A,JP-2008238870-A
US-10616959-B2,US-6178292-B1
US-8807647-B2,JP-2010104485-A
CN-108292892-A,JP-2009071935-A
US-9151260-B2,JP-2004332657-A

[Successfully corrected]
2025-05-07 01:38:23 - Thread-22 (execute) - INFO - [Try to execute]
--Description: 5) Inspect the CPC array structure for a few random publications to locate
--              the “code” value and verify that index 0 indeed represents the primary CPC.
SELECT  
    t."publication_number",
    cp.value:"code"::STRING   AS "cpc_code",
    cp.value:"first"::BOOLEAN AS "is_first",
    cp.index                  AS "cpc_index"
FROM   PATENTS.PATENTS.PUBLICATIONS t,
       LATERAL FLATTEN(input => t."cpc") cp
WHERE  cp.value:"code" IS NOT NULL               -- ensure we have a CPC code
LIMIT 20
[Try to execute]
2025-05-07 01:39:33 - Thread-22 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 5) Inspect the CPC array structure for a few random publications to locate
--              the “code” value and verify that index 0 indeed represents the primary CPC.
SELECT  
    t."publication_number",
    cp.value:"code"::STRING   AS "cpc_code",
    cp.value:"first"::BOOLEAN AS "is_first",
    cp.index                  AS "cpc_index"
FROM   PATENTS.PATENTS.PUBLICATIONS t,
       LATERAL FLATTEN(input => t."cpc") cp
WHERE  cp.value:"code" IS NOT NULL               -- ensure we have a CPC code
LIMIT 20
Results:
publication_number,cpc_code,is_first,cpc_index
CN-214682489-U,Y02P70/10,False,0
CN-214477141-U,Y04S10/18,False,0
CN-214477141-U,Y02E60/00,False,1
CN-214715286-U,Y02P90/02,False,0
CN-214675809-U,Y02B20/40,False,0
CN-214682433-U,Y02P70/10,False,0
CN-214956910-U,Y02E10/50,False,0
CN-214956910-U,Y02P70/50,False,1
CN-213375840-U,Y02A50/20,False,0
CN-214700498-U,Y02A20/108,False,0
CN-214700498-U,Y02B20/72,False,1
CN-214477726-U,Y02E60/10,False,0
CN-215050574-U,Y02P10/25,False,0

[Successfully executed]
2025-05-07 01:39:33 - Thread-22 (execute) - INFO - [Try to execute]
--Description: 6) For a quick quality check, pull the first (index 0) CPC code for any
--              publication together with its assignee information.
SELECT  
    t."publication_number",
    t."assignee_harmonized",
    cp.value:"code"::STRING AS "primary_cpc"
FROM   PATENTS.PATENTS.PUBLICATIONS t
JOIN   LATERAL FLATTEN(input => t."cpc") cp
       ON cp.index = 0                           -- take only the first CPC element
LIMIT 20
[Try to execute]
2025-05-07 01:39:33 - Thread-22 (execute) - INFO - [Error occurred]
{'status': 'error', 'error_msg': "##ERROR##000002 (0A000): Unsupported feature 'lateral table function called with OUTER JOIN syntax or a join predicate (ON clause)'."}
[Error occurred]
2025-05-07 01:40:19 - Thread-22 (execute) - INFO - [Corrected SQL]
```sql
--Description: To validate data quality, we want the primary CPC class for each patent.
--             The CPC field is an array; the element at index 0 is treated as the “first”
--             (primary) CPC.  Snowflake cannot use an ON-predicate with LATERAL FLATTEN,
--             so we employ the comma-style lateral join, then filter on cp.index = 0.
--             The query lists a sample of 20 publications with their harmonized assignee
--             and the extracted primary CPC code.
SELECT
    t."publication_number",
    t."assignee_harmonized",
    cp.value:"code"::STRING AS "primary_cpc"
FROM
    PATENTS.PATENTS.PUBLICATIONS t,
    LATERAL FLATTEN(input => t."cpc") cp
WHERE
    cp.index = 0
LIMIT 20;
```
[Corrected SQL]
2025-05-07 01:40:55 - Thread-22 (execute) - INFO - [Results for corrected sql]
publication_number,assignee_harmonized,primary_cpc
US-2021279799-A1,"[
  {
    ""country_code"": ""US"",
    ""name"": ""Santeri Holdings LLC""
  }
]",G06Q30/0605
US-2021280503-A1,"[
  {
    ""country_code"": ""JP"",
    ""name"": ""MURATA MANUFACTURING CO""
  }
]",H01L2924/00014
US-2021370805-A1,"[
  {
    ""country_code"": ""JP"",
    ""name"": ""HONDA MOTOR CO LTD""
  }
]",B60N2/24
US-2022115377-A1,"[
  {
    ""country_code"": ""KR"",
    ""name"": ""SAMSUNG ELECTRONICS CO LTD""
  }
]",H0

[Results for corrected sql]
2025-05-07 01:42:49 - Thread-22 (execute) - INFO - [Corrected other sqls]
```sql
--Description: 7) Retrieve full CPC titles from CPC_DEFINITION for a few example
--              CPC symbols (verifies join field and data format).
SELECT
    d."symbol",
    d."titleFull"
FROM
    PATENTS.PATENTS.CPC_DEFINITION d
WHERE
    d."symbol" IN ('H04L9/08', 'C12N5/10', 'B32B15/04')
LIMIT 20;
```

```sql
--Description: 8) Lightweight join: publications (excluding DENSO assignees) that cite
--              any DENSO-assigned patent.  Return the citing assignee, the primary CPC
--              code (index 0), and the full CPC title.  Uses CROSS-JOIN LATERAL
--              sub-query (allowed) instead of ON-predicate with FLATTEN.
SELECT
    cit."citing_pub",
    pub."assignee_harmonized"                AS "citing_assignee",
    pc."primary_cpc",
    def."titleFull"
FROM (
        /* distinct citing → cited pairs */
        SELECT DISTINCT
               c."publication_number"                AS "citing_pub",
               f.value:"publication_number"::STRING  AS "cited_pub"
        FROM   PATENTS.PATENTS.PUBLICATIONS c,
               LATERAL FLATTEN(input => c."citation") f
     ) cit
JOIN  PATENTS.PATENTS.PUBLICATIONS denso
      ON cit."cited_pub" = denso."publication_number"
     AND denso."assignee_harmonized" ILIKE '%DENSO%CORP%'
JOIN  PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = cit."citing_pub"
LEFT JOIN LATERAL (
        /* grab first CPC element (index 0) */
        SELECT cp.value:"code"::STRING AS "primary_cpc"
        FROM   LATERAL FLATTEN(input => pub."cpc") cp
        WHERE  cp.index = 0
        LIMIT  1
     ) pc ON TRUE
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION def
      ON def."symbol" = pc."primary_cpc"
WHERE
    pub."assignee_harmonized" NOT ILIKE '%DENSO%CORP%'
    AND pub."filing_date" IS NOT NULL
LIMIT 20;
```

```sql
--Description: 9) Aggregate: count how many times each non-DENSO assignee cites DENSO
--              patents within each CPC subclass title (primary CPC only).
SELECT
    pub."assignee_harmonized"::STRING  AS "citing_assignee",
    def."titleFull"                    AS "cpc_title",
    COUNT(*)                           AS "citation_cnt"
FROM (
        SELECT DISTINCT
               c."publication_number"                AS "citing_pub",
               f.value:"publication_number"::STRING  AS "cited_pub"
        FROM   PATENTS.PATENTS.PUBLICATIONS c,
               LATERAL FLATTEN(input => c."citation") f
     ) cit
JOIN  PATENTS.PATENTS.PUBLICATIONS denso
      ON cit."cited_pub" = denso."publication_number"
     AND denso."assignee_harmonized" ILIKE '%DENSO%CORP%'
JOIN  PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = cit."citing_pub"
LEFT JOIN LATERAL (
        SELECT cp.value:"code"::STRING AS "primary_cpc"
        FROM   LATERAL FLATTEN(input => pub."cpc") cp
        WHERE  cp.index = 0
        LIMIT  1
     ) pc ON TRUE
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION def
      ON def."symbol" = pc."primary_cpc"
WHERE
    pub."assignee_harmonized" NOT ILIKE '%DENSO%CORP%'
    AND pub."filing_date" IS NOT NULL
GROUP BY
    pub."assignee_harmonized",
    def."titleFull"
LIMIT 20;
```

```sql
--Description: 10) Same aggregation as in (9) but ordered by citation count to highlight
--               the most frequent (assignee × CPC title) combinations.
SELECT
    agg."citing_assignee",
    agg."cpc_title",
    agg."citation_cnt"
FROM (
        SELECT
            pub."assignee_harmonized"::STRING AS "citing_assignee",
            def."titleFull"                   AS "cpc_title",
            COUNT(*)                          AS "citation_cnt"
        FROM (
                SELECT DISTINCT
                       c."publication_number"                AS "citing_pub",
                       f.value:"publication_number"::STRING  AS "cited_pub"
                FROM   PATENTS.PATENTS.PUBLICATIONS c,
                       LATERAL FLATTEN(input => c."citation") f
             ) cit
        JOIN  PATENTS.PATENTS.PUBLICATIONS denso
              ON cit."cited_pub" = denso."publication_number"
             AND denso."assignee_harmonized" ILIKE '%DENSO%CORP%'
        JOIN  PATENTS.PATENTS.PUBLICATIONS pub
              ON pub."publication_number" = cit."citing_pub"
        LEFT JOIN LATERAL (
                SELECT cp.value:"code"::STRING AS "primary_cpc"
                FROM   LATERAL FLATTEN(input => pub."cpc") cp
                WHERE  cp.index = 0
                LIMIT  1
             ) pc ON TRUE
        LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION def
              ON def."symbol" = pc."primary_cpc"
        WHERE
            pub."assignee_harmonized" NOT ILIKE '%DENSO%CORP%'
            AND pub."filing_date" IS NOT NULL
        GROUP BY
            pub."assignee_harmonized",
            def."titleFull"
     ) agg
ORDER BY
    agg."citation_cnt" DESC
LIMIT 20;
```
[Corrected other sqls]
2025-05-07 01:42:49 - Thread-22 (execute) - INFO - [Successfully corrected]
Successfully corrected. SQL:
--Description: To validate data quality, we want the primary CPC class for each patent.
--             The CPC field is an array; the element at index 0 is treated as the “first”
--             (primary) CPC.  Snowflake cannot use an ON-predicate with LATERAL FLATTEN,
--             so we employ the comma-style lateral join, then filter on cp.index = 0.
--             The query lists a sample of 20 publications with their harmonized assignee
--             and the extracted primary CPC code.
SELECT
    t."publication_number",
    t."assignee_harmonized",
    cp.value:"code"::STRING AS "primary_cpc"
FROM
    PATENTS.PATENTS.PUBLICATIONS t,
    LATERAL FLATTEN(input => t."cpc") cp
WHERE
    cp.index = 0
LIMIT 20;
Results:
publication_number,assignee_harmonized,primary_cpc
US-2021279799-A1,"[
  {
    ""country_code"": ""US"",
    ""name"": ""Santeri Holdings LLC""
  }
]",G06Q30/0605
US-2021280503-A1,"[
  {
    ""country_code"": ""JP"",
    ""name"": ""MURATA MANUFACTURING CO""
  }
]",H01L2924/00014
US-2021370805-A1,"[
  {
    ""country_code"": ""JP"",
    ""name"": ""HONDA MOTOR CO LTD""
  }
]",B60N2/24
US-2022115377-A1,"[
  {
    ""country_code"": ""KR"",
    ""name"": ""SAMSUNG ELECTRONICS CO LTD""
  }
]",H0

[Successfully corrected]
2025-05-07 01:42:49 - Thread-22 (execute) - INFO - [Try to execute]
--Description: 7) Retrieve full CPC titles from CPC_DEFINITION for a few example
--              CPC symbols (verifies join field and data format).
SELECT
    d."symbol",
    d."titleFull"
FROM
    PATENTS.PATENTS.CPC_DEFINITION d
WHERE
    d."symbol" IN ('H04L9/08', 'C12N5/10', 'B32B15/04')
LIMIT 20
[Try to execute]
2025-05-07 01:42:49 - Thread-22 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 7) Retrieve full CPC titles from CPC_DEFINITION for a few example
--              CPC symbols (verifies join field and data format).
SELECT
    d."symbol",
    d."titleFull"
FROM
    PATENTS.PATENTS.CPC_DEFINITION d
WHERE
    d."symbol" IN ('H04L9/08', 'C12N5/10', 'B32B15/04')
LIMIT 20
Results:
symbol,titleFull
C12N5/10,Cells modified by introduction of foreign genetic material
H04L9/08,"Key distribution or management, e.g. generation, sharing or updating, of cryptographic keys or passwords"
B32B15/04,"Layered products comprising a layer of metal comprising metal as the main or only constituent of a layer, which is next to another layer of the same or of a different material"

[Successfully executed]
2025-05-07 01:42:49 - Thread-22 (execute) - INFO - [Try to execute]
--Description: 8) Lightweight join: publications (excluding DENSO assignees) that cite
--              any DENSO-assigned patent.  Return the citing assignee, the primary CPC
--              code (index 0), and the full CPC title.  Uses CROSS-JOIN LATERAL
--              sub-query (allowed) instead of ON-predicate with FLATTEN.
SELECT
    cit."citing_pub",
    pub."assignee_harmonized"                AS "citing_assignee",
    pc."primary_cpc",
    def."titleFull"
FROM (
        /* distinct citing → cited pairs */
        SELECT DISTINCT
               c."publication_number"                AS "citing_pub",
               f.value:"publication_number"::STRING  AS "cited_pub"
        FROM   PATENTS.PATENTS.PUBLICATIONS c,
               LATERAL FLATTEN(input => c."citation") f
     ) cit
JOIN  PATENTS.PATENTS.PUBLICATIONS denso
      ON cit."cited_pub" = denso."publication_number"
     AND denso."assignee_harmonized" ILIKE '%DENSO%CORP%'
JOIN  PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = cit."citing_pub"
LEFT JOIN LATERAL (
        /* grab first CPC element (index 0) */
        SELECT cp.value:"code"::STRING AS "primary_cpc"
        FROM   LATERAL FLATTEN(input => pub."cpc") cp
        WHERE  cp.index = 0
        LIMIT  1
     ) pc ON TRUE
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION def
      ON def."symbol" = pc."primary_cpc"
WHERE
    pub."assignee_harmonized" NOT ILIKE '%DENSO%CORP%'
    AND pub."filing_date" IS NOT NULL
LIMIT 20
[Try to execute]
2025-05-07 01:42:50 - Thread-22 (execute) - INFO - [Error occurred]
{'status': 'error', 'error_msg': '##ERROR##002031 (42601): SQL compilation error:\nUnsupported subquery type cannot be evaluated'}
[Error occurred]
2025-05-07 01:45:24 - Thread-22 (execute) - INFO - [Corrected SQL]
```sql
--Description: Identify non-DENSO publications that cite any patent whose assignee
--             is “DENSO CORP” (and has a valid filing date).  
--             Steps implemented in a single query:
--               1. Sub-query (IN-list) collects every publication_number belonging to
--                  a DENSO-assigned patent with non-null filing_date.  
--               2. For each publication record (alias c) we:
--                    • explode its "citation" array (alias f) and keep rows where the
--                      cited publication is in the DENSO list.  
--                    • explode the same publication’s "cpc" array (alias cp) and keep
--                      only element index 0 as the primary CPC code.  
--               3. Join to CPC_DEFINITION (def) to obtain the full CPC title.  
--               4. Exclude citing publications whose own assignee is DENSO and ensure
--                  citing patents have a non-null filing_date.  
--             Output a sample of 20 (citing_pub, citing_assignee, primary_cpc, title).
SELECT
    c."publication_number"                       AS "citing_pub",
    c."assignee_harmonized"                      AS "citing_assignee",
    cp.value:"code"::STRING                      AS "primary_cpc",
    def."titleFull"
FROM   PATENTS.PATENTS.PUBLICATIONS c,
       LATERAL FLATTEN(input => c."citation") f,
       LATERAL FLATTEN(input => c."cpc") cp,
       PATENTS.PATENTS.CPC_DEFINITION def
WHERE  cp.index = 0                                               -- primary CPC
  AND  f.value:"publication_number"::STRING IN (                  -- cites DENSO
           SELECT DISTINCT d."publication_number"
           FROM   PATENTS.PATENTS.PUBLICATIONS d
           WHERE  d."assignee_harmonized" ILIKE '%DENSO%CORP%'
             AND  d."filing_date" IS NOT NULL
       )
  AND  c."assignee_harmonized" NOT ILIKE '%DENSO%CORP%'           -- exclude DENSO as citer
  AND  c."filing_date" IS NOT NULL                                -- valid filing date
  AND  def."symbol" = cp.value:"code"::STRING                     -- CPC title join
LIMIT 20;
```
[Corrected SQL]
2025-05-07 01:48:45 - Thread-22 (execute) - INFO - [Results for corrected sql]
{'status': 'error', 'error_msg': '##ERROR##000630 (57014): Statement reached its statement or warehouse timeout of 200 second(s) and was canceled.'}
[Results for corrected sql]
2025-05-07 01:52:42 - Thread-22 (execute) - INFO - [Corrected SQL]
```sql
--Description: Find a small sample (20 rows) of non-DENSO patents that cite at least one
--             patent assigned to “DENSO CORP”, together with the citing assignee,
--             the citing patent’s primary (index-0) CPC code, and that CPC’s full title.
--             Efficiency / timeout considerations:
--               1. “denso” CTE collects the (comparatively small) set of publication
--                  numbers whose assignee_harmonized contains “DENSO CORP” and that
--                  also have a valid filing_date.  This list is later used in an IN-
--                  predicate, avoiding a large join.
--               2. The search for citing patents is limited to publication_date >=
--                  2015-01-01, dramatically cutting the scan size.
--               3. Comma-style LATERAL FLATTEN is used (no ON-predicate) and the
--                  citing patent’s CPC array is flattened once, keeping only the
--                  element at index 0 (primary CPC).
--               4. We exclude any citing patent whose own assignee is DENSO and require
--                  that the citing patent also has a valid filing_date.
--               5. Join to CPC_DEFINITION for the CPC subclass title.
WITH denso AS (
    SELECT DISTINCT p."publication_number"
    FROM   PATENTS.PATENTS.PUBLICATIONS p
    WHERE  p."assignee_harmonized" ILIKE '%DENSO%CORP%'
      AND  p."filing_date" IS NOT NULL
)
SELECT DISTINCT
       c."publication_number"                    AS "citing_pub",
       c."assignee_harmonized"                   AS "citing_assignee",
       cp.value:"code"::STRING                   AS "primary_cpc",
       def."titleFull"
FROM   (
          /* Restrict citing candidates to recent years for speed */
          SELECT  "publication_number",
                  "assignee_harmonized",
                  "citation",
                  "cpc",
                  "filing_date",
                  "publication_date"
          FROM    PATENTS.PATENTS.PUBLICATIONS
          WHERE   "publication_date" >= 20150101
        ) c,
       LATERAL FLATTEN(input => c."citation")     f,
       LATERAL FLATTEN(input => c."cpc")          cp,
       PATENTS.PATENTS.CPC_DEFINITION             def
WHERE  cp.index = 0                                                 -- primary CPC only
  AND  f.value:"publication_number"::STRING IN (SELECT * FROM denso) -- cites DENSO patent
  AND  def."symbol" = cp.value:"code"::STRING
  AND  c."assignee_harmonized" NOT ILIKE '%DENSO%CORP%'             -- exclude DENSO as citer
  AND  c."filing_date" IS NOT NULL
LIMIT 20;
```
[Corrected SQL]
2025-05-07 01:52:48 - Thread-22 (execute) - INFO - [Results for corrected sql]
citing_pub,citing_assignee,primary_cpc,titleFull
CN-109203994-A,"[
  {
    ""country_code"": """",
    ""name"": ""YAZAKI CORP""
  }
]",B60Q3/14,Arrangement of lighting devices for vehicle interiors; Lighting devices specially adapted for vehicle interiors for dashboards lighting through the surface to be illuminated
JP-2020117051-A,"[
  {
    ""country_code"": """",
    ""name"": ""HONDA MOTOR CO LTD""
  }
]",Y02T90/167,"Systems integrating technologies related to power network operation and 

[Results for corrected sql]
2025-05-07 01:54:47 - Thread-22 (execute) - INFO - [Corrected other sqls]
```sql
--Description: 9) Aggregate the number of times each non-DENSO assignee cites DENSO-assigned
--              patents, grouped by the full title of the citing patent’s primary CPC
--              subclass.  The query:
--                 • CTE “denso” gathers publication_numbers assigned to DENSO CORP
--                   with valid filing dates.
--                 • Each candidate citing patent (alias c) is flattened twice: once on
--                   “citation” (f) to locate DENSO citations, once on “cpc” (cp) to fetch
--                   the primary CPC code (cp.index = 0).
--                 • Excludes citing patents whose own assignee is DENSO and requires a
--                   valid filing_date.
--                 • Joins to CPC_DEFINITION (def) for the CPC subclass title, then
--                   counts citations by (citing_assignee, cpc_title).
WITH denso AS (
    SELECT DISTINCT p."publication_number"
    FROM   PATENTS.PATENTS.PUBLICATIONS p
    WHERE  p."assignee_harmonized" ILIKE '%DENSO%CORP%'
      AND  p."filing_date" IS NOT NULL
)
SELECT
    c."assignee_harmonized"::STRING            AS "citing_assignee",
    def."titleFull"                            AS "cpc_title",
    COUNT(*)                                   AS "citation_cnt"
FROM   PATENTS.PATENTS.PUBLICATIONS c,
       LATERAL FLATTEN(input => c."citation")  f,
       LATERAL FLATTEN(input => c."cpc")       cp,
       PATENTS.PATENTS.CPC_DEFINITION          def
WHERE  cp.index = 0                                                    -- primary CPC
  AND  f.value:"publication_number"::STRING IN (SELECT * FROM denso)   -- cites DENSO
  AND  def."symbol" = cp.value:"code"::STRING
  AND  c."assignee_harmonized" NOT ILIKE '%DENSO%CORP%'                -- exclude DENSO as citer
  AND  c."filing_date" IS NOT NULL
GROUP BY
    c."assignee_harmonized",
    def."titleFull"
LIMIT 20;
```

```sql
--Description: 10) Same aggregation as (9) but ordered by citation count (descending) to
--               highlight the most frequent (assignee × CPC title) combinations.
WITH denso AS (
    SELECT DISTINCT p."publication_number"
    FROM   PATENTS.PATENTS.PUBLICATIONS p
    WHERE  p."assignee_harmonized" ILIKE '%DENSO%CORP%'
      AND  p."filing_date" IS NOT NULL
),
agg AS (
    SELECT
        c."assignee_harmonized"::STRING        AS "citing_assignee",
        def."titleFull"                        AS "cpc_title",
        COUNT(*)                               AS "citation_cnt"
    FROM   PATENTS.PATENTS.PUBLICATIONS c,
           LATERAL FLATTEN(input => c."citation")  f,
           LATERAL FLATTEN(input => c."cpc")       cp,
           PATENTS.PATENTS.CPC_DEFINITION          def
    WHERE  cp.index = 0
      AND  f.value:"publication_number"::STRING IN (SELECT * FROM denso)
      AND  def."symbol" = cp.value:"code"::STRING
      AND  c."assignee_harmonized" NOT ILIKE '%DENSO%CORP%'
      AND  c."filing_date" IS NOT NULL
    GROUP BY
        c."assignee_harmonized",
        def."titleFull"
)
SELECT
    agg."citing_assignee",
    agg."cpc_title",
    agg."citation_cnt"
FROM   agg
ORDER BY
    agg."citation_cnt" DESC
LIMIT 20;
```
[Corrected other sqls]
2025-05-07 01:54:47 - Thread-22 (execute) - INFO - [Successfully corrected]
Successfully corrected. SQL:
--Description: Find a small sample (20 rows) of non-DENSO patents that cite at least one
--             patent assigned to “DENSO CORP”, together with the citing assignee,
--             the citing patent’s primary (index-0) CPC code, and that CPC’s full title.
--             Efficiency / timeout considerations:
--               1. “denso” CTE collects the (comparatively small) set of publication
--                  numbers whose assignee_harmonized contains “DENSO CORP” and that
--                  also have a valid filing_date.  This list is later used in an IN-
--                  predicate, avoiding a large join.
--               2. The search for citing patents is limited to publication_date >=
--                  2015-01-01, dramatically cutting the scan size.
--               3. Comma-style LATERAL FLATTEN is used (no ON-predicate) and the
--                  citing patent’s CPC array is flattened once, keeping only the
--                  element at index 0 (primary CPC).
--               4. We exclude any citing patent whose own assignee is DENSO and require
--                  that the citing patent also has a valid filing_date.
--               5. Join to CPC_DEFINITION for the CPC subclass title.
WITH denso AS (
    SELECT DISTINCT p."publication_number"
    FROM   PATENTS.PATENTS.PUBLICATIONS p
    WHERE  p."assignee_harmonized" ILIKE '%DENSO%CORP%'
      AND  p."filing_date" IS NOT NULL
)
SELECT DISTINCT
       c."publication_number"                    AS "citing_pub",
       c."assignee_harmonized"                   AS "citing_assignee",
       cp.value:"code"::STRING                   AS "primary_cpc",
       def."titleFull"
FROM   (
          /* Restrict citing candidates to recent years for speed */
          SELECT  "publication_number",
                  "assignee_harmonized",
                  "citation",
                  "cpc",
                  "filing_date",
                  "publication_date"
          FROM    PATENTS.PATENTS.PUBLICATIONS
          WHERE   "publication_date" >= 20150101
        ) c,
       LATERAL FLATTEN(input => c."citation")     f,
       LATERAL FLATTEN(input => c."cpc")          cp,
       PATENTS.PATENTS.CPC_DEFINITION             def
WHERE  cp.index = 0                                                 -- primary CPC only
  AND  f.value:"publication_number"::STRING IN (SELECT * FROM denso) -- cites DENSO patent
  AND  def."symbol" = cp.value:"code"::STRING
  AND  c."assignee_harmonized" NOT ILIKE '%DENSO%CORP%'             -- exclude DENSO as citer
  AND  c."filing_date" IS NOT NULL
LIMIT 20;
Results:
citing_pub,citing_assignee,primary_cpc,titleFull
CN-109203994-A,"[
  {
    ""country_code"": """",
    ""name"": ""YAZAKI CORP""
  }
]",B60Q3/14,Arrangement of lighting devices for vehicle interiors; Lighting devices specially adapted for vehicle interiors for dashboards lighting through the surface to be illuminated
JP-2020117051-A,"[
  {
    ""country_code"": """",
    ""name"": ""HONDA MOTOR CO LTD""
  }
]",Y02T90/167,"Systems integrating technologies related to power network operation and 

[Successfully corrected]
2025-05-07 01:54:47 - Thread-22 (execute) - INFO - [Try to execute]
--Description: 9) Aggregate the number of times each non-DENSO assignee cites DENSO-assigned
--              patents, grouped by the full title of the citing patent’s primary CPC
--              subclass.  The query:
--                 • CTE “denso” gathers publication_numbers assigned to DENSO CORP
--                   with valid filing dates.
--                 • Each candidate citing patent (alias c) is flattened twice: once on
--                   “citation” (f) to locate DENSO citations, once on “cpc” (cp) to fetch
--                   the primary CPC code (cp.index = 0).
--                 • Excludes citing patents whose own assignee is DENSO and requires a
--                   valid filing_date.
--                 • Joins to CPC_DEFINITION (def) for the CPC subclass title, then
--                   counts citations by (citing_assignee, cpc_title).
WITH denso AS (
    SELECT DISTINCT p."publication_number"
    FROM   PATENTS.PATENTS.PUBLICATIONS p
    WHERE  p."assignee_harmonized" ILIKE '%DENSO%CORP%'
      AND  p."filing_date" IS NOT NULL
)
SELECT
    c."assignee_harmonized"::STRING            AS "citing_assignee",
    def."titleFull"                            AS "cpc_title",
    COUNT(*)                                   AS "citation_cnt"
FROM   PATENTS.PATENTS.PUBLICATIONS c,
       LATERAL FLATTEN(input => c."citation")  f,
       LATERAL FLATTEN(input => c."cpc")       cp,
       PATENTS.PATENTS.CPC_DEFINITION          def
WHERE  cp.index = 0                                                    -- primary CPC
  AND  f.value:"publication_number"::STRING IN (SELECT * FROM denso)   -- cites DENSO
  AND  def."symbol" = cp.value:"code"::STRING
  AND  c."assignee_harmonized" NOT ILIKE '%DENSO%CORP%'                -- exclude DENSO as citer
  AND  c."filing_date" IS NOT NULL
GROUP BY
    c."assignee_harmonized",
    def."titleFull"
LIMIT 20
[Try to execute]
2025-05-07 01:58:07 - Thread-22 (execute) - INFO - [Error occurred]
{'status': 'error', 'error_msg': '##ERROR##000630 (57014): Statement reached its statement or warehouse timeout of 200 second(s) and was canceled.'}
[Error occurred]
2025-05-07 02:02:12 - Thread-22 (execute) - INFO - [Corrected SQL]
```sql
--Description:  Build the final aggregation asked for in the task.  We want to know
--              which assignees (excluding DENSO CORP itself) cite patents assigned to
--              DENSO CORP, and for those citations, what the full title is of the
--              citing patent’s primary CPC subclass (taken as the CPC array element
--              at index 0).  For performance we:
--                • Collect all DENSO publication_numbers with non-null filing_date in
--                  CTE “denso”.
--                • Reduce the search space of potential citing patents in CTE “citing”
--                  to those published from 2015 onward, with a valid filing_date and
--                  an assignee other than DENSO.
--                • Flatten “citation” (f) to keep only citing patents that reference a
--                  DENSO publication_number (from CTE denso).
--                • Flatten “cpc” (cp) once and keep cp.index = 0 to obtain the primary
--                  CPC code, then join that code to CPC_DEFINITION (def) to fetch the
--                  full CPC title.
--                • Finally, group by citing_assignee and CPC title, counting distinct
--                  citing publication_numbers, order by the count, and return the top
--                  20 rows.
WITH denso AS (
    SELECT DISTINCT p."publication_number"
    FROM   PATENTS.PATENTS.PUBLICATIONS p
    WHERE  p."assignee_harmonized" ILIKE '%DENSO%CORP%'
      AND  p."filing_date" IS NOT NULL
),
citing AS (
    SELECT  "publication_number",
            "assignee_harmonized",
            "citation",
            "cpc"
    FROM    PATENTS.PATENTS.PUBLICATIONS
    WHERE   "publication_date" >= 20150101          -- recent citing patents for speed
      AND   "filing_date" IS NOT NULL
      AND   "assignee_harmonized" NOT ILIKE '%DENSO%CORP%'
)
SELECT
    c."assignee_harmonized"::STRING        AS "citing_assignee",
    def."titleFull"                        AS "cpc_title",
    COUNT(DISTINCT c."publication_number") AS "citation_cnt"
FROM   citing c,
       LATERAL FLATTEN(input => c."citation") f,
       LATERAL FLATTEN(input => c."cpc")      cp,
       PATENTS.PATENTS.CPC_DEFINITION         def
WHERE  cp.index = 0                                                   -- primary CPC
  AND  f.value:"publication_number"::STRING IN (SELECT * FROM denso)  -- cites DENSO
  AND  def."symbol" = cp.value:"code"::STRING
GROUP BY
    c."assignee_harmonized",
    def."titleFull"
ORDER BY
    "citation_cnt" DESC
LIMIT 20;
```
[Corrected SQL]
2025-05-07 02:02:18 - Thread-22 (execute) - INFO - [Results for corrected sql]
citing_assignee,cpc_title,citation_cnt
"[{""country_code"":""DE"",""name"":""MAHLE INT GMBH""}]",Auxiliaries or details not otherwise provided for,1
"[{""country_code"":""DE"",""name"":""MAHLE INT GMBH""}]",Details,1
"[{""country_code"":""JP"",""name"":""SUZUKI HISAO""},{""country_code"":""JP"",""name"":""TOYOTA MOTOR CO LTD""}]","Discharge orifices having different orientations with respect to valve member direction of movement, e.g. orientations being such that fuel jets emerging from disch

[Results for corrected sql]
2025-05-07 02:03:37 - Thread-22 (execute) - INFO - [Corrected other sqls]
```sql
--Description: 10) Same aggregation as (9) but explicitly ordered by citation_count
--              (descending).  Steps:
--                • CTE denso  – list of publication_numbers assigned to DENSO CORP
--                  with valid filing dates.
--                • CTE citing – candidate citing patents, restricted to publication_date
--                  ≥ 2015-01-01, valid filing_date, and assignee ≠ DENSO.
--                • Flatten citing.citation (f) to retain only rows that cite a DENSO
--                  publication_number.  Flatten citing.cpc (cp) once, keeping element
--                  at index 0 as the primary CPC code.  Join the code to
--                  CPC_DEFINITION (def) for the full CPC subclass title.
--                • Aggregate by (citing_assignee, cpc_title), counting distinct citing
--                  publication_numbers.  Finally order by citation_cnt DESC and
--                  return the top 20 rows.
WITH denso AS (
    SELECT DISTINCT p."publication_number"
    FROM   PATENTS.PATENTS.PUBLICATIONS p
    WHERE  p."assignee_harmonized" ILIKE '%DENSO%CORP%'
      AND  p."filing_date" IS NOT NULL
),
citing AS (
    SELECT  "publication_number",
            "assignee_harmonized",
            "citation",
            "cpc"
    FROM    PATENTS.PATENTS.PUBLICATIONS
    WHERE   "publication_date" >= 20150101
      AND   "filing_date" IS NOT NULL
      AND   "assignee_harmonized" NOT ILIKE '%DENSO%CORP%'
),
agg AS (
    SELECT
        c."assignee_harmonized"::STRING        AS "citing_assignee",
        def."titleFull"                        AS "cpc_title",
        COUNT(DISTINCT c."publication_number") AS "citation_cnt"
    FROM   citing c,
           LATERAL FLATTEN(input => c."citation") f,
           LATERAL FLATTEN(input => c."cpc")      cp,
           PATENTS.PATENTS.CPC_DEFINITION         def
    WHERE  cp.index = 0                                                   -- primary CPC
      AND  f.value:"publication_number"::STRING IN (SELECT * FROM denso)  -- cites DENSO
      AND  def."symbol" = cp.value:"code"::STRING
    GROUP BY
        c."assignee_harmonized",
        def."titleFull"
)
SELECT
    agg."citing_assignee",
    agg."cpc_title",
    agg."citation_cnt"
FROM   agg
ORDER BY
    agg."citation_cnt" DESC
LIMIT 20;
```
[Corrected other sqls]
2025-05-07 02:03:37 - Thread-22 (execute) - INFO - [Successfully corrected]
Successfully corrected. SQL:
--Description:  Build the final aggregation asked for in the task.  We want to know
--              which assignees (excluding DENSO CORP itself) cite patents assigned to
--              DENSO CORP, and for those citations, what the full title is of the
--              citing patent’s primary CPC subclass (taken as the CPC array element
--              at index 0).  For performance we:
--                • Collect all DENSO publication_numbers with non-null filing_date in
--                  CTE “denso”.
--                • Reduce the search space of potential citing patents in CTE “citing”
--                  to those published from 2015 onward, with a valid filing_date and
--                  an assignee other than DENSO.
--                • Flatten “citation” (f) to keep only citing patents that reference a
--                  DENSO publication_number (from CTE denso).
--                • Flatten “cpc” (cp) once and keep cp.index = 0 to obtain the primary
--                  CPC code, then join that code to CPC_DEFINITION (def) to fetch the
--                  full CPC title.
--                • Finally, group by citing_assignee and CPC title, counting distinct
--                  citing publication_numbers, order by the count, and return the top
--                  20 rows.
WITH denso AS (
    SELECT DISTINCT p."publication_number"
    FROM   PATENTS.PATENTS.PUBLICATIONS p
    WHERE  p."assignee_harmonized" ILIKE '%DENSO%CORP%'
      AND  p."filing_date" IS NOT NULL
),
citing AS (
    SELECT  "publication_number",
            "assignee_harmonized",
            "citation",
            "cpc"
    FROM    PATENTS.PATENTS.PUBLICATIONS
    WHERE   "publication_date" >= 20150101          -- recent citing patents for speed
      AND   "filing_date" IS NOT NULL
      AND   "assignee_harmonized" NOT ILIKE '%DENSO%CORP%'
)
SELECT
    c."assignee_harmonized"::STRING        AS "citing_assignee",
    def."titleFull"                        AS "cpc_title",
    COUNT(DISTINCT c."publication_number") AS "citation_cnt"
FROM   citing c,
       LATERAL FLATTEN(input => c."citation") f,
       LATERAL FLATTEN(input => c."cpc")      cp,
       PATENTS.PATENTS.CPC_DEFINITION         def
WHERE  cp.index = 0                                                   -- primary CPC
  AND  f.value:"publication_number"::STRING IN (SELECT * FROM denso)  -- cites DENSO
  AND  def."symbol" = cp.value:"code"::STRING
GROUP BY
    c."assignee_harmonized",
    def."titleFull"
ORDER BY
    "citation_cnt" DESC
LIMIT 20;
Results:
citing_assignee,cpc_title,citation_cnt
"[{""country_code"":""DE"",""name"":""MAHLE INT GMBH""}]",Auxiliaries or details not otherwise provided for,1
"[{""country_code"":""DE"",""name"":""MAHLE INT GMBH""}]",Details,1
"[{""country_code"":""JP"",""name"":""SUZUKI HISAO""},{""country_code"":""JP"",""name"":""TOYOTA MOTOR CO LTD""}]","Discharge orifices having different orientations with respect to valve member direction of movement, e.g. orientations being such that fuel jets emerging from disch

[Successfully corrected]
2025-05-07 02:03:37 - Thread-22 (execute) - INFO - [Try to execute]
--Description: 10) Same aggregation as (9) but explicitly ordered by citation_count
--              (descending).  Steps:
--                • CTE denso  – list of publication_numbers assigned to DENSO CORP
--                  with valid filing dates.
--                • CTE citing – candidate citing patents, restricted to publication_date
--                  ≥ 2015-01-01, valid filing_date, and assignee ≠ DENSO.
--                • Flatten citing.citation (f) to retain only rows that cite a DENSO
--                  publication_number.  Flatten citing.cpc (cp) once, keeping element
--                  at index 0 as the primary CPC code.  Join the code to
--                  CPC_DEFINITION (def) for the full CPC subclass title.
--                • Aggregate by (citing_assignee, cpc_title), counting distinct citing
--                  publication_numbers.  Finally order by citation_cnt DESC and
--                  return the top 20 rows.
WITH denso AS (
    SELECT DISTINCT p."publication_number"
    FROM   PATENTS.PATENTS.PUBLICATIONS p
    WHERE  p."assignee_harmonized" ILIKE '%DENSO%CORP%'
      AND  p."filing_date" IS NOT NULL
),
citing AS (
    SELECT  "publication_number",
            "assignee_harmonized",
            "citation",
            "cpc"
    FROM    PATENTS.PATENTS.PUBLICATIONS
    WHERE   "publication_date" >= 20150101
      AND   "filing_date" IS NOT NULL
      AND   "assignee_harmonized" NOT ILIKE '%DENSO%CORP%'
),
agg AS (
    SELECT
        c."assignee_harmonized"::STRING        AS "citing_assignee",
        def."titleFull"                        AS "cpc_title",
        COUNT(DISTINCT c."publication_number") AS "citation_cnt"
    FROM   citing c,
           LATERAL FLATTEN(input => c."citation") f,
           LATERAL FLATTEN(input => c."cpc")      cp,
           PATENTS.PATENTS.CPC_DEFINITION         def
    WHERE  cp.index = 0                                                   -- primary CPC
      AND  f.value:"publication_number"::STRING IN (SELECT * FROM denso)  -- cites DENSO
      AND  def."symbol" = cp.value:"code"::STRING
    GROUP BY
        c."assignee_harmonized",
        def."titleFull"
)
SELECT
    agg."citing_assignee",
    agg."cpc_title",
    agg."citation_cnt"
FROM   agg
ORDER BY
    agg."citation_cnt" DESC
LIMIT 20
[Try to execute]
2025-05-07 02:03:41 - Thread-22 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 10) Same aggregation as (9) but explicitly ordered by citation_count
--              (descending).  Steps:
--                • CTE denso  – list of publication_numbers assigned to DENSO CORP
--                  with valid filing dates.
--                • CTE citing – candidate citing patents, restricted to publication_date
--                  ≥ 2015-01-01, valid filing_date, and assignee ≠ DENSO.
--                • Flatten citing.citation (f) to retain only rows that cite a DENSO
--                  publication_number.  Flatten citing.cpc (cp) once, keeping element
--                  at index 0 as the primary CPC code.  Join the code to
--                  CPC_DEFINITION (def) for the full CPC subclass title.
--                • Aggregate by (citing_assignee, cpc_title), counting distinct citing
--                  publication_numbers.  Finally order by citation_cnt DESC and
--                  return the top 20 rows.
WITH denso AS (
    SELECT DISTINCT p."publication_number"
    FROM   PATENTS.PATENTS.PUBLICATIONS p
    WHERE  p."assignee_harmonized" ILIKE '%DENSO%CORP%'
      AND  p."filing_date" IS NOT NULL
),
citing AS (
    SELECT  "publication_number",
            "assignee_harmonized",
            "citation",
            "cpc"
    FROM    PATENTS.PATENTS.PUBLICATIONS
    WHERE   "publication_date" >= 20150101
      AND   "filing_date" IS NOT NULL
      AND   "assignee_harmonized" NOT ILIKE '%DENSO%CORP%'
),
agg AS (
    SELECT
        c."assignee_harmonized"::STRING        AS "citing_assignee",
        def."titleFull"                        AS "cpc_title",
        COUNT(DISTINCT c."publication_number") AS "citation_cnt"
    FROM   citing c,
           LATERAL FLATTEN(input => c."citation") f,
           LATERAL FLATTEN(input => c."cpc")      cp,
           PATENTS.PATENTS.CPC_DEFINITION         def
    WHERE  cp.index = 0                                                   -- primary CPC
      AND  f.value:"publication_number"::STRING IN (SELECT * FROM denso)  -- cites DENSO
      AND  def."symbol" = cp.value:"code"::STRING
    GROUP BY
        c."assignee_harmonized",
        def."titleFull"
)
SELECT
    agg."citing_assignee",
    agg."cpc_title",
    agg."citation_cnt"
FROM   agg
ORDER BY
    agg."citation_cnt" DESC
LIMIT 20
Results:
citing_assignee,cpc_title,citation_cnt
"[{""country_code"":""KR"",""name"":""HYUNDAI MOTOR CO LTD""},{""country_code"":""KR"",""name"":""KIA MOTORS CORP""}]","Water heaters, e.g. boilers, continuous-flow heaters or water-storage heaters using electric energy supply",1
"[{""country_code"":""DE"",""name"":""MAHLE INT GMBH""}]",Details,1
"[{""country_code"":""DE"",""name"":""MAHLE INT GMBH""}]",Auxiliaries or details not otherwise provided for,1
"[{""country_code"":""JP"",""name"":""SUZUKI HISA

[Successfully executed]
2025-05-07 02:03:41 - Thread-22 (execute) - INFO - itercount: 0
2025-05-07 02:03:41 - Thread-22 (execute) - INFO - [Self-refine]
Table full name: PATENTS.PATENTS.DISCLOSURES_13
Column name: serial_cleaned Type: TEXT
Column name: sso Type: TEXT
Column name: disclosure_event Type: TEXT
Column name: reciprocity Type: TEXT
Column name: patent_owner_harmonized Type: TEXT
Column name: record_id Type: TEXT
Column name: family_id Type: TEXT
Column name: blanket_scope Type: TEXT
Column name: copyright Type: TEXT
Column name: standard Type: TEXT
Column name: licensing_commitment Type: TEXT
Column name: committee_project Type: TEXT
Column name: sc_name Type: TEXT
Column name: blanket_type Type: TEXT
Column name: pub_cleaned Type: TEXT
Column name: third_party Type: TEXT
Column name: wg_name Type: TEXT
Column name: patent_owner_unharmonized Type: TEXT
Column name: tc_name Type: TEXT
Column name: date Type: NUMBER
Sample rows:
[{'family_id': '22549751', 'record_id': 'REC00002', 'disclosure_event': 'DE0001', 'sso': 'ANSI', 'patent_owner_harmonized': '3M', 'patent_owner_unharmonized': '3M', 'date': 19751124, 'standard': 'X3.55;X3.56', 'committee_project': '', 'tc_name': '', 'sc_name': '', 'wg_name': '', 'licensing_commitment': 'FRAND', 'copyright': '', 'blanket_type': '0', 'blanket_scope': '', 'third_party': '0', 'reciprocity': '0', 'serial_cleaned': '', 'pub_cleaned': 'US3692255'}, {'family_id': '23170520', 'record_id': 'REC00001', 'disclosure_event': 'DE0001', 'sso': 'ANSI', 'patent_owner_harmonized': '3M', 'patent_owner_unharmonized': '3M', 'date': 19751124, 'standard': 'X3.55;X3.56', 'committee_project': '', 'tc_name': '', 'sc_name': '', 'wg_name': '', 'licensing_commitment': 'FRAND', 'copyright': '', 'blanket_type': '0', 'blanket_scope': '', 'third_party': '0', 'reciprocity': '0', 'serial_cleaned': '', 'pub_cleaned': 'US3861619'}, {'family_id': '23170520', 'record_id': 'REC00006', 'disclosure_event': 'DE0003', 'sso': 'ANSI', 'patent_owner_harmonized': '3M', 'patent_owner_unharmonized': '3M', 'date': 19890711, 'standard': 'X3.55;X3.56;X3.72;X3.116;X3.127;X3.136', 'committee_project': '', 'tc_name': '', 'sc_name': '', 'wg_name': '', 'licensing_commitment': 'Specific Terms', 'copyright': '', 'blanket_type': '0', 'blanket_scope': '', 'third_party': '0', 'reciprocity': '0', 'serial_cleaned': '', 'pub_cleaned': 'US3861619'}, {'family_id': '22549751', 'record_id': 'REC00008', 'disclosure_event': 'DE0004', 'sso': 'ANSI', 'patent_owner_harmonized': '3M', 'patent_owner_unharmonized': '3M', 'date': 19890906, 'standard': '', 'committee_project': '', 'tc_name': '', 'sc_name': '', 'wg_name': '', 'licensing_commitment': 'FRAND', 'copyright': '', 'blanket_type': '2', 'blanket_scope': '', 'third_party': '0', 'reciprocity': '0', 'serial_cleaned': '', 'pub_cleaned': 'US3692255'}, {'family_id': '23418274', 'record_id': 'REC00024', 'disclosure_event': 'DE0013', 'sso': 'ANSI', 'patent_owner_harmonized': 'Agilent Technologies', 'patent_owner_unharmonized': 'Agilent Technologies', 'date': 20020606, 'standard': '1588', 'committee_project': 'IEEE', 'tc_name': '', 'sc_name': '', 'wg_name': '', 'licensing_commitment': 'FRAND', 'copyright': '', 'blanket_type': '0', 'blanket_scope': '', 'third_party': '0', 'reciprocity': '0', 'serial_cleaned': '', 'pub_cleaned': 'US5566180'}]

--------------------------------------------------
Table full name: PATENTS.PATENTS.PUBLICATIONS
Column name: examiner Type: VARIANT Description: Is this text truncated?
Column name: fterm Type: VARIANT Description: For US publications only, the description in HTML, limited to the first 9 megabytes
Column name: application_number_formatted Type: TEXT Description: Application number, formatted to the patent office format where possible.
Column name: application_number Type: TEXT Description: Patent application number (DOCDB compatible), eg: 'US-87124404-A'. This may not always be set.
Column name: grant_date Type: NUMBER Description: For US publications only, the claims in plain text
Column name: cpc Type: VARIANT Description: Two-letter language code for this text
Column name: locarno Type: VARIANT Description: Localized text
Column name: description_localized_html Type: VARIANT Description: Localized text
Column name: publication_date Type: NUMBER Description: Two-letter language code for this text
Column name: kind_code Type: TEXT Description: Kind code, indicating application, grant, search report, correction, etc. These are different for each country.
Column name: spif_publication_number Type: TEXT Description: SPIF standard (spif.group) publication number, after 2000
Column name: ipc Type: VARIANT Description: Localized text
Column name: pct_number Type: TEXT Description: PCT number for this application if it was part of a PCT filing, eg: 'PCT/EP2008/062623'.
Column name: entity_status Type: TEXT Description: The filing date.
Column name: filing_date Type: NUMBER Description: Is this text truncated?
Column name: abstract_localized Type: VARIANT Description: Localized text
Column name: description_localized Type: VARIANT Description: The publication abstracts in different languages
Column name: assignee Type: VARIANT Description: Localized text
Column name: citation Type: VARIANT Description: Two-letter language code for this text
Column name: fi Type: VARIANT Description: Is this text truncated?
Column name: claims_localized_html Type: VARIANT Description: Is this text truncated?
Column name: inventor_harmonized Type: VARIANT Description: For US publications only, the claims in HTML
Column name: inventor Type: VARIANT Description: Is this text truncated?
Column name: claims_localized Type: VARIANT Description: Two-letter language code for this text
Column name: priority_date Type: NUMBER Description: Localized text
Column name: application_kind Type: TEXT Description: High-level kind of the application: A=patent; U=utility; P=provision; W= PCT; F=design; T=translation.
Column name: priority_claim Type: VARIANT Description: Two-letter language code for this text
Column name: assignee_harmonized Type: VARIANT Description: Two-letter language code for this text
Column name: title_localized Type: VARIANT Description: The publication titles in different languages
Column name: art_unit Type: TEXT Description: The grant date, or 0 if not granted.
Column name: child Type: VARIANT Description: The publication date.
Column name: family_id Type: TEXT Description: Family ID (simple family). Grouping on family ID will return all publications associated with a simple patent family (all publications share the same priority claims).
Column name: spif_application_number Type: TEXT Description: SPIF standard (spif.group) application number, after 2000
Column name: uspc Type: VARIANT Description: For US publications only, the description in plain text, limited to the first 9 megabytes
Column name: publication_number Type: TEXT Description: Patent publication number (DOCDB compatible), eg: 'US-7650331-B1'
Column name: country_code Type: TEXT Description: Country code, eg: 'US', 'EP', etc
Column name: parent Type: VARIANT Description: Is this text truncated?
Sample rows:
[{'publication_number': 'DE-69611147-T2', 'application_number': 'DE-69611147-T', 'country_code': 'DE', 'kind_code': 'T2', 'application_kind': 'T', 'application_number_formatted': 'DE1996611147', 'pct_number': '', 'family_id': '9483724', 'spif_publication_number': '', 'spif_application_number': '', 'title_localized': '[\n  {\n    "language": "de",\n    "text": "Schloss vom Typ eines entkuppelbaren Rotors",\n    "truncated": false\n  }\n]', 'abstract_localized': '[]', 'claims_localized': '[]', 'claims_localized_html': '[]', 'description_localized': '[]', 'description_localized_html': '[]', 'publication_date': 20010621, 'filing_date': 19961015, 'grant_date': 20010621, 'priority_date': 19951018, 'priority_claim': '[\n  {\n    "application_number": "FR-9512326-A",\n    "category": "",\n    "filing_date": 19951018,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  }\n]', 'inventor': '[\n  "MENAGER, CHRISTOPHE",\n  "CANARD, LOUIS",\n  "CADOUOT, PATRICK",\n  "GOURDIN, DOMINIQUE"\n]', 'inventor_harmonized': '[\n  {\n    "country_code": "FR",\n    "name": "MENAGER CHRISTOPHE"\n  },\n  {\n    "country_code": "FR",\n    "name": "CANARD LOUIS"\n  },\n  {\n    "country_code": "FR",\n    "name": "CADOUOT PATRICK"\n  },\n  {\n    "country_code": "FR",\n    "name": "GOURDIN DOMINIQUE"\n  }\n]', 'assignee': '[\n  "Valeo Securite Habitacle, Creteil Cedex"\n]', 'assignee_harmonized': '[\n  {\n    "country_code": "FR",\n    "name": "VALEO SECURITE HABITACLE"\n  }\n]', 'examiner': '[]', 'uspc': '[]', 'ipc': '[\n  {\n    "code": "E05B17/04",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "E05B17/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  }\n]', 'cpc': '[\n  {\n    "code": "E05B77/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "E05B17/0058",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  }\n]', 'fi': '[]', 'fterm': '[]', 'locarno': '[]', 'citation': '[]', 'parent': '[]', 'child': '[]', 'entity_status': '', 'art_unit': ''}, {'publication_number': 'DE-69630331-T2', 'application_number': 'DE-69630331-T', 'country_code': 'DE', 'kind_code': 'T2', 'application_kind': 'T', 'application_number_formatted': 'DE1996630331', 'pct_number': '', 'family_id': '23689246', 'spif_publication_number': '', 'spif_application_number': '', 'title_localized': '[\n  {\n    "language": "de",\n    "text": "Verfahren zur gesicherten Sitzungsschlüsselerzeugung und zur Authentifizierung",\n    "truncated": false\n  }\n]', 'abstract_localized': '[]', 'claims_localized': '[]', 'claims_localized_html': '[]', 'description_localized': '[]', 'description_localized_html': '[]', 'publication_date': 20040729, 'filing_date': 19960416, 'grant_date': 20040729, 'priority_date': 19950421, 'priority_claim': '[\n  {\n    "application_number": "US-42609095-A",\n    "category": "",\n    "filing_date": 19950421,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  }\n]', 'inventor': '[\n  "VANSTONE SCOTT .A, WATERLOO",\n  "MENEZES ALFRED JOHN, AUBURN",\n  "MINGHUA QU,"\n]', 'inventor_harmonized': '[\n  {\n    "country_code": "CA",\n    "name": "VANSTONE SCOTT A WATERLOO"\n  },\n  {\n    "country_code": "US",\n    "name": "MENEZES ALFRED JOHN AUBURN"\n  },\n  {\n    "country_code": "CA",\n    "name": "MINGHUA QU"\n  }\n]', 'assignee': '[\n  "Certicom Corp., Mississauga"\n]', 'assignee_harmonized': '[\n  {\n    "country_code": "CA",\n    "name": "CERTICOM CORP"\n  }\n]', 'examiner': '[]', 'uspc': '[]', 'ipc': '[\n  {\n    "code": "H04L9/08",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G06F7/72",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  }\n]', 'cpc': '[\n  {\n    "code": "G06F7/725",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "H04L9/0844",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "H04L9/0838",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "H04L9/0844",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G06F7/725",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  }\n]', 'fi': '[]', 'fterm': '[]', 'locarno': '[]', 'citation': '[]', 'parent': '[]', 'child': '[]', 'entity_status': '', 'art_unit': ''}, {'publication_number': 'DE-69636755-T2', 'application_number': 'DE-69636755-T', 'country_code': 'DE', 'kind_code': 'T2', 'application_kind': 'T', 'application_number_formatted': 'DE1996636755', 'pct_number': '', 'family_id': '8224764', 'spif_publication_number': '', 'spif_application_number': '', 'title_localized': '[\n  {\n    "language": "de",\n    "text": "Immortalisierte menschliche Epithelzell-Linie",\n    "truncated": false\n  }\n]', 'abstract_localized': '[\n  {\n    "language": "en",\n    "text": "Immortalised human corneal epithelial cell line, comprises cells of the cell line which are capable of stratification and expressing metabolic markers specific for nonimmortalised human epithelial cells, differentiation markers specific for nonimmortalised human corneal epithelial cells and markers specific for an inflammatory reaction.",\n    "truncated": false\n  }\n]', 'claims_localized': '[]', 'claims_localized_html': '[]', 'description_localized': '[]', 'description_localized_html': '[]', 'publication_date': 20071011, 'filing_date': 19961224, 'grant_date': 20071011, 'priority_date': 19961224, 'priority_claim': '[\n  {\n    "application_number": "EP-96203707-A",\n    "category": "",\n    "filing_date": 19961224,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  }\n]', 'inventor': '[\n  "OFFORD CAVIN, ELIZABETH",\n  "TROMVOUKIS, YVONNE",\n  "PFEIFER, ANDREA M.A.",\n  "SHARIF, NAJ"\n]', 'inventor_harmonized': '[\n  {\n    "country_code": "CH",\n    "name": "OFFORD CAVIN ELIZABETH"\n  },\n  {\n    "country_code": "CH",\n    "name": "TROMVOUKIS YVONNE"\n  },\n  {\n    "country_code": "CH",\n    "name": "PFEIFER ANDREA M A"\n  },\n  {\n    "country_code": "US",\n    "name": "SHARIF NAJ"\n  }\n]', 'assignee': '[\n  "Société des Produits Nestlé S.A."\n]', 'assignee_harmonized': '[\n  {\n    "country_code": "CH",\n    "name": "NESTLE SA"\n  }\n]', 'examiner': '[]', 'uspc': '[]', 'ipc': '[\n  {\n    "code": "C12N5/10",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N33/50",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12R1/91",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "C12N15/09",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12N5/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "A61K35/44",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N33/48",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12Q1/68",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12N5/071",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  }\n]', 'cpc': '[\n  {\n    "code": "C12N2503/02",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "C12N5/0621",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12N2503/02",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "C12N2510/04",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "C12N5/0621",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12N2510/04",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  }\n]', 'fi': '[]', 'fterm': '[]', 'locarno': '[]', 'citation': '[]', 'parent': '[]', 'child': '[]', 'entity_status': '', 'art_unit': ''}, {'publication_number': 'DE-69728658-T2', 'application_number': 'DE-69728658-T', 'country_code': 'DE', 'kind_code': 'T2', 'application_kind': 'T', 'application_number_formatted': 'DE1997628658', 'pct_number': '', 'family_id': '24437397', 'spif_publication_number': '', 'spif_application_number': '', 'title_localized': '[\n  {\n    "language": "de",\n    "text": "Lithographische dünne filmstruktur und diese enthaltende druckplatte",\n    "truncated": false\n  }\n]', 'abstract_localized': '[\n  {\n    "language": "en",\n    "text": "A lithographic laser imageable thin film structure comprising a substrate having first and second surfaces. A vacuum-deposited metal layer is carried by the first surface of the substrate. A layer of semiconductor material is adhered to and overlies the metal layer. The metal layer and the semiconductor material have thicknesses which are selected to maximize absorption of laser energy impinging on the same.",\n    "truncated": false\n  }\n]', 'claims_localized': '[]', 'claims_localized_html': '[]', 'description_localized': '[]', 'description_localized_html': '[]', 'publication_date': 20040812, 'filing_date': 19970115, 'grant_date': 20040812, 'priority_date': 19960229, 'priority_claim': '[\n  {\n    "application_number": "US-9700408-W",\n    "category": "",\n    "filing_date": 19970115,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  },\n  {\n    "application_number": "US-60864696-A",\n    "category": "",\n    "filing_date": 19960229,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  }\n]', 'inventor': '[\n  "FISHER, P.",\n  "PHILLIPS, W.",\n  "DAVIS, F.",\n  "LEGALLEE, CHARLOTTE"\n]', 'inventor_harmonized': '[\n  {\n    "country_code": "US",\n    "name": "FISHER P"\n  },\n  {\n    "country_code": "US",\n    "name": "PHILLIPS W"\n  },\n  {\n    "country_code": "US",\n    "name": "DAVIS F"\n  },\n  {\n    "country_code": "US",\n    "name": "LEGALLEE CHARLOTTE"\n  }\n]', 'assignee': '[\n  "Presstek, Inc."\n]', 'assignee_harmonized': '[\n  {\n    "country_code": "US",\n    "name": "PRESSTEK INC"\n  }\n]', 'examiner': '[]', 'uspc': '[]', 'ipc': '[\n  {\n    "code": "B32B15/04",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B41C1/10",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B41N1/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B41N1/14",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B27/20",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B7/02",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  }\n]', 'cpc': '[\n  {\n    "code": "B32B15/04",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12674",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B32B27/20",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/31678",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12458",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/31678",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12458",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B32B15/20",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/31504",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B41N1/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B15/09",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B2367/00",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B32B27/20",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12493",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B32B15/043",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B27/36",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B27/08",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B15/04",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12493",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12674",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B41C1/1033",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B41N1/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12528",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/31504",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B41C1/1033",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B32B2311/24",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12528",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  }\n]', 'fi': '[]', 'fterm': '[]', 'locarno': '[]', 'citation': '[]', 'parent': '[]', 'child': '[]', 'entity_status': '', 'art_unit': ''}, {'publication_number': 'DE-69807539-T2', 'application_number': 'DE-69807539-T', 'country_code': 'DE', 'kind_code': 'T2', 'application_kind': 'T', 'application_number_formatted': 'DE1998607539', 'pct_number': '', 'family_id': '11877005', 'spif_publication_number': '', 'spif_application_number': '', 'title_localized': '[\n  {\n    "language": "de",\n    "text": "Automatisches Analysegerät",\n    "truncated": false\n  }\n]', 'abstract_localized': '[]', 'claims_localized': '[]', 'claims_localized_html': '[]', 'description_localized': '[]', 'description_localized_html': '[]', 'publication_date': 20030116, 'filing_date': 19980120, 'grant_date': 20030116, 'priority_date': 19970129, 'priority_claim': '[\n  {\n    "application_number": "JP-1501397-A",\n    "category": "",\n    "filing_date": 19970129,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  }\n]', 'inventor': '[\n  "HANAWA, MASAAKI",\n  "MITSUMAKI, HIROSHI",\n  "OHISHI, TADASHI",\n  "KAI, SUSUMU",\n  "WATANABE, HIROSHI"\n]', 'inventor_harmonized': '[\n  {\n    "country_code": "JP",\n    "name": "HANAWA MASAAKI"\n  },\n  {\n    "country_code": "JP",\n    "name": "MITSUMAKI HIROSHI"\n  },\n  {\n    "country_code": "JP",\n    "name": "OHISHI TADASHI"\n  },\n  {\n    "country_code": "JP",\n    "name": "KAI SUSUMU"\n  },\n  {\n    "country_code": "JP",\n    "name": "WATANABE HIROSHI"\n  }\n]', 'assignee': '[\n  "Hitachi, Ltd."\n]', 'assignee_harmonized': '[\n  {\n    "country_code": "JP",\n    "name": "HITACHI LTD"\n  }\n]', 'examiner': '[]', 'uspc': '[]', 'ipc': '[\n  {\n    "code": "G01N35/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N35/02",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N35/04",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  }\n]', 'cpc': '[\n  {\n    "code": "Y10T436/115831",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/114165",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/0465",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N35/026",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/0467",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/113332",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/114165",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N35/00603",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/11",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/00326",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/0467",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N35/00603",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/00326",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/0465",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N35/026",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/11",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/113332",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/115831",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  }\n]', 'fi': '[]', 'fterm': '[]', 'locarno': '[]', 'citation': '[]', 'parent': '[]', 'child': '[]', 'entity_status': '', 'art_unit': ''}]

--------------------------------------------------
Table full name: PATENTS.PATENTS.CPC_DEFINITION
Column name: status Type: TEXT
Column name: precedenceLimitingReferences Type: VARIANT
Column name: rules Type: VARIANT
Column name: childGroups Type: VARIANT
Column name: scopeLimitingReferences Type: VARIANT
Column name: level Type: FLOAT
Column name: titlePart Type: VARIANT
Column name: residualReferences Type: VARIANT
Column name: definition Type: VARIANT
Column name: breakdownCode Type: BOOLEAN
Column name: limitingReferences Type: VARIANT
Column name: glossary Type: VARIANT
Column name: applicationReferences Type: VARIANT
Column name: notAllocatable Type: BOOLEAN
Column name: titleFull Type: TEXT
Column name: dateRevised Type: FLOAT
Column name: informativeReferences Type: VARIANT
Column name: symbol Type: TEXT
Column name: synonyms Type: VARIANT
Column name: children Type: VARIANT
Column name: parents Type: VARIANT
Column name: ipcConcordant Type: TEXT
Sample rows:
[{'applicationReferences': '[]', 'breakdownCode': True, 'childGroups': '[]', 'children': '[]', 'dateRevised': 20130101.0, 'definition': '[]', 'glossary': '[]', 'informativeReferences': '[]', 'ipcConcordant': 'CPCONLY', 'level': 9.0, 'limitingReferences': '[]', 'notAllocatable': False, 'parents': '[\n  "A01K2227/10",\n  "A01K2227/00",\n  "A01K",\n  "A01",\n  "A"\n]', 'precedenceLimitingReferences': '[]', 'residualReferences': '[]', 'rules': '[]', 'scopeLimitingReferences': '[]', 'status': 'published', 'symbol': 'A01K2227/108', 'synonyms': '[]', 'titleFull': 'Swine', 'titlePart': '[\n  "Swine"\n]'}, {'applicationReferences': '[]', 'breakdownCode': True, 'childGroups': '[]', 'children': '[]', 'dateRevised': 20130101.0, 'definition': '[]', 'glossary': '[]', 'informativeReferences': '[]', 'ipcConcordant': 'CPCONLY', 'level': 9.0, 'limitingReferences': '[]', 'notAllocatable': False, 'parents': '[\n  "A01K2227/10",\n  "A01K2227/00",\n  "A01K",\n  "A01",\n  "A"\n]', 'precedenceLimitingReferences': '[]', 'residualReferences': '[]', 'rules': '[]', 'scopeLimitingReferences': '[]', 'status': 'published', 'symbol': 'A01K2227/105', 'synonyms': '[]', 'titleFull': 'Murine', 'titlePart': '[\n  "Murine"\n]'}, {'applicationReferences': '[]', 'breakdownCode': True, 'childGroups': '[]', 'children': '[]', 'dateRevised': 20130101.0, 'definition': '[]', 'glossary': '[]', 'informativeReferences': '[]', 'ipcConcordant': 'CPCONLY', 'level': 9.0, 'limitingReferences': '[]', 'notAllocatable': False, 'parents': '[\n  "A01K2227/10",\n  "A01K2227/00",\n  "A01K",\n  "A01",\n  "A"\n]', 'precedenceLimitingReferences': '[]', 'residualReferences': '[]', 'rules': '[]', 'scopeLimitingReferences': '[]', 'status': 'published', 'symbol': 'A01K2227/107', 'synonyms': '[]', 'titleFull': 'Rabbit', 'titlePart': '[\n  "Rabbit"\n]'}, {'applicationReferences': '[]', 'breakdownCode': True, 'childGroups': '[]', 'children': '[]', 'dateRevised': 20130101.0, 'definition': '[]', 'glossary': '[]', 'informativeReferences': '[]', 'ipcConcordant': 'CPCONLY', 'level': 9.0, 'limitingReferences': '[]', 'notAllocatable': False, 'parents': '[\n  "A01K2267/02",\n  "A01K2267/00",\n  "A01K",\n  "A01",\n  "A"\n]', 'precedenceLimitingReferences': '[]', 'residualReferences': '[]', 'rules': '[]', 'scopeLimitingReferences': '[]', 'status': 'published', 'symbol': 'A01K2267/025', 'synonyms': '[]', 'titleFull': 'Animal producing cells or organs for transplantation', 'titlePart': '[\n  "Animal producing cells or organs for transplantation"\n]'}, {'applicationReferences': '[]', 'breakdownCode': True, 'childGroups': '[]', 'children': '[\n  "A01K2267/0312",\n  "A01K2267/0318",\n  "A01K2267/0325"\n]', 'dateRevised': 20130101.0, 'definition': '[]', 'glossary': '[]', 'informativeReferences': '[]', 'ipcConcordant': 'CPCONLY', 'level': 9.0, 'limitingReferences': '[]', 'notAllocatable': False, 'parents': '[\n  "A01K2267/03",\n  "A01K2267/00",\n  "A01K",\n  "A01",\n  "A"\n]', 'precedenceLimitingReferences': '[]', 'residualReferences': '[]', 'rules': '[]', 'scopeLimitingReferences': '[]', 'status': 'published', 'symbol': 'A01K2267/0306', 'synonyms': '[]', 'titleFull': 'Animal model for genetic diseases', 'titlePart': '[\n  "Animal model for genetic diseases"\n]'}]

--------------------------------------------------
External knowledge that might be helpful: 
### IPC Codes: Handling Main IPC Code Selection

When dealing with the `ipc` field in the `patents-public-data.patents.publications` dataset, it is important to understand the structure of this field, especially the subfield `first`. This subfield is a boolean that indicates whether a given IPC code is the main code for the publication number in question. This is crucial because each patent publication can be associated with multiple IPC codes, signifying the various aspects of the technology covered by the patent.

However, not every publication in the dataset has a designated main IPC code. This lack of a clearly identified main IPC code complicates the process of determining the most relevant IPC code for each publication, as selecting a single IPC code from multiple possibilities without clear prioritization can lead to inconsistent or skewed analyses.

This approach ensures a more consistent and representative selection of IPC codes across the dataset, facilitating more accurate and meaningful analysis of patent trends and classifications. By focusing on the most frequently occurring 4-digit IPC code, the view helps overcome the limitations posed by the absence of a designated main IPC code, thereby enhancing the reliability of patent-related studies and insights derived from this data.

Here is an example

```
SELECT 
    t1.publication_number, 
    SUBSTR(ipc_u.code, 0, 4) as ipc4, 
    COUNT(
    SUBSTR(ipc_u.code, 0, 4)
    ) as ipc4_count 
FROM 
    `patents-public-data.patents.publications` t1, 
    UNNEST(ipc) AS ipc_u 
GROUP BY 
    t1.publication_number, 
    ipc4

```



# Text Embeddings (Similarity)

Patent documents are rich with textual data. In fact, most of the information contained in a patent document is text. This includes the `abstract_localized`, `description_localized`, and `claims_localized`. Textual data can be a powerful tool to analyze and compare patent scope and content across patents. However, before being able to use textual data, it needs to be vectorized or transformed into text embeddings that can be used by machine learning models. Therefore, creating text embeddings from the textual data of patents is necessary to compare patent contents. Technically speaking, running an NLP algorithm that creates embeddings for all U.S. patents is computationally difficult.

Nevertheless, Google runs their own machine learning algorithm which transforms patent text metadata into text embeddings which they report in `patents-public-data.google_patents_research.publications` table. The textual embeddings of one patent, without any knowledge on the algorithm being used to create them, are meaningless on their own. However, the embeddings are powerful when it comes to comparing textual content of two or more patents. Embeddings can be used to calculate a similarity score between any two patents. This similarity score is calculated by applying the dot product of the embeddings vector of the patents, as shown below:

The similarity \( \text{Similarty}_{i,k} \) between two patents \( i \) and \( k \) is calculated as the dot product of their embedding vectors:

\[
\text{Similarty}_{i,k} = \mathbf{v}_i \cdot \mathbf{v}_k
\]

where

\[
\mathbf{v}_i = [v_{i1}, v_{i2}, v_{i3}, \ldots, v_{iN}]
\]
and
\[
\mathbf{v}_k = [v_{k1}, v_{k2}, v_{k3}, \ldots, v_{kN}]
\]

are the embedding vectors for patents \( i \) and \( k \) respectively. The higher the dot product, the more similar the patents.





# Originality (Trajtenberg)

One of the most important measures of a patent is "basicness". The aspects of basicness are tough to measure. Nevertheless, some literature finds that important aspects of these measures are embodied in the relationship between the invention and the technological predcessors and successors it is connected to through, for example, patent citations. We can thus use patent citations to construct measures that identify basicness and appropriability. Trajtenberg et al. 1997 provide a number of these measures. They distinguish between:

1. Forward-looking measures: measures that are derived from the relationship between an invention and subsequent technologies that build upon it. These measures are thus constructed from the forward citations. One example of a forward-looking basicness measure they provide is Generality, which is calculated as:

\[
\text{GENERALITY}_i = 1 - \sum_{k=1}^{N_i} \left( \frac{\text{NCITING}_{G_k}}{\text{NCITING}_i} \right)
\]


2. Backward-looking measures: measures that are derived from the relationship between a given patent and the body of knowledge that preceded it. These measure are thus constructed from the backward citations. One example of a backward-looking basicness measure they provide is Orginality, which is calculated as:

\[
\text{ORIGINALITY}_i = 1 - \sum_{k=1}^{N_i} \left( \frac{\text{NCITED}_{i,k}}{\text{NCITED}_i} \right)
\]

With **NCITING** and **NCITED** defined as the number of patents citing the focal patent and the number of patents cited by the focal patent, respectively. Index `i` corresponds to the focal patent considered, and `k` is the index of patent classes. For example, **NCITED_2,3** refers to the number of patents in patent class 3 and cited by our focal patent 2.


The table structure information is ({database name: {schema name: [table name]}}): 
{'PATENTS': {'PATENTS': ['DISCLOSURES_13', 'PUBLICATIONS', 'CPC_DEFINITION']}}

Some few-shot examples after column exploration may be helpful:
Query:
--Description: 1) Peek at a few publications where the assignee (harmonized) contains “DENSO” to confirm
--              how DENSO CORP patents are recorded in the table.
SELECT 
    t."publication_number",
    t."assignee_harmonized",
    t."assignee",
    t."filing_date"
FROM 
    PATENTS.PATENTS.PUBLICATIONS t
WHERE 
    t."assignee_harmonized" ILIKE '%DENSO%'
LIMIT 20;
Answer:
publication_number,assignee_harmonized,assignee,filing_date
US-2019152298-A1,"[
  {
    ""country_code"": ""JP"",
    ""name"": ""DENSO CORP""
  }
]","[
  ""Denso Corporation""
]",20190108
DE-102007000459-B4,"[
  {
    ""country_code"": ""JP"",
    ""name"": ""DENSO CORP""
  }
]","[
  ""Denso Corporation""
]",20070822
DE-112014004013-B4,"[
  {
    ""country_code"": ""JP"",
    ""name"": ""DENSO CORP""
  }
]","[
  ""Denso Corporation""
]",20140901
DE-102017201555-B4,"[
  {
    ""country_code"
Query:
--Description: 2) Look into the structure of the “citation” VARIANT column for an arbitrary publication
--              to understand the keys available (e.g., publication_number).
SELECT 
    f.value
FROM 
    PATENTS.PATENTS.PUBLICATIONS t,
    LATERAL FLATTEN(input => t."citation") f
WHERE 
    t."publication_number" IS NOT NULL        -- coarse filter
LIMIT 20;
Answer:
VALUE
"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""JP-S599312-B2"",
  ""type"": """"
}"
"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""JP-S62140788-A"",
  ""type"": """"
}"
"{
  ""application_number"": """",
  ""category"": ""EXA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""JP-S63250472-A"",
  
Query:
--Description: 3) List all distinct publication numbers that are assigned to DENSO CORP and have a
--              non-null filing date (these will be our *cited* patents).
SELECT DISTINCT
    t."publication_number"
FROM 
    PATENTS.PATENTS.PUBLICATIONS t
WHERE 
    t."assignee_harmonized" ILIKE '%DENSO%CORP%' 
    AND t."filing_date" IS NOT NULL
LIMIT 20;
Answer:
publication_number
JP-H1070801-A
US-2024010045-A1
JP-2015130098-A
US-8676437-B2
US-2021041508-A1
JP-2006264404-A
JP-2004191321-A
US-2024004972-A1
US-2024017616-A1
US-2022190113-A1
JP-2002174152-A
US-2006152215-A1
US-2019152298-A1
US-2018006520-A1
JP-2005166291-A
JP-2023107015-A
JP-2018199473-A
US-6989627-B2
JP-H10103210-A
DE-102013105851-A1
Query:
--Description: 5) Inspect the CPC array structure for a few random publications to locate
--              the “code” value and verify that index 0 indeed represents the primary CPC.
SELECT  
    t."publication_number",
    cp.value:"code"::STRING   AS "cpc_code",
    cp.value:"first"::BOOLEAN AS "is_first",
    cp.index                  AS "cpc_index"
FROM   PATENTS.PATENTS.PUBLICATIONS t,
       LATERAL FLATTEN(input => t."cpc") cp
WHERE  cp.value:"code" IS NOT NULL               -- ensure we have a CPC code
LIMIT 20
Answer:
publication_number,cpc_code,is_first,cpc_index
CN-214682489-U,Y02P70/10,False,0
CN-214477141-U,Y04S10/18,False,0
CN-214477141-U,Y02E60/00,False,1
CN-214715286-U,Y02P90/02,False,0
CN-214675809-U,Y02B20/40,False,0
CN-214682433-U,Y02P70/10,False,0
CN-214956910-U,Y02E10/50,False,0
CN-214956910-U,Y02P70/50,False,1
CN-213375840-U,Y02A50/20,False,0
CN-214700498-U,Y02A20/108,False,0
CN-214700498-U,Y02B20/72,False,1
CN-214477726-U,Y02E60/10,False,0
CN-215050574-U,Y02P10/25,False,0
Query:
--Description: 7) Retrieve full CPC titles from CPC_DEFINITION for a few example
--              CPC symbols (verifies join field and data format).
SELECT
    d."symbol",
    d."titleFull"
FROM
    PATENTS.PATENTS.CPC_DEFINITION d
WHERE
    d."symbol" IN ('H04L9/08', 'C12N5/10', 'B32B15/04')
LIMIT 20
Answer:
symbol,titleFull
C12N5/10,Cells modified by introduction of foreign genetic material
H04L9/08,"Key distribution or management, e.g. generation, sharing or updating, of cryptographic keys or passwords"
B32B15/04,"Layered products comprising a layer of metal comprising metal as the main or only constituent of a layer, which is next to another layer of the same or of a different material"
Query:
--Description: 10) Same aggregation as (9) but explicitly ordered by citation_count
--              (descending).  Steps:
--                • CTE denso  – list of publication_numbers assigned to DENSO CORP
--                  with valid filing dates.
--                • CTE citing – candidate citing patents, restricted to publication_date
--                  ≥ 2015-01-01, valid filing_date, and assignee ≠ DENSO.
--                • Flatten citing.citation (f) to retain only rows that cite a DENSO
--                  publication_number.  Flatten citing.cpc (cp) once, keeping element
--                  at index 0 as the primary CPC code.  Join the code to
--                  CPC_DEFINITION (def) for the full CPC subclass title.
--                • Aggregate by (citing_assignee, cpc_title), counting distinct citing
--                  publication_numbers.  Finally order by citation_cnt DESC and
--                  return the top 20 rows.
WITH denso AS (
    SELECT DISTINCT p."publication_number"
    FROM   PATENTS.PATENTS.PUBLICATIONS p
    WHERE  p."assignee_harmonized" ILIKE '%DENSO%CORP%'
      AND  p."filing_date" IS NOT NULL
),
citing AS (
    SELECT  "publication_number",
            "assignee_harmonized",
            "citation",
            "cpc"
    FROM    PATENTS.PATENTS.PUBLICATIONS
    WHERE   "publication_date" >= 20150101
      AND   "filing_date" IS NOT NULL
      AND   "assignee_harmonized" NOT ILIKE '%DENSO%CORP%'
),
agg AS (
    SELECT
        c."assignee_harmonized"::STRING        AS "citing_assignee",
        def."titleFull"                        AS "cpc_title",
        COUNT(DISTINCT c."publication_number") AS "citation_cnt"
    FROM   citing c,
           LATERAL FLATTEN(input => c."citation") f,
           LATERAL FLATTEN(input => c."cpc")      cp,
           PATENTS.PATENTS.CPC_DEFINITION         def
    WHERE  cp.index = 0                                                   -- primary CPC
      AND  f.value:"publication_number"::STRING IN (SELECT * FROM denso)  -- cites DENSO
      AND  def."symbol" = cp.value:"code"::STRING
    GROUP BY
        c."assignee_harmonized",
        def."titleFull"
)
SELECT
    agg."citing_assignee",
    agg."cpc_title",
    agg."citation_cnt"
FROM   agg
ORDER BY
    agg."citation_cnt" DESC
LIMIT 20
Answer:
citing_assignee,cpc_title,citation_cnt
"[{""country_code"":""KR"",""name"":""HYUNDAI MOTOR CO LTD""},{""country_code"":""KR"",""name"":""KIA MOTORS CORP""}]","Water heaters, e.g. boilers, continuous-flow heaters or water-storage heaters using electric energy supply",1
"[{""country_code"":""DE"",""name"":""MAHLE INT GMBH""}]",Details,1
"[{""country_code"":""DE"",""name"":""MAHLE INT GMBH""}]",Auxiliaries or details not otherwise provided for,1
"[{""country_code"":""JP"",""name"":""SUZUKI HISA
Task: Which assignees, excluding DENSO CORP itself, have cited patents assigned to DENSO CORP, and what are the titles of the primary CPC subclasses associated with these citations? Provide the name of each citing assignee (excluding DENSO CORP), the full title of the primary CPC subclass (based on the first CPC code), and the count of citations grouped by the citing assignee and the CPC subclass title. Ensure that only citations of patents with valid filing dates are considered, and focus on the first CPC code for each citing patent. The results should specifically exclude DENSO CORP as a citing assignee.

Please think step by step and answer only one complete SQL in snowflake dialect in ```sql``` format.
SQL usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'PATENTS': {'PATENTS': ['DISCLOSURES_13', 'PUBLICATIONS', 'CPC_DEFINITION']}}

When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
If the task description does not specify the number of decimal places, retain all decimals to four places.

[Self-refine]
2025-05-07 02:05:21 - Thread-22 (execute) - INFO - [Try to run SQL in self-refine]
```sql
WITH denso_patents AS (   -- patents assigned to DENSO CORP having a valid filing date
    SELECT DISTINCT 
           p."publication_number"
    FROM   PATENTS.PATENTS.PUBLICATIONS p
    WHERE  p."assignee_harmonized" ILIKE '%DENSO%CORP%' 
      AND  p."filing_date" IS NOT NULL
),

citing_patents AS (       -- potential citing patents (exclude DENSO, keep valid filing dates)
    SELECT  
           pub."publication_number",
           pub."assignee_harmonized",
           pub."citation",
           pub."cpc"
    FROM   PATENTS.PATENTS.PUBLICATIONS pub
    WHERE  pub."filing_date" IS NOT NULL
      AND  pub."assignee_harmonized" NOT ILIKE '%DENSO%CORP%'
)

SELECT  
    cpats."assignee_harmonized"::STRING            AS "citing_assignee",
    def."titleFull"                                AS "cpc_title",
    COUNT(DISTINCT cpats."publication_number")     AS "citation_count"
FROM    citing_patents cpats
        , LATERAL FLATTEN(input => cpats."citation") f            -- expand citations
        , LATERAL FLATTEN(input => cpats."cpc")      cp           -- expand CPC array
        , PATENTS.PATENTS.CPC_DEFINITION             def
WHERE   f.value:"publication_number"::STRING IN (SELECT * FROM denso_patents)  -- cites DENSO
  AND   cp.index = 0                                          -- primary CPC code only
  AND   def."symbol" = cp.value:"code"::STRING                -- fetch CPC title
GROUP BY
    cpats."assignee_harmonized"::STRING,
    def."titleFull"
ORDER BY
    "citation_count" DESC NULLS LAST;
```
[Try to run SQL in self-refine]
2025-05-07 02:08:41 - Thread-22 (execute) - INFO - itercount: 1
2025-05-07 02:08:41 - Thread-22 (execute) - INFO - [Self-refine]
Input sql:
WITH denso_patents AS (   -- patents assigned to DENSO CORP having a valid filing date
    SELECT DISTINCT 
           p."publication_number"
    FROM   PATENTS.PATENTS.PUBLICATIONS p
    WHERE  p."assignee_harmonized" ILIKE '%DENSO%CORP%' 
      AND  p."filing_date" IS NOT NULL
),

citing_patents AS (       -- potential citing patents (exclude DENSO, keep valid filing dates)
    SELECT  
           pub."publication_number",
           pub."assignee_harmonized",
           pub."citation",
           pub."cpc"
    FROM   PATENTS.PATENTS.PUBLICATIONS pub
    WHERE  pub."filing_date" IS NOT NULL
      AND  pub."assignee_harmonized" NOT ILIKE '%DENSO%CORP%'
)

SELECT  
    cpats."assignee_harmonized"::STRING            AS "citing_assignee",
    def."titleFull"                                AS "cpc_title",
    COUNT(DISTINCT cpats."publication_number")     AS "citation_count"
FROM    citing_patents cpats
        , LATERAL FLATTEN(input => cpats."citation") f            -- expand citations
        , LATERAL FLATTEN(input => cpats."cpc")      cp           -- expand CPC array
        , PATENTS.PATENTS.CPC_DEFINITION             def
WHERE   f.value:"publication_number"::STRING IN (SELECT * FROM denso_patents)  -- cites DENSO
  AND   cp.index = 0                                          -- primary CPC code only
  AND   def."symbol" = cp.value:"code"::STRING                -- fetch CPC title
GROUP BY
    cpats."assignee_harmonized"::STRING,
    def."titleFull"
ORDER BY
    "citation_count" DESC NULLS LAST;
The error information is:
{'status': 'error', 'error_msg': '##ERROR##000630 (57014): Statement reached its statement or warehouse timeout of 200 second(s) and was canceled.'}
Please correct it and output only 1 complete SQL query.
[Self-refine]
2025-05-07 02:11:22 - Thread-22 (execute) - INFO - [Try to run SQL in self-refine]
```sql
/* -------------------------------------------------------------------------
   1)  denso_patents   : list of DENSO-assigned patents having a valid filing
                         date (set of publication_numbers to be cited).
   2)  citing_filtered : patents that (a) are NOT assigned to DENSO,
                         (b) have a valid filing date, and (c) actually cite
                         one of the DENSO patents (checked while flattening
                         the citation array).   This drastically reduces the
                         data volume carried forward.
   3)  Final SELECT    : for every citing patent obtained in (2) we keep the
                         first / primary CPC code (cp.index = 0) and fetch
                         its full subclass title from CPC_DEFINITION.  We then
                         count distinct citing publications per
                         (assignee × CPC-title).
--------------------------------------------------------------------------- */
WITH denso_patents AS (          -- ❶ DENSO patents (to be cited)
    SELECT DISTINCT
           p."publication_number"
    FROM   PATENTS.PATENTS.PUBLICATIONS p
    WHERE  p."assignee_harmonized" ILIKE '%DENSO%CORP%'
      AND  p."filing_date" IS NOT NULL
),

citing_filtered AS (             -- ❷ Non-DENSO patents that cite a DENSO patent
    SELECT DISTINCT
           cr."publication_number",
           cr."assignee_harmonized",
           cr."cpc"
    FROM   PATENTS.PATENTS.PUBLICATIONS cr,
           LATERAL FLATTEN(input => cr."citation") f
    WHERE  cr."filing_date" IS NOT NULL
      AND  cr."assignee_harmonized" NOT ILIKE '%DENSO%CORP%'
      AND  f.value:"publication_number"::STRING IN (SELECT "publication_number"
                                                    FROM   denso_patents)
)

SELECT
    cf."assignee_harmonized"::STRING                AS "citing_assignee",
    def."titleFull"                                 AS "cpc_title",
    COUNT(DISTINCT cf."publication_number")         AS "citation_count"
FROM   citing_filtered cf
       , LATERAL FLATTEN(input => cf."cpc")  cp
       , PATENTS.PATENTS.CPC_DEFINITION      def
WHERE  cp.index = 0                                    -- primary CPC only
  AND  def."symbol" = cp.value:"code"::STRING          -- fetch CPC title
GROUP BY
       cf."assignee_harmonized"::STRING,
       def."titleFull"
ORDER BY
       "citation_count" DESC NULLS LAST;
```
[Try to run SQL in self-refine]
2025-05-07 02:12:09 - Thread-22 (execute) - INFO - Total iteration counts: 1
