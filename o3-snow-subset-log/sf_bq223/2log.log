2025-05-07 01:34:09 - Thread-27 (execute) - INFO - [Exploration]
```sql
--Description: 1) Inspect a few publications whose (harmonized) assignee contains the string “DENSO”
SELECT 
    "publication_number",
    "assignee_harmonized",
    "filing_date"
FROM PATENTS.PATENTS.PUBLICATIONS
WHERE "assignee_harmonized" ILIKE '%DENSO%'
LIMIT 20;
```

```sql
--Description: 2) Flatten the harmonized–assignee JSON to see the exact assignee names for DENSO patents
SELECT 
    p."publication_number",
    ah.value:"name"::STRING  AS "assignee_name"
FROM PATENTS.PATENTS.PUBLICATIONS p,
     LATERAL FLATTEN(input => p."assignee_harmonized") ah
WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
LIMIT 20;
```

```sql
--Description: 3) Collect the distinct publication numbers of patents assigned to DENSO CORP (with valid* filing dates)
SELECT DISTINCT
    p."publication_number"
FROM PATENTS.PATENTS.PUBLICATIONS p,
     LATERAL FLATTEN(input => p."assignee_harmonized") ah
WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
  AND p."filing_date" > 0
LIMIT 20;
```

```sql
--Description: 4) Look at the raw structure of the “citation” field for some random patents
SELECT 
    p."publication_number",
    f.value AS "one_citation_object"
FROM PATENTS.PATENTS.PUBLICATIONS p,
     LATERAL FLATTEN(input => p."citation") f
LIMIT 20;
```

```sql
--Description: 5) Extract cited-publication numbers from the citation array (backward citations)  
SELECT 
    p."publication_number"      AS "citing_publication",
    f.value:"publication_number"::STRING AS "cited_publication"
FROM PATENTS.PATENTS.PUBLICATIONS p,
     LATERAL FLATTEN(input => p."citation") f
WHERE f.value:"publication_number" IS NOT NULL
LIMIT 20;
```

```sql
--Description: 6) Identify citing publications that reference any DENSO patent (back-link to list from step 3)
WITH denso_pubs AS (
    SELECT DISTINCT
        p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
)
SELECT DISTINCT
    c."citing_publication"
FROM (
    SELECT 
        p."publication_number"      AS "citing_publication",
        f.value:"publication_number"::STRING AS "cited_publication"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."citation") f
    WHERE f.value:"publication_number" IS NOT NULL
) c
JOIN denso_pubs d
  ON c."cited_publication" = d."publication_number"
LIMIT 20;
```

```sql
--Description: 7) Retrieve the harmonized assignees of those citing publications while excluding DENSO itself
WITH citing_to_denso AS (
    /* query from step 6 without the LIMIT */
    SELECT DISTINCT
        c."citing_publication"
    FROM (
        SELECT 
            p."publication_number"      AS "citing_publication",
            f.value:"publication_number"::STRING AS "cited_publication"
        FROM PATENTS.PATENTS.PUBLICATIONS p,
             LATERAL FLATTEN(input => p."citation") f
        WHERE f.value:"publication_number" IS NOT NULL
    ) c
    JOIN (
        SELECT DISTINCT
            p."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS p,
             LATERAL FLATTEN(input => p."assignee_harmonized") ah
        WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
    ) d
      ON c."cited_publication" = d."publication_number"
)
SELECT 
    ct."citing_publication",
    ah.value:"name"::STRING AS "citing_assignee"
FROM citing_to_denso ct
JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = ct."citing_publication",
LATERAL FLATTEN(input => p."assignee_harmonized") ah
WHERE ah.value:"name"::STRING NOT ILIKE '%DENSO%'
LIMIT 20;
```

```sql
--Description: 8) Extract the first CPC code (the one marked `"first": true) for those citing publications
WITH target_citing AS (
    /* reuse the CTE from step 7 without the LIMIT */
    SELECT DISTINCT
        ct."citing_publication"
    FROM (
        SELECT 
            p."publication_number"      AS "citing_publication",
            f.value:"publication_number"::STRING AS "cited_publication"
        FROM PATENTS.PATENTS.PUBLICATIONS p,
             LATERAL FLATTEN(input => p."citation") f
        WHERE f.value:"publication_number" IS NOT NULL
    ) c
    JOIN (
        SELECT DISTINCT
            p."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS p,
             LATERAL FLATTEN(input => p."assignee_harmonized") ah
        WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
    ) d
      ON c."cited_publication" = d."publication_number"
)
SELECT 
    tc."citing_publication",
    cpc_f.value:"code"::STRING AS "first_cpc_code"
FROM target_citing tc
JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = tc."citing_publication",
LATERAL FLATTEN(input => p."cpc") cpc_f
WHERE cpc_f.value:"first"::BOOLEAN = TRUE
LIMIT 20;
```

```sql
--Description: 9) Join the first-CPC codes to the CPC definition table to obtain the full subclass title
WITH first_cpc AS (
    /* query from step 8 without the LIMIT */
    SELECT 
        tc."citing_publication",
        cpc_f.value:"code"::STRING AS "first_cpc_code"
    FROM (
        SELECT DISTINCT
            ct."citing_publication"
        FROM (
            SELECT 
                p."publication_number"      AS "citing_publication",
                f.value:"publication_number"::STRING AS "cited_publication"
            FROM PATENTS.PATENTS.PUBLICATIONS p,
                 LATERAL FLATTEN(input => p."citation") f
            WHERE f.value:"publication_number" IS NOT NULL
        ) c
        JOIN (
            SELECT DISTINCT
                p."publication_number"
            FROM PATENTS.PATENTS.PUBLICATIONS p,
                 LATERAL FLATTEN(input => p."assignee_harmonized") ah
            WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
        ) d
          ON c."cited_publication" = d."publication_number"
    ) tc
    JOIN PATENTS.PATENTS.PUBLICATIONS p
      ON p."publication_number" = tc."citing_publication",
    LATERAL FLATTEN(input => p."cpc") cpc_f
    WHERE cpc_f.value:"first"::BOOLEAN = TRUE
)
SELECT 
    fc."citing_publication",
    SUBSTR(fc."first_cpc_code", 0, 8) AS "cpc_subclass",  -- up to subclass level (e.g. H01L23)
    cd."titleFull"                     AS "cpc_title"
FROM first_cpc fc
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
       ON cd."symbol" = SUBSTR(fc."first_cpc_code", 0, 8)
LIMIT 20;
```

```sql
--Description: 10) Aggregate: number of DENSO-citing occurrences by citing-assignee & CPC title (excluding DENSO)
WITH denso_pubs AS (
    SELECT DISTINCT
        p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
      AND p."filing_date" > 0
),
citing_pairs AS (
    SELECT 
        p."publication_number"      AS "citing_publication",
        f.value:"publication_number"::STRING AS "cited_publication"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."citation") f
    WHERE f.value:"publication_number" IS NOT NULL
),
citing_to_denso AS (
    SELECT DISTINCT
        cp."citing_publication"
    FROM citing_pairs cp
    JOIN denso_pubs dp
      ON cp."cited_publication" = dp."publication_number"
),
citing_assignee AS (
    SELECT 
        ctd."citing_publication",
        ah.value:"name"::STRING AS "citing_assignee"
    FROM citing_to_denso ctd
    JOIN PATENTS.PATENTS.PUBLICATIONS p
      ON p."publication_number" = ctd."citing_publication",
    LATERAL FLATTEN(input => p."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING NOT ILIKE '%DENSO%'
),
first_cpc AS (
    SELECT 
        ca."citing_publication",
        ca."citing_assignee",
        cpcf.value:"code"::STRING AS "first_cpc_code"
    FROM citing_assignee ca
    JOIN PATENTS.PATENTS.PUBLICATIONS p
      ON p."publication_number" = ca."citing_publication",
    LATERAL FLATTEN(input => p."cpc") cpcf
    WHERE cpcf.value:"first"::BOOLEAN = TRUE
),
cpc_title AS (
    SELECT 
        fc."citing_publication",
        fc."citing_assignee",
        SUBSTR(fc."first_cpc_code", 0, 8) AS "cpc_subclass",
        cd."titleFull"                  AS "cpc_title"
    FROM first_cpc fc
    LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
           ON cd."symbol" = SUBSTR(fc."first_cpc_code", 0, 8)
)
SELECT 
    "citing_assignee",
    "cpc_title",
    COUNT(*) AS "citation_count"
FROM cpc_title
GROUP BY 
    "citing_assignee",
    "cpc_title"
ORDER BY "citation_count" DESC
LIMIT 20;
```

[Exploration]
2025-05-07 01:34:09 - Thread-27 (execute) - INFO - [Try to execute]
--Description: 1) Inspect a few publications whose (harmonized) assignee contains the string “DENSO”
SELECT 
    "publication_number",
    "assignee_harmonized",
    "filing_date"
FROM PATENTS.PATENTS.PUBLICATIONS
WHERE "assignee_harmonized" ILIKE '%DENSO%'
LIMIT 20;
[Try to execute]
2025-05-07 01:34:11 - Thread-27 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 1) Inspect a few publications whose (harmonized) assignee contains the string “DENSO”
SELECT 
    "publication_number",
    "assignee_harmonized",
    "filing_date"
FROM PATENTS.PATENTS.PUBLICATIONS
WHERE "assignee_harmonized" ILIKE '%DENSO%'
LIMIT 20;
Results:
publication_number,assignee_harmonized,filing_date
DE-102007000459-B4,"[
  {
    ""country_code"": ""JP"",
    ""name"": ""DENSO CORP""
  }
]",20070822
DE-112014004013-B4,"[
  {
    ""country_code"": ""JP"",
    ""name"": ""DENSO CORP""
  }
]",20140901
DE-102017201555-B4,"[
  {
    ""country_code"": ""JP"",
    ""name"": ""DENSO CORP""
  }
]",20170131
DE-112014001661-T5,"[
  {
    ""country_code"": ""JP"",
    ""name"": ""DENSO CORP""
  }
]",20140317
US-2005103312-A1,"[
  {
    ""country_co

[Successfully executed]
2025-05-07 01:34:11 - Thread-27 (execute) - INFO - [Try to execute]
--Description: 2) Flatten the harmonized–assignee JSON to see the exact assignee names for DENSO patents
SELECT 
    p."publication_number",
    ah.value:"name"::STRING  AS "assignee_name"
FROM PATENTS.PATENTS.PUBLICATIONS p,
     LATERAL FLATTEN(input => p."assignee_harmonized") ah
WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
LIMIT 20;
[Try to execute]
2025-05-07 01:34:11 - Thread-27 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 2) Flatten the harmonized–assignee JSON to see the exact assignee names for DENSO patents
SELECT 
    p."publication_number",
    ah.value:"name"::STRING  AS "assignee_name"
FROM PATENTS.PATENTS.PUBLICATIONS p,
     LATERAL FLATTEN(input => p."assignee_harmonized") ah
WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
LIMIT 20;
Results:
publication_number,assignee_name
US-10631034-B2,DENSO CORP
US-2005103312-A1,DENSO CORP
US-2004178870-A1,DENSO CORP
US-2006152215-A1,DENSO CORP
JP-H10209446-A,DENSO CORP
US-2769697-A,JEROME GOLDENSON
US-2003122645-A1,DENSO CORP
US-2009266335-A1,DENSO CORP
US-2007200067-A1,DENSO CORP
US-2008236929-A1,DENSO CORP
US-2015207745-A1,DENSO CORP
US-2019152298-A1,DENSO CORP
JP-S57125336-A,NIPPON DENSO CO
JP-S62171958-A,NIPPON DENSO CO
JP-H01232151-A,NIPPON DENSO CO

[Successfully executed]
2025-05-07 01:34:11 - Thread-27 (execute) - INFO - [Try to execute]
--Description: 3) Collect the distinct publication numbers of patents assigned to DENSO CORP (with valid* filing dates)
SELECT DISTINCT
    p."publication_number"
FROM PATENTS.PATENTS.PUBLICATIONS p,
     LATERAL FLATTEN(input => p."assignee_harmonized") ah
WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
  AND p."filing_date" > 0
LIMIT 20;
[Try to execute]
2025-05-07 01:34:11 - Thread-27 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 3) Collect the distinct publication numbers of patents assigned to DENSO CORP (with valid* filing dates)
SELECT DISTINCT
    p."publication_number"
FROM PATENTS.PATENTS.PUBLICATIONS p,
     LATERAL FLATTEN(input => p."assignee_harmonized") ah
WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
  AND p."filing_date" > 0
LIMIT 20;
Results:
publication_number
US-10926773-B2
JP-S63191288-A
US-2019226923-A1
US-2022404479-A1
US-2021101596-A1
US-2020408440-A1
US-10790774-B2
US-2008227599-A1
DE-102011055563-B4
JP-H09200016-A
US-5483930-A
US-2024246568-A1
JP-2008255852-A
JP-2001017168-A
JP-2009265002-A
CN-1404213-A
US-2010158316-A1
US-2016265823-A1
JP-H0861179-A
US-2007085197-A1

[Successfully executed]
2025-05-07 01:34:11 - Thread-27 (execute) - INFO - [Try to execute]
--Description: 4) Look at the raw structure of the “citation” field for some random patents
SELECT 
    p."publication_number",
    f.value AS "one_citation_object"
FROM PATENTS.PATENTS.PUBLICATIONS p,
     LATERAL FLATTEN(input => p."citation") f
LIMIT 20;
[Try to execute]
2025-05-07 01:34:12 - Thread-27 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 4) Look at the raw structure of the “citation” field for some random patents
SELECT 
    p."publication_number",
    f.value AS "one_citation_object"
FROM PATENTS.PATENTS.PUBLICATIONS p,
     LATERAL FLATTEN(input => p."citation") f
LIMIT 20;
Results:
publication_number,one_citation_object
IT-MI20100845-A1,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-1654188-A"",
  ""type"": ""YA""
}"
IT-MI20100845-A1,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-2506292-A"",
  ""type"": ""XY""
}"
IT-MI20100845-A1,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""fil

[Successfully executed]
2025-05-07 01:34:12 - Thread-27 (execute) - INFO - [Try to execute]
--Description: 5) Extract cited-publication numbers from the citation array (backward citations)  
SELECT 
    p."publication_number"      AS "citing_publication",
    f.value:"publication_number"::STRING AS "cited_publication"
FROM PATENTS.PATENTS.PUBLICATIONS p,
     LATERAL FLATTEN(input => p."citation") f
WHERE f.value:"publication_number" IS NOT NULL
LIMIT 20;
[Try to execute]
2025-05-07 01:34:13 - Thread-27 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 5) Extract cited-publication numbers from the citation array (backward citations)  
SELECT 
    p."publication_number"      AS "citing_publication",
    f.value:"publication_number"::STRING AS "cited_publication"
FROM PATENTS.PATENTS.PUBLICATIONS p,
     LATERAL FLATTEN(input => p."citation") f
WHERE f.value:"publication_number" IS NOT NULL
LIMIT 20;
Results:
citing_publication,cited_publication
IT-MI20100095-A1,US-5589376-A
IT-MI20100095-A1,
IT-MI20100095-A1,
IT-MI20100095-A1,
IT-MI20100095-A1,
IT-MI20100095-A1,
IT-MI20100095-A1,
IT-MI20100095-A1,
IT-MI20100095-A1,
IT-MI20100095-A1,
IT-MI20100095-A1,
IT-MI20121273-A1,US-3624729-A
IT-MI20121273-A1,US-3831516-A
IT-MI20121273-A1,US-4106404-A
IT-MI20121273-A1,US-4513659-A
IT-MI20121273-A1,EP-0569695-A2
IT-MI20121273-A1,US-5451415-A
IT-CR20130004-A1,WO-2004058329-A2

[Successfully executed]
2025-05-07 01:34:13 - Thread-27 (execute) - INFO - [Try to execute]
--Description: 6) Identify citing publications that reference any DENSO patent (back-link to list from step 3)
WITH denso_pubs AS (
    SELECT DISTINCT
        p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
)
SELECT DISTINCT
    c."citing_publication"
FROM (
    SELECT 
        p."publication_number"      AS "citing_publication",
        f.value:"publication_number"::STRING AS "cited_publication"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."citation") f
    WHERE f.value:"publication_number" IS NOT NULL
) c
JOIN denso_pubs d
  ON c."cited_publication" = d."publication_number"
LIMIT 20;
[Try to execute]
2025-05-07 01:34:15 - Thread-27 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 6) Identify citing publications that reference any DENSO patent (back-link to list from step 3)
WITH denso_pubs AS (
    SELECT DISTINCT
        p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
)
SELECT DISTINCT
    c."citing_publication"
FROM (
    SELECT 
        p."publication_number"      AS "citing_publication",
        f.value:"publication_number"::STRING AS "cited_publication"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."citation") f
    WHERE f.value:"publication_number" IS NOT NULL
) c
JOIN denso_pubs d
  ON c."cited_publication" = d."publication_number"
LIMIT 20;
Results:
citing_publication
US-9151260-B2
JP-2020117051-A
DE-102006000312-B4
JP-2006133447-A
US-10774689-B2
US-2009017328-A1
US-2015369515-A1
US-10616959-B2
CN-108292892-A
CN-109203994-A
US-8807647-B2

[Successfully executed]
2025-05-07 01:34:15 - Thread-27 (execute) - INFO - [Try to execute]
--Description: 7) Retrieve the harmonized assignees of those citing publications while excluding DENSO itself
WITH citing_to_denso AS (
    /* query from step 6 without the LIMIT */
    SELECT DISTINCT
        c."citing_publication"
    FROM (
        SELECT 
            p."publication_number"      AS "citing_publication",
            f.value:"publication_number"::STRING AS "cited_publication"
        FROM PATENTS.PATENTS.PUBLICATIONS p,
             LATERAL FLATTEN(input => p."citation") f
        WHERE f.value:"publication_number" IS NOT NULL
    ) c
    JOIN (
        SELECT DISTINCT
            p."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS p,
             LATERAL FLATTEN(input => p."assignee_harmonized") ah
        WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
    ) d
      ON c."cited_publication" = d."publication_number"
)
SELECT 
    ct."citing_publication",
    ah.value:"name"::STRING AS "citing_assignee"
FROM citing_to_denso ct
JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = ct."citing_publication",
LATERAL FLATTEN(input => p."assignee_harmonized") ah
WHERE ah.value:"name"::STRING NOT ILIKE '%DENSO%'
LIMIT 20;
[Try to execute]
2025-05-07 01:34:17 - Thread-27 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 7) Retrieve the harmonized assignees of those citing publications while excluding DENSO itself
WITH citing_to_denso AS (
    /* query from step 6 without the LIMIT */
    SELECT DISTINCT
        c."citing_publication"
    FROM (
        SELECT 
            p."publication_number"      AS "citing_publication",
            f.value:"publication_number"::STRING AS "cited_publication"
        FROM PATENTS.PATENTS.PUBLICATIONS p,
             LATERAL FLATTEN(input => p."citation") f
        WHERE f.value:"publication_number" IS NOT NULL
    ) c
    JOIN (
        SELECT DISTINCT
            p."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS p,
             LATERAL FLATTEN(input => p."assignee_harmonized") ah
        WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
    ) d
      ON c."cited_publication" = d."publication_number"
)
SELECT 
    ct."citing_publication",
    ah.value:"name"::STRING AS "citing_assignee"
FROM citing_to_denso ct
JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = ct."citing_publication",
LATERAL FLATTEN(input => p."assignee_harmonized") ah
WHERE ah.value:"name"::STRING NOT ILIKE '%DENSO%'
LIMIT 20;
Results:
citing_publication,citing_assignee
US-2015369515-A1,HYUNDAI MOTOR CO LTD
US-2015369515-A1,KIA MOTORS CORP
US-2009017328-A1,KABKUSHIKI KAISHA KOBE SEIKO S
CN-108292892-A,FUJI ELECTRIC CO LTD
DE-102006000312-B4,TOYOTA MOTOR CO LTD
US-10616959-B2,MAHLE INT GMBH
US-8807647-B2,SAHASHI HIDEO
US-8807647-B2,TOYOTA BOSHOKU KK
JP-2020117051-A,HONDA MOTOR CO LTD
US-9151260-B2,SUZUKI HISAO
US-9151260-B2,TOYOTA MOTOR CO LTD
CN-109203994-A,YAZAKI CORP
US-10774689-B2,MAHLE INT GMBH

[Successfully executed]
2025-05-07 01:34:17 - Thread-27 (execute) - INFO - [Try to execute]
--Description: 8) Extract the first CPC code (the one marked `"first": true) for those citing publications
WITH target_citing AS (
    /* reuse the CTE from step 7 without the LIMIT */
    SELECT DISTINCT
        ct."citing_publication"
    FROM (
        SELECT 
            p."publication_number"      AS "citing_publication",
            f.value:"publication_number"::STRING AS "cited_publication"
        FROM PATENTS.PATENTS.PUBLICATIONS p,
             LATERAL FLATTEN(input => p."citation") f
        WHERE f.value:"publication_number" IS NOT NULL
    ) c
    JOIN (
        SELECT DISTINCT
            p."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS p,
             LATERAL FLATTEN(input => p."assignee_harmonized") ah
        WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
    ) d
      ON c."cited_publication" = d."publication_number"
)
SELECT 
    tc."citing_publication",
    cpc_f.value:"code"::STRING AS "first_cpc_code"
FROM target_citing tc
JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = tc."citing_publication",
LATERAL FLATTEN(input => p."cpc") cpc_f
WHERE cpc_f.value:"first"::BOOLEAN = TRUE
LIMIT 20;
[Try to execute]
2025-05-07 01:34:17 - Thread-27 (execute) - INFO - [Error occurred]
{'status': 'error', 'error_msg': '##ERROR##000904 (42000): SQL compilation error: error line 4 at position 8\ninvalid identifier \'CT."citing_publication"\''}
[Error occurred]
2025-05-07 01:36:17 - Thread-27 (execute) - INFO - [Corrected SQL]
```sql
--Description: Find all patents that cite a DENSO-assigned patent, then show the citing publication together with its primary CPC code
-- Thinking process:
--   1. denso_pubs  – list every publication whose harmonized assignee contains “DENSO” (and has a valid filing_date).
--   2. citing_pairs – explode the citation arrays so each row is (citing, cited) publication numbers.
--   3. target_citing – keep the citing publications whose cited partner appears in denso_pubs.
--   4. final SELECT – for each target citing publication, flatten its CPC list and return only the item flagged "first": true.

WITH denso_pubs AS (
    SELECT DISTINCT
           p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
      AND p."filing_date" > 0
),
citing_pairs AS (
    SELECT
           p."publication_number"                      AS "citing_publication",
           f.value:"publication_number"::STRING        AS "cited_publication"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."citation") f
    WHERE f.value:"publication_number" IS NOT NULL
),
target_citing AS (
    SELECT DISTINCT
           cp."citing_publication"
    FROM citing_pairs cp
    JOIN denso_pubs dp
      ON cp."cited_publication" = dp."publication_number"
)
SELECT
       tc."citing_publication",
       cpc.value:"code"::STRING AS "first_cpc_code"
FROM target_citing tc
JOIN PATENTS.PATENTS.PUBLICATIONS pub
  ON pub."publication_number" = tc."citing_publication",
LATERAL FLATTEN(input => pub."cpc") cpc
WHERE cpc.value:"first"::BOOLEAN = TRUE
LIMIT 20;
```
[Corrected SQL]
2025-05-07 01:37:44 - Thread-27 (execute) - INFO - [Results for corrected sql]
citing_publication,first_cpc_code
US-2009017328-A1,B23K9/23
US-2009017328-A1,B23K35/0266
US-2009017328-A1,B23K35/0266
CN-109203994-A,B60K35/00
CN-109203994-A,B60K35/60
CN-108292892-A,H05K7/1492
CN-108292892-A,H05K7/1492
JP-2020117051-A,B60L53/18
JP-2020117051-A,B60L53/67
JP-2020117051-A,B60L53/65
US-10616959-B2,H05B3/40
US-10616959-B2,H05B3/50
US-10616959-B2,H05B3/50
US-10616959-B2,F24H3/0435
US-10774689-B2,F01K13/006
US-10774689-B2,F01K13/006

[Results for corrected sql]
2025-05-07 01:38:46 - Thread-27 (execute) - INFO - [Corrected other sqls]
```sql
--Description: 9) Produce the first-listed CPC code (flag “first” = true) for every publication that cites a DENSO-assigned patent, 
--              then join that CPC code to its full subclass title from CPC_DEFINITION.
--  Steps
--      1. denso_pubs      – all publications whose harmonized assignee contains “DENSO” and have a valid filing_date.
--      2. citing_pairs    – explode each patent’s citation array → (citing , cited).
--      3. target_citing   – the DISTINCT set of citing publications that cite at least one DENSO publication.
--      4. first_cpc       – for every target citing publication, keep the CPC entry whose JSON key "first"=true.
--      5. final SELECT    – truncate the CPC code to subclass level (first 8 chars) and attach the CPC_DEFINITION title.
WITH denso_pubs AS (
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
      AND p."filing_date" > 0
),
citing_pairs AS (
    SELECT 
        p."publication_number"                      AS "citing_publication",
        f.value:"publication_number"::STRING        AS "cited_publication"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."citation") f
    WHERE f.value:"publication_number" IS NOT NULL
),
target_citing AS (
    SELECT DISTINCT cp."citing_publication"
    FROM citing_pairs cp
    JOIN denso_pubs dp
      ON cp."cited_publication" = dp."publication_number"
),
first_cpc AS (
    SELECT 
        tc."citing_publication",
        cpc_f.value:"code"::STRING AS "first_cpc_code"
    FROM target_citing tc
    JOIN PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = tc."citing_publication",
    LATERAL FLATTEN(input => pub."cpc") cpc_f
    WHERE cpc_f.value:"first"::BOOLEAN = TRUE
)
SELECT 
    fc."citing_publication",
    SUBSTR(fc."first_cpc_code", 1, 8) AS "cpc_subclass",
    cd."titleFull"                    AS "cpc_title"
FROM first_cpc fc
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
       ON cd."symbol" = SUBSTR(fc."first_cpc_code", 1, 8)
LIMIT 20;
```

```sql
--Description: 10) Count how many times each non-DENSO assignee cites DENSO-assigned patents, grouped by the full title 
--               of the citing publication’s primary CPC subclass.
--  Pipeline mirrors the previous query with two additions:
--      • citing_assignee  – extract harmonized assignee(s) for each citing publication, excluding any containing “DENSO”.
--      • aggregation      – group by assignee name and CPC title, count occurrences.
WITH denso_pubs AS (
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
      AND p."filing_date" > 0
),
citing_pairs AS (
    SELECT 
        p."publication_number"                      AS "citing_publication",
        f.value:"publication_number"::STRING        AS "cited_publication"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."citation") f
    WHERE f.value:"publication_number" IS NOT NULL
),
target_citing AS (
    SELECT DISTINCT cp."citing_publication"
    FROM citing_pairs cp
    JOIN denso_pubs dp
      ON cp."cited_publication" = dp."publication_number"
),
citing_assignee AS (
    SELECT 
        tc."citing_publication",
        ah.value:"name"::STRING AS "citing_assignee"
    FROM target_citing tc
    JOIN PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = tc."citing_publication",
    LATERAL FLATTEN(input => pub."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING NOT ILIKE '%DENSO%'
),
first_cpc AS (
    SELECT 
        ca."citing_publication",
        ca."citing_assignee",
        cpc_f.value:"code"::STRING AS "first_cpc_code"
    FROM citing_assignee ca
    JOIN PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = ca."citing_publication",
    LATERAL FLATTEN(input => pub."cpc") cpc_f
    WHERE cpc_f.value:"first"::BOOLEAN = TRUE
),
cpc_title AS (
    SELECT 
        fc."citing_publication",
        fc."citing_assignee",
        SUBSTR(fc."first_cpc_code", 1, 8) AS "cpc_subclass"
    FROM first_cpc fc
)
SELECT 
    ct."citing_assignee",
    cd."titleFull"                       AS "cpc_title",
    COUNT(*)                             AS "citation_count"
FROM cpc_title ct
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
       ON cd."symbol" = ct."cpc_subclass"
GROUP BY 
    ct."citing_assignee",
    cd."titleFull"
ORDER BY "citation_count" DESC
LIMIT 20;
```
[Corrected other sqls]
2025-05-07 01:38:46 - Thread-27 (execute) - INFO - [Successfully corrected]
Successfully corrected. SQL:
--Description: Find all patents that cite a DENSO-assigned patent, then show the citing publication together with its primary CPC code
-- Thinking process:
--   1. denso_pubs  – list every publication whose harmonized assignee contains “DENSO” (and has a valid filing_date).
--   2. citing_pairs – explode the citation arrays so each row is (citing, cited) publication numbers.
--   3. target_citing – keep the citing publications whose cited partner appears in denso_pubs.
--   4. final SELECT – for each target citing publication, flatten its CPC list and return only the item flagged "first": true.

WITH denso_pubs AS (
    SELECT DISTINCT
           p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
      AND p."filing_date" > 0
),
citing_pairs AS (
    SELECT
           p."publication_number"                      AS "citing_publication",
           f.value:"publication_number"::STRING        AS "cited_publication"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."citation") f
    WHERE f.value:"publication_number" IS NOT NULL
),
target_citing AS (
    SELECT DISTINCT
           cp."citing_publication"
    FROM citing_pairs cp
    JOIN denso_pubs dp
      ON cp."cited_publication" = dp."publication_number"
)
SELECT
       tc."citing_publication",
       cpc.value:"code"::STRING AS "first_cpc_code"
FROM target_citing tc
JOIN PATENTS.PATENTS.PUBLICATIONS pub
  ON pub."publication_number" = tc."citing_publication",
LATERAL FLATTEN(input => pub."cpc") cpc
WHERE cpc.value:"first"::BOOLEAN = TRUE
LIMIT 20;
Results:
citing_publication,first_cpc_code
US-2009017328-A1,B23K9/23
US-2009017328-A1,B23K35/0266
US-2009017328-A1,B23K35/0266
CN-109203994-A,B60K35/00
CN-109203994-A,B60K35/60
CN-108292892-A,H05K7/1492
CN-108292892-A,H05K7/1492
JP-2020117051-A,B60L53/18
JP-2020117051-A,B60L53/67
JP-2020117051-A,B60L53/65
US-10616959-B2,H05B3/40
US-10616959-B2,H05B3/50
US-10616959-B2,H05B3/50
US-10616959-B2,F24H3/0435
US-10774689-B2,F01K13/006
US-10774689-B2,F01K13/006

[Successfully corrected]
2025-05-07 01:38:46 - Thread-27 (execute) - INFO - [Try to execute]
--Description: 9) Produce the first-listed CPC code (flag “first” = true) for every publication that cites a DENSO-assigned patent, 
--              then join that CPC code to its full subclass title from CPC_DEFINITION.
--  Steps
--      1. denso_pubs      – all publications whose harmonized assignee contains “DENSO” and have a valid filing_date.
--      2. citing_pairs    – explode each patent’s citation array → (citing , cited).
--      3. target_citing   – the DISTINCT set of citing publications that cite at least one DENSO publication.
--      4. first_cpc       – for every target citing publication, keep the CPC entry whose JSON key "first"=true.
--      5. final SELECT    – truncate the CPC code to subclass level (first 8 chars) and attach the CPC_DEFINITION title.
WITH denso_pubs AS (
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
      AND p."filing_date" > 0
),
citing_pairs AS (
    SELECT 
        p."publication_number"                      AS "citing_publication",
        f.value:"publication_number"::STRING        AS "cited_publication"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."citation") f
    WHERE f.value:"publication_number" IS NOT NULL
),
target_citing AS (
    SELECT DISTINCT cp."citing_publication"
    FROM citing_pairs cp
    JOIN denso_pubs dp
      ON cp."cited_publication" = dp."publication_number"
),
first_cpc AS (
    SELECT 
        tc."citing_publication",
        cpc_f.value:"code"::STRING AS "first_cpc_code"
    FROM target_citing tc
    JOIN PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = tc."citing_publication",
    LATERAL FLATTEN(input => pub."cpc") cpc_f
    WHERE cpc_f.value:"first"::BOOLEAN = TRUE
)
SELECT 
    fc."citing_publication",
    SUBSTR(fc."first_cpc_code", 1, 8) AS "cpc_subclass",
    cd."titleFull"                    AS "cpc_title"
FROM first_cpc fc
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
       ON cd."symbol" = SUBSTR(fc."first_cpc_code", 1, 8)
LIMIT 20
[Try to execute]
2025-05-07 01:39:47 - Thread-27 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 9) Produce the first-listed CPC code (flag “first” = true) for every publication that cites a DENSO-assigned patent, 
--              then join that CPC code to its full subclass title from CPC_DEFINITION.
--  Steps
--      1. denso_pubs      – all publications whose harmonized assignee contains “DENSO” and have a valid filing_date.
--      2. citing_pairs    – explode each patent’s citation array → (citing , cited).
--      3. target_citing   – the DISTINCT set of citing publications that cite at least one DENSO publication.
--      4. first_cpc       – for every target citing publication, keep the CPC entry whose JSON key "first"=true.
--      5. final SELECT    – truncate the CPC code to subclass level (first 8 chars) and attach the CPC_DEFINITION title.
WITH denso_pubs AS (
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
      AND p."filing_date" > 0
),
citing_pairs AS (
    SELECT 
        p."publication_number"                      AS "citing_publication",
        f.value:"publication_number"::STRING        AS "cited_publication"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."citation") f
    WHERE f.value:"publication_number" IS NOT NULL
),
target_citing AS (
    SELECT DISTINCT cp."citing_publication"
    FROM citing_pairs cp
    JOIN denso_pubs dp
      ON cp."cited_publication" = dp."publication_number"
),
first_cpc AS (
    SELECT 
        tc."citing_publication",
        cpc_f.value:"code"::STRING AS "first_cpc_code"
    FROM target_citing tc
    JOIN PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = tc."citing_publication",
    LATERAL FLATTEN(input => pub."cpc") cpc_f
    WHERE cpc_f.value:"first"::BOOLEAN = TRUE
)
SELECT 
    fc."citing_publication",
    SUBSTR(fc."first_cpc_code", 1, 8) AS "cpc_subclass",
    cd."titleFull"                    AS "cpc_title"
FROM first_cpc fc
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
       ON cd."symbol" = SUBSTR(fc."first_cpc_code", 1, 8)
LIMIT 20
Results:
citing_publication,cpc_subclass,cpc_title
US-2015369515-A1,F24H1/00,"Water heaters, e.g. boilers, continuous-flow heaters or water-storage heaters"
US-2009017328-A1,B23K9/23,Arc welding or cutting taking account of the properties of the materials to be welded
CN-108292892-A,H05K7/14,Mounting supporting structure in casing or on frame or rack
CN-108292892-A,H05K7/14,Mounting supporting structure in casing or on frame or rack
US-10774689-B2,F01K13/0,
JP-2020117051-A,B60L53/6,
US-9151260-B2,

[Successfully executed]
2025-05-07 01:39:47 - Thread-27 (execute) - INFO - [Try to execute]
--Description: 10) Count how many times each non-DENSO assignee cites DENSO-assigned patents, grouped by the full title 
--               of the citing publication’s primary CPC subclass.
--  Pipeline mirrors the previous query with two additions:
--      • citing_assignee  – extract harmonized assignee(s) for each citing publication, excluding any containing “DENSO”.
--      • aggregation      – group by assignee name and CPC title, count occurrences.
WITH denso_pubs AS (
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
      AND p."filing_date" > 0
),
citing_pairs AS (
    SELECT 
        p."publication_number"                      AS "citing_publication",
        f.value:"publication_number"::STRING        AS "cited_publication"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."citation") f
    WHERE f.value:"publication_number" IS NOT NULL
),
target_citing AS (
    SELECT DISTINCT cp."citing_publication"
    FROM citing_pairs cp
    JOIN denso_pubs dp
      ON cp."cited_publication" = dp."publication_number"
),
citing_assignee AS (
    SELECT 
        tc."citing_publication",
        ah.value:"name"::STRING AS "citing_assignee"
    FROM target_citing tc
    JOIN PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = tc."citing_publication",
    LATERAL FLATTEN(input => pub."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING NOT ILIKE '%DENSO%'
),
first_cpc AS (
    SELECT 
        ca."citing_publication",
        ca."citing_assignee",
        cpc_f.value:"code"::STRING AS "first_cpc_code"
    FROM citing_assignee ca
    JOIN PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = ca."citing_publication",
    LATERAL FLATTEN(input => pub."cpc") cpc_f
    WHERE cpc_f.value:"first"::BOOLEAN = TRUE
),
cpc_title AS (
    SELECT 
        fc."citing_publication",
        fc."citing_assignee",
        SUBSTR(fc."first_cpc_code", 1, 8) AS "cpc_subclass"
    FROM first_cpc fc
)
SELECT 
    ct."citing_assignee",
    cd."titleFull"                       AS "cpc_title",
    COUNT(*)                             AS "citation_count"
FROM cpc_title ct
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
       ON cd."symbol" = ct."cpc_subclass"
GROUP BY 
    ct."citing_assignee",
    cd."titleFull"
ORDER BY "citation_count" DESC
LIMIT 20
[Try to execute]
2025-05-07 01:40:31 - Thread-27 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 10) Count how many times each non-DENSO assignee cites DENSO-assigned patents, grouped by the full title 
--               of the citing publication’s primary CPC subclass.
--  Pipeline mirrors the previous query with two additions:
--      • citing_assignee  – extract harmonized assignee(s) for each citing publication, excluding any containing “DENSO”.
--      • aggregation      – group by assignee name and CPC title, count occurrences.
WITH denso_pubs AS (
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
      AND p."filing_date" > 0
),
citing_pairs AS (
    SELECT 
        p."publication_number"                      AS "citing_publication",
        f.value:"publication_number"::STRING        AS "cited_publication"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."citation") f
    WHERE f.value:"publication_number" IS NOT NULL
),
target_citing AS (
    SELECT DISTINCT cp."citing_publication"
    FROM citing_pairs cp
    JOIN denso_pubs dp
      ON cp."cited_publication" = dp."publication_number"
),
citing_assignee AS (
    SELECT 
        tc."citing_publication",
        ah.value:"name"::STRING AS "citing_assignee"
    FROM target_citing tc
    JOIN PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = tc."citing_publication",
    LATERAL FLATTEN(input => pub."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING NOT ILIKE '%DENSO%'
),
first_cpc AS (
    SELECT 
        ca."citing_publication",
        ca."citing_assignee",
        cpc_f.value:"code"::STRING AS "first_cpc_code"
    FROM citing_assignee ca
    JOIN PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = ca."citing_publication",
    LATERAL FLATTEN(input => pub."cpc") cpc_f
    WHERE cpc_f.value:"first"::BOOLEAN = TRUE
),
cpc_title AS (
    SELECT 
        fc."citing_publication",
        fc."citing_assignee",
        SUBSTR(fc."first_cpc_code", 1, 8) AS "cpc_subclass"
    FROM first_cpc fc
)
SELECT 
    ct."citing_assignee",
    cd."titleFull"                       AS "cpc_title",
    COUNT(*)                             AS "citation_count"
FROM cpc_title ct
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
       ON cd."symbol" = ct."cpc_subclass"
GROUP BY 
    ct."citing_assignee",
    cd."titleFull"
ORDER BY "citation_count" DESC
LIMIT 20
Results:
citing_assignee,cpc_title,citation_count
HONDA MOTOR CO LTD,,3
MAHLE INT GMBH,,3
SUZUKI HISAO,,3
TOYOTA MOTOR CO LTD,,3
TOYOTA BOSHOKU KK,"Seats specially adapted for vehicles; Arrangement or mounting of seats in vehicles the seat or part thereof being movable, e.g. adjustable the whole seat being movable height-adjustable",2
KABKUSHIKI KAISHA KOBE SEIKO S,,2
YAZAKI CORP,,2
MAHLE INT GMBH,"Heating elements having the shape of rods or tubes non-flexible heating conductor embedded in insul

[Successfully executed]
2025-05-07 01:40:31 - Thread-27 (execute) - INFO - itercount: 0
2025-05-07 01:40:31 - Thread-27 (execute) - INFO - [Self-refine]
Table full name: PATENTS.PATENTS.DISCLOSURES_13
Column name: serial_cleaned Type: TEXT
Column name: sso Type: TEXT
Column name: disclosure_event Type: TEXT
Column name: reciprocity Type: TEXT
Column name: patent_owner_harmonized Type: TEXT
Column name: record_id Type: TEXT
Column name: family_id Type: TEXT
Column name: blanket_scope Type: TEXT
Column name: copyright Type: TEXT
Column name: standard Type: TEXT
Column name: licensing_commitment Type: TEXT
Column name: committee_project Type: TEXT
Column name: sc_name Type: TEXT
Column name: blanket_type Type: TEXT
Column name: pub_cleaned Type: TEXT
Column name: third_party Type: TEXT
Column name: wg_name Type: TEXT
Column name: patent_owner_unharmonized Type: TEXT
Column name: tc_name Type: TEXT
Column name: date Type: NUMBER
Sample rows:
[{'family_id': '22549751', 'record_id': 'REC00002', 'disclosure_event': 'DE0001', 'sso': 'ANSI', 'patent_owner_harmonized': '3M', 'patent_owner_unharmonized': '3M', 'date': 19751124, 'standard': 'X3.55;X3.56', 'committee_project': '', 'tc_name': '', 'sc_name': '', 'wg_name': '', 'licensing_commitment': 'FRAND', 'copyright': '', 'blanket_type': '0', 'blanket_scope': '', 'third_party': '0', 'reciprocity': '0', 'serial_cleaned': '', 'pub_cleaned': 'US3692255'}, {'family_id': '23170520', 'record_id': 'REC00001', 'disclosure_event': 'DE0001', 'sso': 'ANSI', 'patent_owner_harmonized': '3M', 'patent_owner_unharmonized': '3M', 'date': 19751124, 'standard': 'X3.55;X3.56', 'committee_project': '', 'tc_name': '', 'sc_name': '', 'wg_name': '', 'licensing_commitment': 'FRAND', 'copyright': '', 'blanket_type': '0', 'blanket_scope': '', 'third_party': '0', 'reciprocity': '0', 'serial_cleaned': '', 'pub_cleaned': 'US3861619'}, {'family_id': '23170520', 'record_id': 'REC00006', 'disclosure_event': 'DE0003', 'sso': 'ANSI', 'patent_owner_harmonized': '3M', 'patent_owner_unharmonized': '3M', 'date': 19890711, 'standard': 'X3.55;X3.56;X3.72;X3.116;X3.127;X3.136', 'committee_project': '', 'tc_name': '', 'sc_name': '', 'wg_name': '', 'licensing_commitment': 'Specific Terms', 'copyright': '', 'blanket_type': '0', 'blanket_scope': '', 'third_party': '0', 'reciprocity': '0', 'serial_cleaned': '', 'pub_cleaned': 'US3861619'}, {'family_id': '22549751', 'record_id': 'REC00008', 'disclosure_event': 'DE0004', 'sso': 'ANSI', 'patent_owner_harmonized': '3M', 'patent_owner_unharmonized': '3M', 'date': 19890906, 'standard': '', 'committee_project': '', 'tc_name': '', 'sc_name': '', 'wg_name': '', 'licensing_commitment': 'FRAND', 'copyright': '', 'blanket_type': '2', 'blanket_scope': '', 'third_party': '0', 'reciprocity': '0', 'serial_cleaned': '', 'pub_cleaned': 'US3692255'}, {'family_id': '23418274', 'record_id': 'REC00024', 'disclosure_event': 'DE0013', 'sso': 'ANSI', 'patent_owner_harmonized': 'Agilent Technologies', 'patent_owner_unharmonized': 'Agilent Technologies', 'date': 20020606, 'standard': '1588', 'committee_project': 'IEEE', 'tc_name': '', 'sc_name': '', 'wg_name': '', 'licensing_commitment': 'FRAND', 'copyright': '', 'blanket_type': '0', 'blanket_scope': '', 'third_party': '0', 'reciprocity': '0', 'serial_cleaned': '', 'pub_cleaned': 'US5566180'}]

--------------------------------------------------
Table full name: PATENTS.PATENTS.PUBLICATIONS
Column name: examiner Type: VARIANT Description: Is this text truncated?
Column name: fterm Type: VARIANT Description: For US publications only, the description in HTML, limited to the first 9 megabytes
Column name: application_number_formatted Type: TEXT Description: Application number, formatted to the patent office format where possible.
Column name: application_number Type: TEXT Description: Patent application number (DOCDB compatible), eg: 'US-87124404-A'. This may not always be set.
Column name: grant_date Type: NUMBER Description: For US publications only, the claims in plain text
Column name: cpc Type: VARIANT Description: Two-letter language code for this text
Column name: locarno Type: VARIANT Description: Localized text
Column name: description_localized_html Type: VARIANT Description: Localized text
Column name: publication_date Type: NUMBER Description: Two-letter language code for this text
Column name: kind_code Type: TEXT Description: Kind code, indicating application, grant, search report, correction, etc. These are different for each country.
Column name: spif_publication_number Type: TEXT Description: SPIF standard (spif.group) publication number, after 2000
Column name: ipc Type: VARIANT Description: Localized text
Column name: pct_number Type: TEXT Description: PCT number for this application if it was part of a PCT filing, eg: 'PCT/EP2008/062623'.
Column name: entity_status Type: TEXT Description: The filing date.
Column name: filing_date Type: NUMBER Description: Is this text truncated?
Column name: abstract_localized Type: VARIANT Description: Localized text
Column name: description_localized Type: VARIANT Description: The publication abstracts in different languages
Column name: assignee Type: VARIANT Description: Localized text
Column name: citation Type: VARIANT Description: Two-letter language code for this text
Column name: fi Type: VARIANT Description: Is this text truncated?
Column name: claims_localized_html Type: VARIANT Description: Is this text truncated?
Column name: inventor_harmonized Type: VARIANT Description: For US publications only, the claims in HTML
Column name: inventor Type: VARIANT Description: Is this text truncated?
Column name: claims_localized Type: VARIANT Description: Two-letter language code for this text
Column name: priority_date Type: NUMBER Description: Localized text
Column name: application_kind Type: TEXT Description: High-level kind of the application: A=patent; U=utility; P=provision; W= PCT; F=design; T=translation.
Column name: priority_claim Type: VARIANT Description: Two-letter language code for this text
Column name: assignee_harmonized Type: VARIANT Description: Two-letter language code for this text
Column name: title_localized Type: VARIANT Description: The publication titles in different languages
Column name: art_unit Type: TEXT Description: The grant date, or 0 if not granted.
Column name: child Type: VARIANT Description: The publication date.
Column name: family_id Type: TEXT Description: Family ID (simple family). Grouping on family ID will return all publications associated with a simple patent family (all publications share the same priority claims).
Column name: spif_application_number Type: TEXT Description: SPIF standard (spif.group) application number, after 2000
Column name: uspc Type: VARIANT Description: For US publications only, the description in plain text, limited to the first 9 megabytes
Column name: publication_number Type: TEXT Description: Patent publication number (DOCDB compatible), eg: 'US-7650331-B1'
Column name: country_code Type: TEXT Description: Country code, eg: 'US', 'EP', etc
Column name: parent Type: VARIANT Description: Is this text truncated?
Sample rows:
[{'publication_number': 'DE-69611147-T2', 'application_number': 'DE-69611147-T', 'country_code': 'DE', 'kind_code': 'T2', 'application_kind': 'T', 'application_number_formatted': 'DE1996611147', 'pct_number': '', 'family_id': '9483724', 'spif_publication_number': '', 'spif_application_number': '', 'title_localized': '[\n  {\n    "language": "de",\n    "text": "Schloss vom Typ eines entkuppelbaren Rotors",\n    "truncated": false\n  }\n]', 'abstract_localized': '[]', 'claims_localized': '[]', 'claims_localized_html': '[]', 'description_localized': '[]', 'description_localized_html': '[]', 'publication_date': 20010621, 'filing_date': 19961015, 'grant_date': 20010621, 'priority_date': 19951018, 'priority_claim': '[\n  {\n    "application_number": "FR-9512326-A",\n    "category": "",\n    "filing_date": 19951018,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  }\n]', 'inventor': '[\n  "MENAGER, CHRISTOPHE",\n  "CANARD, LOUIS",\n  "CADOUOT, PATRICK",\n  "GOURDIN, DOMINIQUE"\n]', 'inventor_harmonized': '[\n  {\n    "country_code": "FR",\n    "name": "MENAGER CHRISTOPHE"\n  },\n  {\n    "country_code": "FR",\n    "name": "CANARD LOUIS"\n  },\n  {\n    "country_code": "FR",\n    "name": "CADOUOT PATRICK"\n  },\n  {\n    "country_code": "FR",\n    "name": "GOURDIN DOMINIQUE"\n  }\n]', 'assignee': '[\n  "Valeo Securite Habitacle, Creteil Cedex"\n]', 'assignee_harmonized': '[\n  {\n    "country_code": "FR",\n    "name": "VALEO SECURITE HABITACLE"\n  }\n]', 'examiner': '[]', 'uspc': '[]', 'ipc': '[\n  {\n    "code": "E05B17/04",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "E05B17/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  }\n]', 'cpc': '[\n  {\n    "code": "E05B77/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "E05B17/0058",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  }\n]', 'fi': '[]', 'fterm': '[]', 'locarno': '[]', 'citation': '[]', 'parent': '[]', 'child': '[]', 'entity_status': '', 'art_unit': ''}, {'publication_number': 'DE-69630331-T2', 'application_number': 'DE-69630331-T', 'country_code': 'DE', 'kind_code': 'T2', 'application_kind': 'T', 'application_number_formatted': 'DE1996630331', 'pct_number': '', 'family_id': '23689246', 'spif_publication_number': '', 'spif_application_number': '', 'title_localized': '[\n  {\n    "language": "de",\n    "text": "Verfahren zur gesicherten Sitzungsschlüsselerzeugung und zur Authentifizierung",\n    "truncated": false\n  }\n]', 'abstract_localized': '[]', 'claims_localized': '[]', 'claims_localized_html': '[]', 'description_localized': '[]', 'description_localized_html': '[]', 'publication_date': 20040729, 'filing_date': 19960416, 'grant_date': 20040729, 'priority_date': 19950421, 'priority_claim': '[\n  {\n    "application_number": "US-42609095-A",\n    "category": "",\n    "filing_date": 19950421,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  }\n]', 'inventor': '[\n  "VANSTONE SCOTT .A, WATERLOO",\n  "MENEZES ALFRED JOHN, AUBURN",\n  "MINGHUA QU,"\n]', 'inventor_harmonized': '[\n  {\n    "country_code": "CA",\n    "name": "VANSTONE SCOTT A WATERLOO"\n  },\n  {\n    "country_code": "US",\n    "name": "MENEZES ALFRED JOHN AUBURN"\n  },\n  {\n    "country_code": "CA",\n    "name": "MINGHUA QU"\n  }\n]', 'assignee': '[\n  "Certicom Corp., Mississauga"\n]', 'assignee_harmonized': '[\n  {\n    "country_code": "CA",\n    "name": "CERTICOM CORP"\n  }\n]', 'examiner': '[]', 'uspc': '[]', 'ipc': '[\n  {\n    "code": "H04L9/08",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G06F7/72",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  }\n]', 'cpc': '[\n  {\n    "code": "G06F7/725",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "H04L9/0844",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "H04L9/0838",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "H04L9/0844",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G06F7/725",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  }\n]', 'fi': '[]', 'fterm': '[]', 'locarno': '[]', 'citation': '[]', 'parent': '[]', 'child': '[]', 'entity_status': '', 'art_unit': ''}, {'publication_number': 'DE-69636755-T2', 'application_number': 'DE-69636755-T', 'country_code': 'DE', 'kind_code': 'T2', 'application_kind': 'T', 'application_number_formatted': 'DE1996636755', 'pct_number': '', 'family_id': '8224764', 'spif_publication_number': '', 'spif_application_number': '', 'title_localized': '[\n  {\n    "language": "de",\n    "text": "Immortalisierte menschliche Epithelzell-Linie",\n    "truncated": false\n  }\n]', 'abstract_localized': '[\n  {\n    "language": "en",\n    "text": "Immortalised human corneal epithelial cell line, comprises cells of the cell line which are capable of stratification and expressing metabolic markers specific for nonimmortalised human epithelial cells, differentiation markers specific for nonimmortalised human corneal epithelial cells and markers specific for an inflammatory reaction.",\n    "truncated": false\n  }\n]', 'claims_localized': '[]', 'claims_localized_html': '[]', 'description_localized': '[]', 'description_localized_html': '[]', 'publication_date': 20071011, 'filing_date': 19961224, 'grant_date': 20071011, 'priority_date': 19961224, 'priority_claim': '[\n  {\n    "application_number": "EP-96203707-A",\n    "category": "",\n    "filing_date": 19961224,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  }\n]', 'inventor': '[\n  "OFFORD CAVIN, ELIZABETH",\n  "TROMVOUKIS, YVONNE",\n  "PFEIFER, ANDREA M.A.",\n  "SHARIF, NAJ"\n]', 'inventor_harmonized': '[\n  {\n    "country_code": "CH",\n    "name": "OFFORD CAVIN ELIZABETH"\n  },\n  {\n    "country_code": "CH",\n    "name": "TROMVOUKIS YVONNE"\n  },\n  {\n    "country_code": "CH",\n    "name": "PFEIFER ANDREA M A"\n  },\n  {\n    "country_code": "US",\n    "name": "SHARIF NAJ"\n  }\n]', 'assignee': '[\n  "Société des Produits Nestlé S.A."\n]', 'assignee_harmonized': '[\n  {\n    "country_code": "CH",\n    "name": "NESTLE SA"\n  }\n]', 'examiner': '[]', 'uspc': '[]', 'ipc': '[\n  {\n    "code": "C12N5/10",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N33/50",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12R1/91",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "C12N15/09",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12N5/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "A61K35/44",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N33/48",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12Q1/68",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12N5/071",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  }\n]', 'cpc': '[\n  {\n    "code": "C12N2503/02",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "C12N5/0621",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12N2503/02",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "C12N2510/04",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "C12N5/0621",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12N2510/04",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  }\n]', 'fi': '[]', 'fterm': '[]', 'locarno': '[]', 'citation': '[]', 'parent': '[]', 'child': '[]', 'entity_status': '', 'art_unit': ''}, {'publication_number': 'DE-69728658-T2', 'application_number': 'DE-69728658-T', 'country_code': 'DE', 'kind_code': 'T2', 'application_kind': 'T', 'application_number_formatted': 'DE1997628658', 'pct_number': '', 'family_id': '24437397', 'spif_publication_number': '', 'spif_application_number': '', 'title_localized': '[\n  {\n    "language": "de",\n    "text": "Lithographische dünne filmstruktur und diese enthaltende druckplatte",\n    "truncated": false\n  }\n]', 'abstract_localized': '[\n  {\n    "language": "en",\n    "text": "A lithographic laser imageable thin film structure comprising a substrate having first and second surfaces. A vacuum-deposited metal layer is carried by the first surface of the substrate. A layer of semiconductor material is adhered to and overlies the metal layer. The metal layer and the semiconductor material have thicknesses which are selected to maximize absorption of laser energy impinging on the same.",\n    "truncated": false\n  }\n]', 'claims_localized': '[]', 'claims_localized_html': '[]', 'description_localized': '[]', 'description_localized_html': '[]', 'publication_date': 20040812, 'filing_date': 19970115, 'grant_date': 20040812, 'priority_date': 19960229, 'priority_claim': '[\n  {\n    "application_number": "US-9700408-W",\n    "category": "",\n    "filing_date": 19970115,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  },\n  {\n    "application_number": "US-60864696-A",\n    "category": "",\n    "filing_date": 19960229,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  }\n]', 'inventor': '[\n  "FISHER, P.",\n  "PHILLIPS, W.",\n  "DAVIS, F.",\n  "LEGALLEE, CHARLOTTE"\n]', 'inventor_harmonized': '[\n  {\n    "country_code": "US",\n    "name": "FISHER P"\n  },\n  {\n    "country_code": "US",\n    "name": "PHILLIPS W"\n  },\n  {\n    "country_code": "US",\n    "name": "DAVIS F"\n  },\n  {\n    "country_code": "US",\n    "name": "LEGALLEE CHARLOTTE"\n  }\n]', 'assignee': '[\n  "Presstek, Inc."\n]', 'assignee_harmonized': '[\n  {\n    "country_code": "US",\n    "name": "PRESSTEK INC"\n  }\n]', 'examiner': '[]', 'uspc': '[]', 'ipc': '[\n  {\n    "code": "B32B15/04",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B41C1/10",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B41N1/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B41N1/14",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B27/20",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B7/02",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  }\n]', 'cpc': '[\n  {\n    "code": "B32B15/04",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12674",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B32B27/20",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/31678",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12458",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/31678",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12458",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B32B15/20",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/31504",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B41N1/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B15/09",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B2367/00",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B32B27/20",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12493",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B32B15/043",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B27/36",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B27/08",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B15/04",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12493",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12674",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B41C1/1033",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B41N1/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12528",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/31504",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B41C1/1033",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B32B2311/24",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12528",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  }\n]', 'fi': '[]', 'fterm': '[]', 'locarno': '[]', 'citation': '[]', 'parent': '[]', 'child': '[]', 'entity_status': '', 'art_unit': ''}, {'publication_number': 'DE-69807539-T2', 'application_number': 'DE-69807539-T', 'country_code': 'DE', 'kind_code': 'T2', 'application_kind': 'T', 'application_number_formatted': 'DE1998607539', 'pct_number': '', 'family_id': '11877005', 'spif_publication_number': '', 'spif_application_number': '', 'title_localized': '[\n  {\n    "language": "de",\n    "text": "Automatisches Analysegerät",\n    "truncated": false\n  }\n]', 'abstract_localized': '[]', 'claims_localized': '[]', 'claims_localized_html': '[]', 'description_localized': '[]', 'description_localized_html': '[]', 'publication_date': 20030116, 'filing_date': 19980120, 'grant_date': 20030116, 'priority_date': 19970129, 'priority_claim': '[\n  {\n    "application_number": "JP-1501397-A",\n    "category": "",\n    "filing_date": 19970129,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  }\n]', 'inventor': '[\n  "HANAWA, MASAAKI",\n  "MITSUMAKI, HIROSHI",\n  "OHISHI, TADASHI",\n  "KAI, SUSUMU",\n  "WATANABE, HIROSHI"\n]', 'inventor_harmonized': '[\n  {\n    "country_code": "JP",\n    "name": "HANAWA MASAAKI"\n  },\n  {\n    "country_code": "JP",\n    "name": "MITSUMAKI HIROSHI"\n  },\n  {\n    "country_code": "JP",\n    "name": "OHISHI TADASHI"\n  },\n  {\n    "country_code": "JP",\n    "name": "KAI SUSUMU"\n  },\n  {\n    "country_code": "JP",\n    "name": "WATANABE HIROSHI"\n  }\n]', 'assignee': '[\n  "Hitachi, Ltd."\n]', 'assignee_harmonized': '[\n  {\n    "country_code": "JP",\n    "name": "HITACHI LTD"\n  }\n]', 'examiner': '[]', 'uspc': '[]', 'ipc': '[\n  {\n    "code": "G01N35/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N35/02",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N35/04",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  }\n]', 'cpc': '[\n  {\n    "code": "Y10T436/115831",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/114165",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/0465",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N35/026",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/0467",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/113332",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/114165",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N35/00603",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/11",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/00326",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/0467",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N35/00603",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/00326",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/0465",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N35/026",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/11",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/113332",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/115831",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  }\n]', 'fi': '[]', 'fterm': '[]', 'locarno': '[]', 'citation': '[]', 'parent': '[]', 'child': '[]', 'entity_status': '', 'art_unit': ''}]

--------------------------------------------------
Table full name: PATENTS.PATENTS.CPC_DEFINITION
Column name: status Type: TEXT
Column name: precedenceLimitingReferences Type: VARIANT
Column name: rules Type: VARIANT
Column name: childGroups Type: VARIANT
Column name: scopeLimitingReferences Type: VARIANT
Column name: level Type: FLOAT
Column name: titlePart Type: VARIANT
Column name: residualReferences Type: VARIANT
Column name: definition Type: VARIANT
Column name: breakdownCode Type: BOOLEAN
Column name: limitingReferences Type: VARIANT
Column name: glossary Type: VARIANT
Column name: applicationReferences Type: VARIANT
Column name: notAllocatable Type: BOOLEAN
Column name: titleFull Type: TEXT
Column name: dateRevised Type: FLOAT
Column name: informativeReferences Type: VARIANT
Column name: symbol Type: TEXT
Column name: synonyms Type: VARIANT
Column name: children Type: VARIANT
Column name: parents Type: VARIANT
Column name: ipcConcordant Type: TEXT
Sample rows:
[{'applicationReferences': '[]', 'breakdownCode': True, 'childGroups': '[]', 'children': '[]', 'dateRevised': 20130101.0, 'definition': '[]', 'glossary': '[]', 'informativeReferences': '[]', 'ipcConcordant': 'CPCONLY', 'level': 9.0, 'limitingReferences': '[]', 'notAllocatable': False, 'parents': '[\n  "A01K2227/10",\n  "A01K2227/00",\n  "A01K",\n  "A01",\n  "A"\n]', 'precedenceLimitingReferences': '[]', 'residualReferences': '[]', 'rules': '[]', 'scopeLimitingReferences': '[]', 'status': 'published', 'symbol': 'A01K2227/108', 'synonyms': '[]', 'titleFull': 'Swine', 'titlePart': '[\n  "Swine"\n]'}, {'applicationReferences': '[]', 'breakdownCode': True, 'childGroups': '[]', 'children': '[]', 'dateRevised': 20130101.0, 'definition': '[]', 'glossary': '[]', 'informativeReferences': '[]', 'ipcConcordant': 'CPCONLY', 'level': 9.0, 'limitingReferences': '[]', 'notAllocatable': False, 'parents': '[\n  "A01K2227/10",\n  "A01K2227/00",\n  "A01K",\n  "A01",\n  "A"\n]', 'precedenceLimitingReferences': '[]', 'residualReferences': '[]', 'rules': '[]', 'scopeLimitingReferences': '[]', 'status': 'published', 'symbol': 'A01K2227/105', 'synonyms': '[]', 'titleFull': 'Murine', 'titlePart': '[\n  "Murine"\n]'}, {'applicationReferences': '[]', 'breakdownCode': True, 'childGroups': '[]', 'children': '[]', 'dateRevised': 20130101.0, 'definition': '[]', 'glossary': '[]', 'informativeReferences': '[]', 'ipcConcordant': 'CPCONLY', 'level': 9.0, 'limitingReferences': '[]', 'notAllocatable': False, 'parents': '[\n  "A01K2227/10",\n  "A01K2227/00",\n  "A01K",\n  "A01",\n  "A"\n]', 'precedenceLimitingReferences': '[]', 'residualReferences': '[]', 'rules': '[]', 'scopeLimitingReferences': '[]', 'status': 'published', 'symbol': 'A01K2227/107', 'synonyms': '[]', 'titleFull': 'Rabbit', 'titlePart': '[\n  "Rabbit"\n]'}, {'applicationReferences': '[]', 'breakdownCode': True, 'childGroups': '[]', 'children': '[]', 'dateRevised': 20130101.0, 'definition': '[]', 'glossary': '[]', 'informativeReferences': '[]', 'ipcConcordant': 'CPCONLY', 'level': 9.0, 'limitingReferences': '[]', 'notAllocatable': False, 'parents': '[\n  "A01K2267/02",\n  "A01K2267/00",\n  "A01K",\n  "A01",\n  "A"\n]', 'precedenceLimitingReferences': '[]', 'residualReferences': '[]', 'rules': '[]', 'scopeLimitingReferences': '[]', 'status': 'published', 'symbol': 'A01K2267/025', 'synonyms': '[]', 'titleFull': 'Animal producing cells or organs for transplantation', 'titlePart': '[\n  "Animal producing cells or organs for transplantation"\n]'}, {'applicationReferences': '[]', 'breakdownCode': True, 'childGroups': '[]', 'children': '[\n  "A01K2267/0312",\n  "A01K2267/0318",\n  "A01K2267/0325"\n]', 'dateRevised': 20130101.0, 'definition': '[]', 'glossary': '[]', 'informativeReferences': '[]', 'ipcConcordant': 'CPCONLY', 'level': 9.0, 'limitingReferences': '[]', 'notAllocatable': False, 'parents': '[\n  "A01K2267/03",\n  "A01K2267/00",\n  "A01K",\n  "A01",\n  "A"\n]', 'precedenceLimitingReferences': '[]', 'residualReferences': '[]', 'rules': '[]', 'scopeLimitingReferences': '[]', 'status': 'published', 'symbol': 'A01K2267/0306', 'synonyms': '[]', 'titleFull': 'Animal model for genetic diseases', 'titlePart': '[\n  "Animal model for genetic diseases"\n]'}]

--------------------------------------------------
External knowledge that might be helpful: 
### IPC Codes: Handling Main IPC Code Selection

When dealing with the `ipc` field in the `patents-public-data.patents.publications` dataset, it is important to understand the structure of this field, especially the subfield `first`. This subfield is a boolean that indicates whether a given IPC code is the main code for the publication number in question. This is crucial because each patent publication can be associated with multiple IPC codes, signifying the various aspects of the technology covered by the patent.

However, not every publication in the dataset has a designated main IPC code. This lack of a clearly identified main IPC code complicates the process of determining the most relevant IPC code for each publication, as selecting a single IPC code from multiple possibilities without clear prioritization can lead to inconsistent or skewed analyses.

This approach ensures a more consistent and representative selection of IPC codes across the dataset, facilitating more accurate and meaningful analysis of patent trends and classifications. By focusing on the most frequently occurring 4-digit IPC code, the view helps overcome the limitations posed by the absence of a designated main IPC code, thereby enhancing the reliability of patent-related studies and insights derived from this data.

Here is an example

```
SELECT 
    t1.publication_number, 
    SUBSTR(ipc_u.code, 0, 4) as ipc4, 
    COUNT(
    SUBSTR(ipc_u.code, 0, 4)
    ) as ipc4_count 
FROM 
    `patents-public-data.patents.publications` t1, 
    UNNEST(ipc) AS ipc_u 
GROUP BY 
    t1.publication_number, 
    ipc4

```



# Text Embeddings (Similarity)

Patent documents are rich with textual data. In fact, most of the information contained in a patent document is text. This includes the `abstract_localized`, `description_localized`, and `claims_localized`. Textual data can be a powerful tool to analyze and compare patent scope and content across patents. However, before being able to use textual data, it needs to be vectorized or transformed into text embeddings that can be used by machine learning models. Therefore, creating text embeddings from the textual data of patents is necessary to compare patent contents. Technically speaking, running an NLP algorithm that creates embeddings for all U.S. patents is computationally difficult.

Nevertheless, Google runs their own machine learning algorithm which transforms patent text metadata into text embeddings which they report in `patents-public-data.google_patents_research.publications` table. The textual embeddings of one patent, without any knowledge on the algorithm being used to create them, are meaningless on their own. However, the embeddings are powerful when it comes to comparing textual content of two or more patents. Embeddings can be used to calculate a similarity score between any two patents. This similarity score is calculated by applying the dot product of the embeddings vector of the patents, as shown below:

The similarity \( \text{Similarty}_{i,k} \) between two patents \( i \) and \( k \) is calculated as the dot product of their embedding vectors:

\[
\text{Similarty}_{i,k} = \mathbf{v}_i \cdot \mathbf{v}_k
\]

where

\[
\mathbf{v}_i = [v_{i1}, v_{i2}, v_{i3}, \ldots, v_{iN}]
\]
and
\[
\mathbf{v}_k = [v_{k1}, v_{k2}, v_{k3}, \ldots, v_{kN}]
\]

are the embedding vectors for patents \( i \) and \( k \) respectively. The higher the dot product, the more similar the patents.





# Originality (Trajtenberg)

One of the most important measures of a patent is "basicness". The aspects of basicness are tough to measure. Nevertheless, some literature finds that important aspects of these measures are embodied in the relationship between the invention and the technological predcessors and successors it is connected to through, for example, patent citations. We can thus use patent citations to construct measures that identify basicness and appropriability. Trajtenberg et al. 1997 provide a number of these measures. They distinguish between:

1. Forward-looking measures: measures that are derived from the relationship between an invention and subsequent technologies that build upon it. These measures are thus constructed from the forward citations. One example of a forward-looking basicness measure they provide is Generality, which is calculated as:

\[
\text{GENERALITY}_i = 1 - \sum_{k=1}^{N_i} \left( \frac{\text{NCITING}_{G_k}}{\text{NCITING}_i} \right)
\]


2. Backward-looking measures: measures that are derived from the relationship between a given patent and the body of knowledge that preceded it. These measure are thus constructed from the backward citations. One example of a backward-looking basicness measure they provide is Orginality, which is calculated as:

\[
\text{ORIGINALITY}_i = 1 - \sum_{k=1}^{N_i} \left( \frac{\text{NCITED}_{i,k}}{\text{NCITED}_i} \right)
\]

With **NCITING** and **NCITED** defined as the number of patents citing the focal patent and the number of patents cited by the focal patent, respectively. Index `i` corresponds to the focal patent considered, and `k` is the index of patent classes. For example, **NCITED_2,3** refers to the number of patents in patent class 3 and cited by our focal patent 2.


The table structure information is ({database name: {schema name: [table name]}}): 
{'PATENTS': {'PATENTS': ['DISCLOSURES_13', 'PUBLICATIONS', 'CPC_DEFINITION']}}

Some few-shot examples after column exploration may be helpful:
Query:
--Description: 1) Inspect a few publications whose (harmonized) assignee contains the string “DENSO”
SELECT 
    "publication_number",
    "assignee_harmonized",
    "filing_date"
FROM PATENTS.PATENTS.PUBLICATIONS
WHERE "assignee_harmonized" ILIKE '%DENSO%'
LIMIT 20;
Answer:
publication_number,assignee_harmonized,filing_date
DE-102007000459-B4,"[
  {
    ""country_code"": ""JP"",
    ""name"": ""DENSO CORP""
  }
]",20070822
DE-112014004013-B4,"[
  {
    ""country_code"": ""JP"",
    ""name"": ""DENSO CORP""
  }
]",20140901
DE-102017201555-B4,"[
  {
    ""country_code"": ""JP"",
    ""name"": ""DENSO CORP""
  }
]",20170131
DE-112014001661-T5,"[
  {
    ""country_code"": ""JP"",
    ""name"": ""DENSO CORP""
  }
]",20140317
US-2005103312-A1,"[
  {
    ""country_co
Query:
--Description: 2) Flatten the harmonized–assignee JSON to see the exact assignee names for DENSO patents
SELECT 
    p."publication_number",
    ah.value:"name"::STRING  AS "assignee_name"
FROM PATENTS.PATENTS.PUBLICATIONS p,
     LATERAL FLATTEN(input => p."assignee_harmonized") ah
WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
LIMIT 20;
Answer:
publication_number,assignee_name
US-10631034-B2,DENSO CORP
US-2005103312-A1,DENSO CORP
US-2004178870-A1,DENSO CORP
US-2006152215-A1,DENSO CORP
JP-H10209446-A,DENSO CORP
US-2769697-A,JEROME GOLDENSON
US-2003122645-A1,DENSO CORP
US-2009266335-A1,DENSO CORP
US-2007200067-A1,DENSO CORP
US-2008236929-A1,DENSO CORP
US-2015207745-A1,DENSO CORP
US-2019152298-A1,DENSO CORP
JP-S57125336-A,NIPPON DENSO CO
JP-S62171958-A,NIPPON DENSO CO
JP-H01232151-A,NIPPON DENSO CO
Query:
--Description: 3) Collect the distinct publication numbers of patents assigned to DENSO CORP (with valid* filing dates)
SELECT DISTINCT
    p."publication_number"
FROM PATENTS.PATENTS.PUBLICATIONS p,
     LATERAL FLATTEN(input => p."assignee_harmonized") ah
WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
  AND p."filing_date" > 0
LIMIT 20;
Answer:
publication_number
US-10926773-B2
JP-S63191288-A
US-2019226923-A1
US-2022404479-A1
US-2021101596-A1
US-2020408440-A1
US-10790774-B2
US-2008227599-A1
DE-102011055563-B4
JP-H09200016-A
US-5483930-A
US-2024246568-A1
JP-2008255852-A
JP-2001017168-A
JP-2009265002-A
CN-1404213-A
US-2010158316-A1
US-2016265823-A1
JP-H0861179-A
US-2007085197-A1
Query:
--Description: 4) Look at the raw structure of the “citation” field for some random patents
SELECT 
    p."publication_number",
    f.value AS "one_citation_object"
FROM PATENTS.PATENTS.PUBLICATIONS p,
     LATERAL FLATTEN(input => p."citation") f
LIMIT 20;
Answer:
publication_number,one_citation_object
IT-MI20100845-A1,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-1654188-A"",
  ""type"": ""YA""
}"
IT-MI20100845-A1,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-2506292-A"",
  ""type"": ""XY""
}"
IT-MI20100845-A1,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""fil
Query:
--Description: 5) Extract cited-publication numbers from the citation array (backward citations)  
SELECT 
    p."publication_number"      AS "citing_publication",
    f.value:"publication_number"::STRING AS "cited_publication"
FROM PATENTS.PATENTS.PUBLICATIONS p,
     LATERAL FLATTEN(input => p."citation") f
WHERE f.value:"publication_number" IS NOT NULL
LIMIT 20;
Answer:
citing_publication,cited_publication
IT-MI20100095-A1,US-5589376-A
IT-MI20100095-A1,
IT-MI20100095-A1,
IT-MI20100095-A1,
IT-MI20100095-A1,
IT-MI20100095-A1,
IT-MI20100095-A1,
IT-MI20100095-A1,
IT-MI20100095-A1,
IT-MI20100095-A1,
IT-MI20100095-A1,
IT-MI20121273-A1,US-3624729-A
IT-MI20121273-A1,US-3831516-A
IT-MI20121273-A1,US-4106404-A
IT-MI20121273-A1,US-4513659-A
IT-MI20121273-A1,EP-0569695-A2
IT-MI20121273-A1,US-5451415-A
IT-CR20130004-A1,WO-2004058329-A2
Query:
--Description: 6) Identify citing publications that reference any DENSO patent (back-link to list from step 3)
WITH denso_pubs AS (
    SELECT DISTINCT
        p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
)
SELECT DISTINCT
    c."citing_publication"
FROM (
    SELECT 
        p."publication_number"      AS "citing_publication",
        f.value:"publication_number"::STRING AS "cited_publication"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."citation") f
    WHERE f.value:"publication_number" IS NOT NULL
) c
JOIN denso_pubs d
  ON c."cited_publication" = d."publication_number"
LIMIT 20;
Answer:
citing_publication
US-9151260-B2
JP-2020117051-A
DE-102006000312-B4
JP-2006133447-A
US-10774689-B2
US-2009017328-A1
US-2015369515-A1
US-10616959-B2
CN-108292892-A
CN-109203994-A
US-8807647-B2
Query:
--Description: 7) Retrieve the harmonized assignees of those citing publications while excluding DENSO itself
WITH citing_to_denso AS (
    /* query from step 6 without the LIMIT */
    SELECT DISTINCT
        c."citing_publication"
    FROM (
        SELECT 
            p."publication_number"      AS "citing_publication",
            f.value:"publication_number"::STRING AS "cited_publication"
        FROM PATENTS.PATENTS.PUBLICATIONS p,
             LATERAL FLATTEN(input => p."citation") f
        WHERE f.value:"publication_number" IS NOT NULL
    ) c
    JOIN (
        SELECT DISTINCT
            p."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS p,
             LATERAL FLATTEN(input => p."assignee_harmonized") ah
        WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
    ) d
      ON c."cited_publication" = d."publication_number"
)
SELECT 
    ct."citing_publication",
    ah.value:"name"::STRING AS "citing_assignee"
FROM citing_to_denso ct
JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = ct."citing_publication",
LATERAL FLATTEN(input => p."assignee_harmonized") ah
WHERE ah.value:"name"::STRING NOT ILIKE '%DENSO%'
LIMIT 20;
Answer:
citing_publication,citing_assignee
US-2015369515-A1,HYUNDAI MOTOR CO LTD
US-2015369515-A1,KIA MOTORS CORP
US-2009017328-A1,KABKUSHIKI KAISHA KOBE SEIKO S
CN-108292892-A,FUJI ELECTRIC CO LTD
DE-102006000312-B4,TOYOTA MOTOR CO LTD
US-10616959-B2,MAHLE INT GMBH
US-8807647-B2,SAHASHI HIDEO
US-8807647-B2,TOYOTA BOSHOKU KK
JP-2020117051-A,HONDA MOTOR CO LTD
US-9151260-B2,SUZUKI HISAO
US-9151260-B2,TOYOTA MOTOR CO LTD
CN-109203994-A,YAZAKI CORP
US-10774689-B2,MAHLE INT GMBH
Query:
--Description: 9) Produce the first-listed CPC code (flag “first” = true) for every publication that cites a DENSO-assigned patent, 
--              then join that CPC code to its full subclass title from CPC_DEFINITION.
--  Steps
--      1. denso_pubs      – all publications whose harmonized assignee contains “DENSO” and have a valid filing_date.
--      2. citing_pairs    – explode each patent’s citation array → (citing , cited).
--      3. target_citing   – the DISTINCT set of citing publications that cite at least one DENSO publication.
--      4. first_cpc       – for every target citing publication, keep the CPC entry whose JSON key "first"=true.
--      5. final SELECT    – truncate the CPC code to subclass level (first 8 chars) and attach the CPC_DEFINITION title.
WITH denso_pubs AS (
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
      AND p."filing_date" > 0
),
citing_pairs AS (
    SELECT 
        p."publication_number"                      AS "citing_publication",
        f.value:"publication_number"::STRING        AS "cited_publication"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."citation") f
    WHERE f.value:"publication_number" IS NOT NULL
),
target_citing AS (
    SELECT DISTINCT cp."citing_publication"
    FROM citing_pairs cp
    JOIN denso_pubs dp
      ON cp."cited_publication" = dp."publication_number"
),
first_cpc AS (
    SELECT 
        tc."citing_publication",
        cpc_f.value:"code"::STRING AS "first_cpc_code"
    FROM target_citing tc
    JOIN PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = tc."citing_publication",
    LATERAL FLATTEN(input => pub."cpc") cpc_f
    WHERE cpc_f.value:"first"::BOOLEAN = TRUE
)
SELECT 
    fc."citing_publication",
    SUBSTR(fc."first_cpc_code", 1, 8) AS "cpc_subclass",
    cd."titleFull"                    AS "cpc_title"
FROM first_cpc fc
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
       ON cd."symbol" = SUBSTR(fc."first_cpc_code", 1, 8)
LIMIT 20
Answer:
citing_publication,cpc_subclass,cpc_title
US-2015369515-A1,F24H1/00,"Water heaters, e.g. boilers, continuous-flow heaters or water-storage heaters"
US-2009017328-A1,B23K9/23,Arc welding or cutting taking account of the properties of the materials to be welded
CN-108292892-A,H05K7/14,Mounting supporting structure in casing or on frame or rack
CN-108292892-A,H05K7/14,Mounting supporting structure in casing or on frame or rack
US-10774689-B2,F01K13/0,
JP-2020117051-A,B60L53/6,
US-9151260-B2,
Query:
--Description: 10) Count how many times each non-DENSO assignee cites DENSO-assigned patents, grouped by the full title 
--               of the citing publication’s primary CPC subclass.
--  Pipeline mirrors the previous query with two additions:
--      • citing_assignee  – extract harmonized assignee(s) for each citing publication, excluding any containing “DENSO”.
--      • aggregation      – group by assignee name and CPC title, count occurrences.
WITH denso_pubs AS (
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
      AND p."filing_date" > 0
),
citing_pairs AS (
    SELECT 
        p."publication_number"                      AS "citing_publication",
        f.value:"publication_number"::STRING        AS "cited_publication"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."citation") f
    WHERE f.value:"publication_number" IS NOT NULL
),
target_citing AS (
    SELECT DISTINCT cp."citing_publication"
    FROM citing_pairs cp
    JOIN denso_pubs dp
      ON cp."cited_publication" = dp."publication_number"
),
citing_assignee AS (
    SELECT 
        tc."citing_publication",
        ah.value:"name"::STRING AS "citing_assignee"
    FROM target_citing tc
    JOIN PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = tc."citing_publication",
    LATERAL FLATTEN(input => pub."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING NOT ILIKE '%DENSO%'
),
first_cpc AS (
    SELECT 
        ca."citing_publication",
        ca."citing_assignee",
        cpc_f.value:"code"::STRING AS "first_cpc_code"
    FROM citing_assignee ca
    JOIN PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = ca."citing_publication",
    LATERAL FLATTEN(input => pub."cpc") cpc_f
    WHERE cpc_f.value:"first"::BOOLEAN = TRUE
),
cpc_title AS (
    SELECT 
        fc."citing_publication",
        fc."citing_assignee",
        SUBSTR(fc."first_cpc_code", 1, 8) AS "cpc_subclass"
    FROM first_cpc fc
)
SELECT 
    ct."citing_assignee",
    cd."titleFull"                       AS "cpc_title",
    COUNT(*)                             AS "citation_count"
FROM cpc_title ct
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
       ON cd."symbol" = ct."cpc_subclass"
GROUP BY 
    ct."citing_assignee",
    cd."titleFull"
ORDER BY "citation_count" DESC
LIMIT 20
Answer:
citing_assignee,cpc_title,citation_count
HONDA MOTOR CO LTD,,3
MAHLE INT GMBH,,3
SUZUKI HISAO,,3
TOYOTA MOTOR CO LTD,,3
TOYOTA BOSHOKU KK,"Seats specially adapted for vehicles; Arrangement or mounting of seats in vehicles the seat or part thereof being movable, e.g. adjustable the whole seat being movable height-adjustable",2
KABKUSHIKI KAISHA KOBE SEIKO S,,2
YAZAKI CORP,,2
MAHLE INT GMBH,"Heating elements having the shape of rods or tubes non-flexible heating conductor embedded in insul
Task: Which assignees, excluding DENSO CORP itself, have cited patents assigned to DENSO CORP, and what are the titles of the primary CPC subclasses associated with these citations? Provide the name of each citing assignee (excluding DENSO CORP), the full title of the primary CPC subclass (based on the first CPC code), and the count of citations grouped by the citing assignee and the CPC subclass title. Ensure that only citations of patents with valid filing dates are considered, and focus on the first CPC code for each citing patent. The results should specifically exclude DENSO CORP as a citing assignee.

Please think step by step and answer only one complete SQL in snowflake dialect in ```sql``` format.
SQL usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'PATENTS': {'PATENTS': ['DISCLOSURES_13', 'PUBLICATIONS', 'CPC_DEFINITION']}}

When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
If the task description does not specify the number of decimal places, retain all decimals to four places.

[Self-refine]
2025-05-07 01:41:43 - Thread-27 (execute) - INFO - [Try to run SQL in self-refine]
```sql
/* ---------------------------------------------------------------------------
   Which assignees (excluding DENSO CORP itself) cite patents assigned to
   DENSO CORP, what are the titles of the primary CPC subclasses of those
   citing patents, and how many such citations occur?
--------------------------------------------------------------------------- */
WITH denso_pubs AS (          /* 1. Patents assigned to DENSO having a valid filing date */
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS  p,
         LATERAL FLATTEN(input => p."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
      AND p."filing_date" > 0
),
citing_pairs AS (             /* 2. Explode every publication’s backward-citation list   */
    SELECT 
        p."publication_number"                      AS "citing_publication",
        f.value:"publication_number"::STRING        AS "cited_publication"
    FROM PATENTS.PATENTS.PUBLICATIONS  p,
         LATERAL FLATTEN(input => p."citation") f
    WHERE f.value:"publication_number" IS NOT NULL
),
target_citing AS (            /* 3. Publications that cite at least one DENSO patent     */
    SELECT DISTINCT cp."citing_publication"
    FROM citing_pairs  cp
    JOIN denso_pubs   dp
      ON cp."cited_publication" = dp."publication_number"
),
citing_assignee AS (          /* 4. Harmonized assignees of those citing publications    */
    SELECT 
        tc."citing_publication",
        ah.value:"name"::STRING AS "citing_assignee"
    FROM target_citing tc
    JOIN PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = tc."citing_publication",
    LATERAL FLATTEN(input => pub."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING NOT ILIKE '%DENSO%'        -- exclude DENSO itself
),
first_cpc AS (                /* 5. First-flagged CPC code of each citing publication    */
    SELECT 
        ca."citing_publication",
        ca."citing_assignee",
        cpc_f.value:"code"::STRING AS "first_cpc_code"
    FROM citing_assignee ca
    JOIN PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = ca."citing_publication",
    LATERAL FLATTEN(input => pub."cpc") cpc_f
    WHERE cpc_f.value:"first"::BOOLEAN = TRUE
),
cpc_with_title AS (           /* 6. Attach CPC subclass title (8-character truncation)   */
    SELECT 
        fc."citing_assignee",
        SUBSTR(fc."first_cpc_code", 1, 8)           AS "cpc_subclass",
        cd."titleFull"                              AS "cpc_title"
    FROM first_cpc fc
    LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
           ON cd."symbol" = SUBSTR(fc."first_cpc_code", 1, 8)
)
SELECT
    cwt."citing_assignee"                      AS "citing_assignee",
    COALESCE(cwt."cpc_title", '')             AS "cpc_subclass_title",
    COUNT(*)                                   AS "citation_count"
FROM cpc_with_title cwt
GROUP BY
    cwt."citing_assignee",
    cwt."cpc_subclass_title"
ORDER BY
    "citation_count" DESC NULLS LAST;
```
[Try to run SQL in self-refine]
2025-05-07 01:41:43 - Thread-27 (execute) - INFO - itercount: 1
2025-05-07 01:41:43 - Thread-27 (execute) - INFO - [Self-refine]
Input sql:
/* ---------------------------------------------------------------------------
   Which assignees (excluding DENSO CORP itself) cite patents assigned to
   DENSO CORP, what are the titles of the primary CPC subclasses of those
   citing patents, and how many such citations occur?
--------------------------------------------------------------------------- */
WITH denso_pubs AS (          /* 1. Patents assigned to DENSO having a valid filing date */
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS  p,
         LATERAL FLATTEN(input => p."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
      AND p."filing_date" > 0
),
citing_pairs AS (             /* 2. Explode every publication’s backward-citation list   */
    SELECT 
        p."publication_number"                      AS "citing_publication",
        f.value:"publication_number"::STRING        AS "cited_publication"
    FROM PATENTS.PATENTS.PUBLICATIONS  p,
         LATERAL FLATTEN(input => p."citation") f
    WHERE f.value:"publication_number" IS NOT NULL
),
target_citing AS (            /* 3. Publications that cite at least one DENSO patent     */
    SELECT DISTINCT cp."citing_publication"
    FROM citing_pairs  cp
    JOIN denso_pubs   dp
      ON cp."cited_publication" = dp."publication_number"
),
citing_assignee AS (          /* 4. Harmonized assignees of those citing publications    */
    SELECT 
        tc."citing_publication",
        ah.value:"name"::STRING AS "citing_assignee"
    FROM target_citing tc
    JOIN PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = tc."citing_publication",
    LATERAL FLATTEN(input => pub."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING NOT ILIKE '%DENSO%'        -- exclude DENSO itself
),
first_cpc AS (                /* 5. First-flagged CPC code of each citing publication    */
    SELECT 
        ca."citing_publication",
        ca."citing_assignee",
        cpc_f.value:"code"::STRING AS "first_cpc_code"
    FROM citing_assignee ca
    JOIN PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = ca."citing_publication",
    LATERAL FLATTEN(input => pub."cpc") cpc_f
    WHERE cpc_f.value:"first"::BOOLEAN = TRUE
),
cpc_with_title AS (           /* 6. Attach CPC subclass title (8-character truncation)   */
    SELECT 
        fc."citing_assignee",
        SUBSTR(fc."first_cpc_code", 1, 8)           AS "cpc_subclass",
        cd."titleFull"                              AS "cpc_title"
    FROM first_cpc fc
    LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
           ON cd."symbol" = SUBSTR(fc."first_cpc_code", 1, 8)
)
SELECT
    cwt."citing_assignee"                      AS "citing_assignee",
    COALESCE(cwt."cpc_title", '')             AS "cpc_subclass_title",
    COUNT(*)                                   AS "citation_count"
FROM cpc_with_title cwt
GROUP BY
    cwt."citing_assignee",
    cwt."cpc_subclass_title"
ORDER BY
    "citation_count" DESC NULLS LAST;
The error information is:
{'status': 'error', 'error_msg': '##ERROR##000904 (42000): SQL compilation error: error line 59 at position 4\ninvalid identifier \'CWT."cpc_subclass_title"\''}
Please correct it and output only 1 complete SQL query.
[Self-refine]
2025-05-07 01:42:39 - Thread-27 (execute) - INFO - [Try to run SQL in self-refine]
```sql
/* ---------------------------------------------------------------------------
   Corrected query: list non-DENSO assignees that cite DENSO-assigned patents,
   showing the primary CPC subclass title of the citing patents and the
   number of such citations.
--------------------------------------------------------------------------- */
WITH denso_pubs AS (          /* 1. Patents assigned to DENSO with valid filing dates */
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS  p,
         LATERAL FLATTEN(input => p."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING ILIKE '%DENSO%'
      AND p."filing_date" > 0
),
citing_pairs AS (             /* 2. All (citing → cited) pairs from backward citations  */
    SELECT 
        p."publication_number"               AS "citing_publication",
        f.value:"publication_number"::STRING AS "cited_publication"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."citation") f
    WHERE f.value:"publication_number" IS NOT NULL
),
target_citing AS (            /* 3. Publications that cite at least one DENSO patent    */
    SELECT DISTINCT cp."citing_publication"
    FROM citing_pairs cp
    JOIN denso_pubs  dp
      ON cp."cited_publication" = dp."publication_number"
),
citing_assignee AS (          /* 4. Harmonized assignees of the citing publications     */
    SELECT 
        tc."citing_publication",
        ah.value:"name"::STRING AS "citing_assignee"
    FROM target_citing tc
    JOIN PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = tc."citing_publication",
    LATERAL FLATTEN(input => pub."assignee_harmonized") ah
    WHERE ah.value:"name"::STRING NOT ILIKE '%DENSO%'   -- exclude DENSO itself
),
first_cpc AS (                /* 5. First-flagged CPC code of each citing publication   */
    SELECT 
        ca."citing_publication",
        ca."citing_assignee",
        cpc_f.value:"code"::STRING AS "first_cpc_code"
    FROM citing_assignee ca
    JOIN PATENTS.PATENTS.PUBLICATIONS pub
      ON pub."publication_number" = ca."citing_publication",
    LATERAL FLATTEN(input => pub."cpc") cpc_f
    WHERE cpc_f.value:"first"::BOOLEAN = TRUE
),
cpc_with_title AS (           /* 6. Attach CPC subclass title (8-char truncation)       */
    SELECT 
        fc."citing_assignee",
        SUBSTR(fc."first_cpc_code", 1, 8)    AS "cpc_subclass",
        cd."titleFull"                       AS "cpc_title"
    FROM first_cpc fc
    LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
           ON cd."symbol" = SUBSTR(fc."first_cpc_code", 1, 8)
)
SELECT
    cwt."citing_assignee"                    AS "citing_assignee",
    COALESCE(cwt."cpc_title", '')            AS "cpc_subclass_title",
    COUNT(*)                                 AS "citation_count"
FROM cpc_with_title cwt
GROUP BY
    cwt."citing_assignee",
    cwt."cpc_title"
ORDER BY
    "citation_count" DESC NULLS LAST;
```
[Try to run SQL in self-refine]
2025-05-07 01:42:43 - Thread-27 (execute) - INFO - Total iteration counts: 1
