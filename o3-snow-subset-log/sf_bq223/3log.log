2025-05-07 01:35:42 - Thread-33 (execute) - INFO - [Exploration]
```sql
--Description: 1)  Show some patent publications whose harmonised assignee name contains “DENSO”.
SELECT DISTINCT 
       t."publication_number"
FROM PATENTS.PATENTS.PUBLICATIONS t , 
     LATERAL FLATTEN ( input => t."assignee_harmonized") f
WHERE f.value:"name"::STRING ILIKE '%DENSO%'     
LIMIT 20;
```

```sql
--Description: 2)  Look at how a publication stores the cited-patent numbers (flatten the “citation” array).
WITH denso_pubs AS (
     SELECT DISTINCT 
            t."publication_number" 
     FROM PATENTS.PATENTS.PUBLICATIONS t , 
          LATERAL FLATTEN ( input => t."assignee_harmonized") f
     WHERE f.value:"name"::STRING ILIKE '%DENSO%' )
SELECT cite_t."publication_number"  AS "citing_pub",
       c.value:"publication_number"::STRING AS "cited_pub"
FROM PATENTS.PATENTS.PUBLICATIONS cite_t ,
     LATERAL FLATTEN ( input => cite_t."citation") c ,
     denso_pubs
WHERE c.value:"publication_number"::STRING = denso_pubs."publication_number"
LIMIT 20;
```

```sql
--Description: 3)  Retrieve the assignees of patents that cite a DENSO patent (exclude assignees containing “DENSO” and keep only valid filing dates).
WITH denso_pubs AS (
     SELECT DISTINCT t."publication_number"
     FROM PATENTS.PATENTS.PUBLICATIONS t , 
          LATERAL FLATTEN ( input => t."assignee_harmonized") f
     WHERE f.value:"name"::STRING ILIKE '%DENSO%' )
SELECT DISTINCT 
       citet."publication_number"                    AS "citing_pub",
       ass_f.value:"name"::STRING                    AS "citing_assignee"
FROM PATENTS.PATENTS.PUBLICATIONS citet ,
     LATERAL FLATTEN ( input => citet."citation") cit_f ,
     LATERAL FLATTEN ( input => citet."assignee_harmonized") ass_f ,
     denso_pubs
WHERE cit_f.value:"publication_number"::STRING = denso_pubs."publication_number"
  AND citet."filing_date" > 0
  AND ass_f.value:"name"::STRING NOT ILIKE '%DENSO%'  
LIMIT 20;
```

```sql
--Description: 4)  Examine how the “cpc” array marks the primary CPC code (keep entries where "first" = TRUE).
SELECT 
       citet."publication_number"                              AS "pub_num",
       cpc_f.value:"code"::STRING                              AS "cpc_code",
       cpc_f.value:"first"::BOOLEAN                            AS "is_first"
FROM PATENTS.PATENTS.PUBLICATIONS citet ,
     LATERAL FLATTEN ( input => citet."cpc") cpc_f
WHERE cpc_f.value:"first"::BOOLEAN = TRUE
LIMIT 20;
```

```sql
--Description: 5)  Combine the citing-patent list with their primary CPC codes.
WITH denso_pubs AS (
     SELECT DISTINCT t."publication_number"
     FROM PATENTS.PATENTS.PUBLICATIONS t , 
          LATERAL FLATTEN ( input => t."assignee_harmonized") f
     WHERE f.value:"name"::STRING ILIKE '%DENSO%' ),

citing AS (
     SELECT DISTINCT citet."publication_number" AS "citing_pub"
     FROM PATENTS.PATENTS.PUBLICATIONS citet ,
          LATERAL FLATTEN ( input => citet."citation") cit_f ,
          denso_pubs
     WHERE cit_f.value:"publication_number"::STRING = denso_pubs."publication_number"
       AND citet."filing_date" > 0 )

SELECT 
       cf."citing_pub",
       cpc_f.value:"code"::STRING AS "primary_cpc_code"
FROM PATENTS.PATENTS.PUBLICATIONS cf ,
     LATERAL FLATTEN ( input => cf."cpc") cpc_f ,
     citing
WHERE cf."publication_number" = citing."citing_pub"
  AND cpc_f.value:"first"::BOOLEAN = TRUE
LIMIT 20;
```

```sql
--Description: 6)  Join the primary CPC subclasses with their full titles from CPC_DEFINITION.
WITH denso_pubs AS (
     SELECT DISTINCT t."publication_number"
     FROM PATENTS.PATENTS.PUBLICATIONS t , 
          LATERAL FLATTEN ( input => t."assignee_harmonized") f
     WHERE f.value:"name"::STRING ILIKE '%DENSO%' ),

citing_info AS (
     SELECT DISTINCT 
            citet."publication_number"                AS "citing_pub",
            ass_f.value:"name"::STRING                AS "citing_assignee"
     FROM PATENTS.PATENTS.PUBLICATIONS citet ,
          LATERAL FLATTEN ( input => citet."citation") cit_f ,
          LATERAL FLATTEN ( input => citet."assignee_harmonized") ass_f ,
          denso_pubs
     WHERE cit_f.value:"publication_number"::STRING = denso_pubs."publication_number"
       AND citet."filing_date" > 0
       AND ass_f.value:"name"::STRING NOT ILIKE '%DENSO%' ),

primary_cpc AS (
     SELECT citet."publication_number"               AS "citing_pub",
            cpc_f.value:"code"::STRING               AS "cpc_code"
     FROM PATENTS.PATENTS.PUBLICATIONS citet ,
          LATERAL FLATTEN ( input => citet."cpc") cpc_f
     WHERE cpc_f.value:"first"::BOOLEAN = TRUE )

SELECT 
       ci."citing_assignee",
       pc."cpc_code",
       SPLIT_PART(pc."cpc_code", '/', 1)             AS "cpc_subclass",
       cd."titleFull"
FROM primary_cpc pc
JOIN citing_info ci 
     ON ci."citing_pub" = pc."citing_pub"
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
     ON cd."symbol" = SPLIT_PART(pc."cpc_code", '/', 1)
LIMIT 20;
```

```sql
--Description: 7)  Produce the required aggregation: count of citations grouped by citing assignee and CPC-subclass title (excluding DENSO CORP as a citer).
WITH denso_pubs AS (
     SELECT DISTINCT t."publication_number"
     FROM PATENTS.PATENTS.PUBLICATIONS t , 
          LATERAL FLATTEN ( input => t."assignee_harmonized") f
     WHERE f.value:"name"::STRING ILIKE '%DENSO%' ),

citing_info AS (
     SELECT DISTINCT 
            citet."publication_number"                AS "citing_pub",
            ass_f.value:"name"::STRING                AS "citing_assignee"
     FROM PATENTS.PATENTS.PUBLICATIONS citet ,
          LATERAL FLATTEN ( input => citet."citation") cit_f ,
          LATERAL FLATTEN ( input => citet."assignee_harmonized") ass_f ,
          denso_pubs
     WHERE cit_f.value:"publication_number"::STRING = denso_pubs."publication_number"
       AND citet."filing_date" > 0
       AND ass_f.value:"name"::STRING NOT ILIKE '%DENSO%' ),

primary_cpc AS (
     SELECT citet."publication_number"               AS "citing_pub",
            cpc_f.value:"code"::STRING               AS "cpc_code"
     FROM PATENTS.PATENTS.PUBLICATIONS citet ,
          LATERAL FLATTEN ( input => citet."cpc") cpc_f
     WHERE cpc_f.value:"first"::BOOLEAN = TRUE ),

joined AS (
     SELECT 
            ci."citing_assignee",
            SPLIT_PART(pc."cpc_code", '/', 1)        AS "cpc_subclass"
     FROM primary_cpc pc
     JOIN citing_info ci 
          ON ci."citing_pub" = pc."citing_pub" )

SELECT 
       j."citing_assignee",
       cd."titleFull"                    AS "cpc_subclass_title",
       COUNT(*)                          AS "citation_count"
FROM joined j
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
       ON cd."symbol" = j."cpc_subclass"
GROUP BY j."citing_assignee", cd."titleFull"
ORDER BY "citation_count" DESC
LIMIT 20;
```

```sql
--Description: 8)  Count how many distinct patent publications are assigned to DENSO.
SELECT COUNT(*) AS "denso_patent_count"
FROM (
     SELECT DISTINCT t."publication_number"
     FROM PATENTS.PATENTS.PUBLICATIONS t , 
          LATERAL FLATTEN ( input => t."assignee_harmonized") f
     WHERE f.value:"name"::STRING ILIKE '%DENSO%' );
```

```sql
--Description: 9)  Look up the CPC_DEFINITION entry for subclass “H04L” (example of telecom subclass).
SELECT "symbol" , "titleFull"
FROM PATENTS.PATENTS.CPC_DEFINITION
WHERE "symbol" = 'H04L'
LIMIT 20;
```

```sql
--Description: 10)  Show a handful of CPC subclass titles whose symbol starts with “H04”.
SELECT "symbol" , "titleFull"
FROM PATENTS.PATENTS.CPC_DEFINITION
WHERE "symbol" ILIKE 'H04%'
LIMIT 20;
```
[Exploration]
2025-05-07 01:35:42 - Thread-33 (execute) - INFO - [Try to execute]
--Description: 1)  Show some patent publications whose harmonised assignee name contains “DENSO”.
SELECT DISTINCT 
       t."publication_number"
FROM PATENTS.PATENTS.PUBLICATIONS t , 
     LATERAL FLATTEN ( input => t."assignee_harmonized") f
WHERE f.value:"name"::STRING ILIKE '%DENSO%'     
LIMIT 20;
[Try to execute]
2025-05-07 01:37:16 - Thread-33 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 1)  Show some patent publications whose harmonised assignee name contains “DENSO”.
SELECT DISTINCT 
       t."publication_number"
FROM PATENTS.PATENTS.PUBLICATIONS t , 
     LATERAL FLATTEN ( input => t."assignee_harmonized") f
WHERE f.value:"name"::STRING ILIKE '%DENSO%'     
LIMIT 20;
Results:
publication_number
JP-H08140322-A
JP-2006291728-A
JP-2010180743-A
WO-2024062849-A1
US-2008236929-A1
DE-102004042762-A1
US-2015207745-A1
US-11639192-B2
JP-2009024674-A
JP-2008014215-A
JP-2017211031-A
JP-H05196383-A
JP-2000025574-A
JP-2010230654-A
JP-S61108026-A
JP-2022186279-A
CN-110071955-A
JP-2019066047-A
US-10164558-B2
JP-H10206076-A

[Successfully executed]
2025-05-07 01:37:16 - Thread-33 (execute) - INFO - [Try to execute]
--Description: 2)  Look at how a publication stores the cited-patent numbers (flatten the “citation” array).
WITH denso_pubs AS (
     SELECT DISTINCT 
            t."publication_number" 
     FROM PATENTS.PATENTS.PUBLICATIONS t , 
          LATERAL FLATTEN ( input => t."assignee_harmonized") f
     WHERE f.value:"name"::STRING ILIKE '%DENSO%' )
SELECT cite_t."publication_number"  AS "citing_pub",
       c.value:"publication_number"::STRING AS "cited_pub"
FROM PATENTS.PATENTS.PUBLICATIONS cite_t ,
     LATERAL FLATTEN ( input => cite_t."citation") c ,
     denso_pubs
WHERE c.value:"publication_number"::STRING = denso_pubs."publication_number"
LIMIT 20;
[Try to execute]
2025-05-07 01:39:18 - Thread-33 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 2)  Look at how a publication stores the cited-patent numbers (flatten the “citation” array).
WITH denso_pubs AS (
     SELECT DISTINCT 
            t."publication_number" 
     FROM PATENTS.PATENTS.PUBLICATIONS t , 
          LATERAL FLATTEN ( input => t."assignee_harmonized") f
     WHERE f.value:"name"::STRING ILIKE '%DENSO%' )
SELECT cite_t."publication_number"  AS "citing_pub",
       c.value:"publication_number"::STRING AS "cited_pub"
FROM PATENTS.PATENTS.PUBLICATIONS cite_t ,
     LATERAL FLATTEN ( input => cite_t."citation") c ,
     denso_pubs
WHERE c.value:"publication_number"::STRING = denso_pubs."publication_number"
LIMIT 20;
Results:
citing_pub,cited_pub
US-2009017328-A1,US-5171377-A
JP-2020117051-A,JP-2008238870-A
US-10774689-B2,US-2007044473-A1
CN-108292892-A,JP-2009071935-A
US-8807647-B2,JP-2010104485-A
CN-109203994-A,JP-2008089479-A
DE-102006000312-B4,EP-1672346-A2
US-10616959-B2,US-6178292-B1
US-2015369515-A1,US-6178292-B1
US-9151260-B2,JP-2004332657-A
JP-2006133447-A,JP-S62125273-A

[Successfully executed]
2025-05-07 01:39:18 - Thread-33 (execute) - INFO - [Try to execute]
--Description: 3)  Retrieve the assignees of patents that cite a DENSO patent (exclude assignees containing “DENSO” and keep only valid filing dates).
WITH denso_pubs AS (
     SELECT DISTINCT t."publication_number"
     FROM PATENTS.PATENTS.PUBLICATIONS t , 
          LATERAL FLATTEN ( input => t."assignee_harmonized") f
     WHERE f.value:"name"::STRING ILIKE '%DENSO%' )
SELECT DISTINCT 
       citet."publication_number"                    AS "citing_pub",
       ass_f.value:"name"::STRING                    AS "citing_assignee"
FROM PATENTS.PATENTS.PUBLICATIONS citet ,
     LATERAL FLATTEN ( input => citet."citation") cit_f ,
     LATERAL FLATTEN ( input => citet."assignee_harmonized") ass_f ,
     denso_pubs
WHERE cit_f.value:"publication_number"::STRING = denso_pubs."publication_number"
  AND citet."filing_date" > 0
  AND ass_f.value:"name"::STRING NOT ILIKE '%DENSO%'  
LIMIT 20;
[Try to execute]
2025-05-07 01:40:42 - Thread-33 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 3)  Retrieve the assignees of patents that cite a DENSO patent (exclude assignees containing “DENSO” and keep only valid filing dates).
WITH denso_pubs AS (
     SELECT DISTINCT t."publication_number"
     FROM PATENTS.PATENTS.PUBLICATIONS t , 
          LATERAL FLATTEN ( input => t."assignee_harmonized") f
     WHERE f.value:"name"::STRING ILIKE '%DENSO%' )
SELECT DISTINCT 
       citet."publication_number"                    AS "citing_pub",
       ass_f.value:"name"::STRING                    AS "citing_assignee"
FROM PATENTS.PATENTS.PUBLICATIONS citet ,
     LATERAL FLATTEN ( input => citet."citation") cit_f ,
     LATERAL FLATTEN ( input => citet."assignee_harmonized") ass_f ,
     denso_pubs
WHERE cit_f.value:"publication_number"::STRING = denso_pubs."publication_number"
  AND citet."filing_date" > 0
  AND ass_f.value:"name"::STRING NOT ILIKE '%DENSO%'  
LIMIT 20;
Results:
citing_pub,citing_assignee
US-10774689-B2,MAHLE INT GMBH
DE-102006000312-B4,TOYOTA MOTOR CO LTD
US-10616959-B2,MAHLE INT GMBH
CN-109203994-A,YAZAKI CORP
US-9151260-B2,TOYOTA MOTOR CO LTD
US-9151260-B2,SUZUKI HISAO
US-8807647-B2,SAHASHI HIDEO
US-2009017328-A1,KABKUSHIKI KAISHA KOBE SEIKO S
US-8807647-B2,TOYOTA BOSHOKU KK
US-2015369515-A1,KIA MOTORS CORP
JP-2006133447-A,SEIKO EPSON CORP
JP-2020117051-A,HONDA MOTOR CO LTD
US-2015369515-A1,HYUNDAI MOTOR CO LTD

[Successfully executed]
2025-05-07 01:40:42 - Thread-33 (execute) - INFO - [Try to execute]
--Description: 4)  Examine how the “cpc” array marks the primary CPC code (keep entries where "first" = TRUE).
SELECT 
       citet."publication_number"                              AS "pub_num",
       cpc_f.value:"code"::STRING                              AS "cpc_code",
       cpc_f.value:"first"::BOOLEAN                            AS "is_first"
FROM PATENTS.PATENTS.PUBLICATIONS citet ,
     LATERAL FLATTEN ( input => citet."cpc") cpc_f
WHERE cpc_f.value:"first"::BOOLEAN = TRUE
LIMIT 20;
[Try to execute]
2025-05-07 01:41:33 - Thread-33 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 4)  Examine how the “cpc” array marks the primary CPC code (keep entries where "first" = TRUE).
SELECT 
       citet."publication_number"                              AS "pub_num",
       cpc_f.value:"code"::STRING                              AS "cpc_code",
       cpc_f.value:"first"::BOOLEAN                            AS "is_first"
FROM PATENTS.PATENTS.PUBLICATIONS citet ,
     LATERAL FLATTEN ( input => citet."cpc") cpc_f
WHERE cpc_f.value:"first"::BOOLEAN = TRUE
LIMIT 20;
Results:
pub_num,cpc_code,is_first
US-303290-A,B68C1/12,True
US-2076948-A,E06B7/08,True
US-2076948-A,E06B7/08,True
US-2228029-A,B61F9/00,True
US-2228029-A,B61F9/00,True
US-2331923-A,C10M1/08,True
US-2331923-A,C10M1/08,True
US-3929068-A,B32B27/10,True
US-3929068-A,B05C17/06,True
US-2742339-A,G01D15/16,True
US-2742339-A,G01D15/16,True
US-2963719-A,A43D113/00,True
US-2963719-A,A43D113/00,True
US-103059-A,F24H1/40,True
US-1096365-A,B62B5/0404,True

[Successfully executed]
2025-05-07 01:41:33 - Thread-33 (execute) - INFO - [Try to execute]
--Description: 5)  Combine the citing-patent list with their primary CPC codes.
WITH denso_pubs AS (
     SELECT DISTINCT t."publication_number"
     FROM PATENTS.PATENTS.PUBLICATIONS t , 
          LATERAL FLATTEN ( input => t."assignee_harmonized") f
     WHERE f.value:"name"::STRING ILIKE '%DENSO%' ),

citing AS (
     SELECT DISTINCT citet."publication_number" AS "citing_pub"
     FROM PATENTS.PATENTS.PUBLICATIONS citet ,
          LATERAL FLATTEN ( input => citet."citation") cit_f ,
          denso_pubs
     WHERE cit_f.value:"publication_number"::STRING = denso_pubs."publication_number"
       AND citet."filing_date" > 0 )

SELECT 
       cf."citing_pub",
       cpc_f.value:"code"::STRING AS "primary_cpc_code"
FROM PATENTS.PATENTS.PUBLICATIONS cf ,
     LATERAL FLATTEN ( input => cf."cpc") cpc_f ,
     citing
WHERE cf."publication_number" = citing."citing_pub"
  AND cpc_f.value:"first"::BOOLEAN = TRUE
LIMIT 20;
[Try to execute]
2025-05-07 01:41:33 - Thread-33 (execute) - INFO - [Error occurred]
{'status': 'error', 'error_msg': '##ERROR##000904 (42000): SQL compilation error: error line 16 at position 7\ninvalid identifier \'CF."citing_pub"\''}
[Error occurred]
2025-05-07 01:43:44 - Thread-33 (execute) - INFO - [Corrected SQL]
```sql
--Description (thinking process included):
-- 1. denso_pubs: find every publication that has an assignee_harmonized entry whose name contains “DENSO”.
-- 2. citing    : from the entire publications table, keep only those patents that (a) cite at least
--                one of the DENSO publications (matching on citation.publication_number) and
--                (b) have a positive filing_date (simple proxy for “valid” filing date).
-- 3. Final step: join the “citing” list back to PUBLICATIONS, flatten the CPC array, keep only the
--                record where "first" = TRUE (Google flag for the primary CPC), and output each
--                citing patent together with its primary CPC code.  LIMIT 20 for inspection.
WITH denso_pubs AS (
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN (INPUT => p."assignee_harmonized") f
    WHERE f.value:"name"::STRING ILIKE '%DENSO%'
),
citing AS (
    SELECT DISTINCT cp."publication_number" AS "citing_pub"
    FROM PATENTS.PATENTS.PUBLICATIONS cp,
         LATERAL FLATTEN (INPUT => cp."citation") c,
         denso_pubs
    WHERE c.value:"publication_number"::STRING = denso_pubs."publication_number"
      AND cp."filing_date" > 0
)
SELECT 
       citing."citing_pub",
       cpc_f.value:"code"::STRING AS "primary_cpc_code"
FROM citing
JOIN PATENTS.PATENTS.PUBLICATIONS pub
     ON pub."publication_number" = citing."citing_pub",
     LATERAL FLATTEN (INPUT => pub."cpc") cpc_f
WHERE cpc_f.value:"first"::BOOLEAN = TRUE
LIMIT 20;
```
[Corrected SQL]
2025-05-07 01:44:20 - Thread-33 (execute) - INFO - [Results for corrected sql]
citing_pub,primary_cpc_code
US-2009017328-A1,B23K9/23
US-2009017328-A1,B23K35/0266
US-2009017328-A1,B23K35/0266
US-10616959-B2,H05B3/40
US-10616959-B2,H05B3/50
US-10616959-B2,H05B3/50
US-10616959-B2,F24H3/0435
DE-102006000312-B4,F02P5/1523
DE-102006000312-B4,F02P5/1523
US-8807647-B2,B60N2/1615
US-8807647-B2,B60N2/1615
US-10774689-B2,F01K13/006
US-10774689-B2,F01K13/006
US-10774689-B2,F01K13/006
US-2015369515-A1,F24H1/0018
US-2015369515-A1,F24H3/0429

[Results for corrected sql]
2025-05-07 01:45:40 - Thread-33 (execute) - INFO - [Corrected other sqls]
```sql
--Description: 6)  Join the primary CPC subclasses for each citing patent with the full CPC subclass titles.
WITH denso_pubs AS (                                            -- all publications with “DENSO” assignee
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN (INPUT => p."assignee_harmonized") f
    WHERE f.value:"name"::STRING ILIKE '%DENSO%'
),
citing_info AS (                                                -- citing patents + their (non-DENSO) assignee names
    SELECT DISTINCT 
           cp."publication_number"                AS "citing_pub",
           a_f.value:"name"::STRING               AS "citing_assignee"
    FROM PATENTS.PATENTS.PUBLICATIONS cp,
         LATERAL FLATTEN (INPUT => cp."citation") c_f,
         LATERAL FLATTEN (INPUT => cp."assignee_harmonized") a_f,
         denso_pubs
    WHERE c_f.value:"publication_number"::STRING = denso_pubs."publication_number"
      AND cp."filing_date" > 0
      AND a_f.value:"name"::STRING NOT ILIKE '%DENSO%'
),
primary_cpc AS (                                                -- primary CPC code for every citing patent
    SELECT 
           pub."publication_number"               AS "citing_pub",
           cpc_f.value:"code"::STRING             AS "cpc_code"
    FROM PATENTS.PATENTS.PUBLICATIONS pub,
         LATERAL FLATTEN (INPUT => pub."cpc") cpc_f
    WHERE cpc_f.value:"first"::BOOLEAN = TRUE
)
SELECT 
       ci."citing_assignee",
       pc."cpc_code",
       SPLIT_PART(pc."cpc_code", '/', 1)          AS "cpc_subclass",
       cd."titleFull"
FROM primary_cpc pc
JOIN citing_info  ci ON ci."citing_pub" = pc."citing_pub"
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
       ON cd."symbol" = SPLIT_PART(pc."cpc_code", '/', 1)
LIMIT 20;
```

```sql
--Description: 7)  Aggregate – count citations by citing assignee and CPC subclass title (excluding DENSO as citer).
WITH denso_pubs AS (
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN (INPUT => p."assignee_harmonized") f
    WHERE f.value:"name"::STRING ILIKE '%DENSO%'
),
citing_info AS (                                                -- citing patents + their assignees
    SELECT DISTINCT 
           cp."publication_number"                AS "citing_pub",
           a_f.value:"name"::STRING               AS "citing_assignee"
    FROM PATENTS.PATENTS.PUBLICATIONS cp,
         LATERAL FLATTEN (INPUT => cp."citation") c_f,
         LATERAL FLATTEN (INPUT => cp."assignee_harmonized") a_f,
         denso_pubs
    WHERE c_f.value:"publication_number"::STRING = denso_pubs."publication_number"
      AND cp."filing_date" > 0
      AND a_f.value:"name"::STRING NOT ILIKE '%DENSO%'
),
primary_cpc AS (                                                -- primary CPC code for citing patents
    SELECT 
           pub."publication_number"               AS "citing_pub",
           cpc_f.value:"code"::STRING             AS "cpc_code"
    FROM PATENTS.PATENTS.PUBLICATIONS pub,
         LATERAL FLATTEN (INPUT => pub."cpc") cpc_f
    WHERE cpc_f.value:"first"::BOOLEAN = TRUE
),
joined AS (                                                     -- merge assignee with CPC subclass
    SELECT 
           ci."citing_assignee",
           SPLIT_PART(pc."cpc_code", '/', 1)      AS "cpc_subclass"
    FROM primary_cpc pc
    JOIN citing_info ci ON ci."citing_pub" = pc."citing_pub"
)
SELECT 
       j."citing_assignee",
       cd."titleFull"                 AS "cpc_subclass_title",
       COUNT(*)                       AS "citation_count"
FROM joined j
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
       ON cd."symbol" = j."cpc_subclass"
GROUP BY j."citing_assignee", cd."titleFull"
ORDER BY "citation_count" DESC
LIMIT 20;
```

```sql
--Description: 8)  Count the number of distinct patent publications that are assigned to DENSO.
SELECT COUNT(*) AS "denso_patent_count"
FROM (
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN (INPUT => p."assignee_harmonized") f
    WHERE f.value:"name"::STRING ILIKE '%DENSO%'
);
```

```sql
--Description: 9)  Retrieve the CPC_DEFINITION record for subclass symbol “H04L”.
SELECT "symbol", "titleFull"
FROM PATENTS.PATENTS.CPC_DEFINITION
WHERE "symbol" = 'H04L'
LIMIT 20;
```

```sql
--Description: 10)  Show several CPC subclass titles whose symbols start with “H04”.
SELECT "symbol", "titleFull"
FROM PATENTS.PATENTS.CPC_DEFINITION
WHERE "symbol" ILIKE 'H04%'
LIMIT 20;
```
[Corrected other sqls]
2025-05-07 01:45:40 - Thread-33 (execute) - INFO - [Successfully corrected]
Successfully corrected. SQL:
--Description (thinking process included):
-- 1. denso_pubs: find every publication that has an assignee_harmonized entry whose name contains “DENSO”.
-- 2. citing    : from the entire publications table, keep only those patents that (a) cite at least
--                one of the DENSO publications (matching on citation.publication_number) and
--                (b) have a positive filing_date (simple proxy for “valid” filing date).
-- 3. Final step: join the “citing” list back to PUBLICATIONS, flatten the CPC array, keep only the
--                record where "first" = TRUE (Google flag for the primary CPC), and output each
--                citing patent together with its primary CPC code.  LIMIT 20 for inspection.
WITH denso_pubs AS (
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN (INPUT => p."assignee_harmonized") f
    WHERE f.value:"name"::STRING ILIKE '%DENSO%'
),
citing AS (
    SELECT DISTINCT cp."publication_number" AS "citing_pub"
    FROM PATENTS.PATENTS.PUBLICATIONS cp,
         LATERAL FLATTEN (INPUT => cp."citation") c,
         denso_pubs
    WHERE c.value:"publication_number"::STRING = denso_pubs."publication_number"
      AND cp."filing_date" > 0
)
SELECT 
       citing."citing_pub",
       cpc_f.value:"code"::STRING AS "primary_cpc_code"
FROM citing
JOIN PATENTS.PATENTS.PUBLICATIONS pub
     ON pub."publication_number" = citing."citing_pub",
     LATERAL FLATTEN (INPUT => pub."cpc") cpc_f
WHERE cpc_f.value:"first"::BOOLEAN = TRUE
LIMIT 20;
Results:
citing_pub,primary_cpc_code
US-2009017328-A1,B23K9/23
US-2009017328-A1,B23K35/0266
US-2009017328-A1,B23K35/0266
US-10616959-B2,H05B3/40
US-10616959-B2,H05B3/50
US-10616959-B2,H05B3/50
US-10616959-B2,F24H3/0435
DE-102006000312-B4,F02P5/1523
DE-102006000312-B4,F02P5/1523
US-8807647-B2,B60N2/1615
US-8807647-B2,B60N2/1615
US-10774689-B2,F01K13/006
US-10774689-B2,F01K13/006
US-10774689-B2,F01K13/006
US-2015369515-A1,F24H1/0018
US-2015369515-A1,F24H3/0429

[Successfully corrected]
2025-05-07 01:45:40 - Thread-33 (execute) - INFO - [Try to execute]
--Description: 6)  Join the primary CPC subclasses for each citing patent with the full CPC subclass titles.
WITH denso_pubs AS (                                            -- all publications with “DENSO” assignee
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN (INPUT => p."assignee_harmonized") f
    WHERE f.value:"name"::STRING ILIKE '%DENSO%'
),
citing_info AS (                                                -- citing patents + their (non-DENSO) assignee names
    SELECT DISTINCT 
           cp."publication_number"                AS "citing_pub",
           a_f.value:"name"::STRING               AS "citing_assignee"
    FROM PATENTS.PATENTS.PUBLICATIONS cp,
         LATERAL FLATTEN (INPUT => cp."citation") c_f,
         LATERAL FLATTEN (INPUT => cp."assignee_harmonized") a_f,
         denso_pubs
    WHERE c_f.value:"publication_number"::STRING = denso_pubs."publication_number"
      AND cp."filing_date" > 0
      AND a_f.value:"name"::STRING NOT ILIKE '%DENSO%'
),
primary_cpc AS (                                                -- primary CPC code for every citing patent
    SELECT 
           pub."publication_number"               AS "citing_pub",
           cpc_f.value:"code"::STRING             AS "cpc_code"
    FROM PATENTS.PATENTS.PUBLICATIONS pub,
         LATERAL FLATTEN (INPUT => pub."cpc") cpc_f
    WHERE cpc_f.value:"first"::BOOLEAN = TRUE
)
SELECT 
       ci."citing_assignee",
       pc."cpc_code",
       SPLIT_PART(pc."cpc_code", '/', 1)          AS "cpc_subclass",
       cd."titleFull"
FROM primary_cpc pc
JOIN citing_info  ci ON ci."citing_pub" = pc."citing_pub"
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
       ON cd."symbol" = SPLIT_PART(pc."cpc_code", '/', 1)
LIMIT 20
[Try to execute]
2025-05-07 01:48:52 - Thread-33 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 6)  Join the primary CPC subclasses for each citing patent with the full CPC subclass titles.
WITH denso_pubs AS (                                            -- all publications with “DENSO” assignee
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN (INPUT => p."assignee_harmonized") f
    WHERE f.value:"name"::STRING ILIKE '%DENSO%'
),
citing_info AS (                                                -- citing patents + their (non-DENSO) assignee names
    SELECT DISTINCT 
           cp."publication_number"                AS "citing_pub",
           a_f.value:"name"::STRING               AS "citing_assignee"
    FROM PATENTS.PATENTS.PUBLICATIONS cp,
         LATERAL FLATTEN (INPUT => cp."citation") c_f,
         LATERAL FLATTEN (INPUT => cp."assignee_harmonized") a_f,
         denso_pubs
    WHERE c_f.value:"publication_number"::STRING = denso_pubs."publication_number"
      AND cp."filing_date" > 0
      AND a_f.value:"name"::STRING NOT ILIKE '%DENSO%'
),
primary_cpc AS (                                                -- primary CPC code for every citing patent
    SELECT 
           pub."publication_number"               AS "citing_pub",
           cpc_f.value:"code"::STRING             AS "cpc_code"
    FROM PATENTS.PATENTS.PUBLICATIONS pub,
         LATERAL FLATTEN (INPUT => pub."cpc") cpc_f
    WHERE cpc_f.value:"first"::BOOLEAN = TRUE
)
SELECT 
       ci."citing_assignee",
       pc."cpc_code",
       SPLIT_PART(pc."cpc_code", '/', 1)          AS "cpc_subclass",
       cd."titleFull"
FROM primary_cpc pc
JOIN citing_info  ci ON ci."citing_pub" = pc."citing_pub"
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
       ON cd."symbol" = SPLIT_PART(pc."cpc_code", '/', 1)
LIMIT 20
Results:
citing_assignee,cpc_code,cpc_subclass,titleFull
KIA MOTORS CORP,F24H1/0018,F24H1,
HYUNDAI MOTOR CO LTD,F24H1/0018,F24H1,
KIA MOTORS CORP,F24H3/0429,F24H3,
HYUNDAI MOTOR CO LTD,F24H3/0429,F24H3,
KIA MOTORS CORP,F24H3/0429,F24H3,
HYUNDAI MOTOR CO LTD,F24H3/0429,F24H3,
SUZUKI HISAO,F02M63/0033,F02M63,
TOYOTA MOTOR CO LTD,F02M63/0033,F02M63,
SUZUKI HISAO,F02M63/0033,F02M63,
TOYOTA MOTOR CO LTD,F02M63/0033,F02M63,

[Successfully executed]
2025-05-07 01:48:52 - Thread-33 (execute) - INFO - [Try to execute]
--Description: 7)  Aggregate – count citations by citing assignee and CPC subclass title (excluding DENSO as citer).
WITH denso_pubs AS (
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN (INPUT => p."assignee_harmonized") f
    WHERE f.value:"name"::STRING ILIKE '%DENSO%'
),
citing_info AS (                                                -- citing patents + their assignees
    SELECT DISTINCT 
           cp."publication_number"                AS "citing_pub",
           a_f.value:"name"::STRING               AS "citing_assignee"
    FROM PATENTS.PATENTS.PUBLICATIONS cp,
         LATERAL FLATTEN (INPUT => cp."citation") c_f,
         LATERAL FLATTEN (INPUT => cp."assignee_harmonized") a_f,
         denso_pubs
    WHERE c_f.value:"publication_number"::STRING = denso_pubs."publication_number"
      AND cp."filing_date" > 0
      AND a_f.value:"name"::STRING NOT ILIKE '%DENSO%'
),
primary_cpc AS (                                                -- primary CPC code for citing patents
    SELECT 
           pub."publication_number"               AS "citing_pub",
           cpc_f.value:"code"::STRING             AS "cpc_code"
    FROM PATENTS.PATENTS.PUBLICATIONS pub,
         LATERAL FLATTEN (INPUT => pub."cpc") cpc_f
    WHERE cpc_f.value:"first"::BOOLEAN = TRUE
),
joined AS (                                                     -- merge assignee with CPC subclass
    SELECT 
           ci."citing_assignee",
           SPLIT_PART(pc."cpc_code", '/', 1)      AS "cpc_subclass"
    FROM primary_cpc pc
    JOIN citing_info ci ON ci."citing_pub" = pc."citing_pub"
)
SELECT 
       j."citing_assignee",
       cd."titleFull"                 AS "cpc_subclass_title",
       COUNT(*)                       AS "citation_count"
FROM joined j
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
       ON cd."symbol" = j."cpc_subclass"
GROUP BY j."citing_assignee", cd."titleFull"
ORDER BY "citation_count" DESC
LIMIT 20
[Try to execute]
2025-05-07 01:49:29 - Thread-33 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 7)  Aggregate – count citations by citing assignee and CPC subclass title (excluding DENSO as citer).
WITH denso_pubs AS (
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN (INPUT => p."assignee_harmonized") f
    WHERE f.value:"name"::STRING ILIKE '%DENSO%'
),
citing_info AS (                                                -- citing patents + their assignees
    SELECT DISTINCT 
           cp."publication_number"                AS "citing_pub",
           a_f.value:"name"::STRING               AS "citing_assignee"
    FROM PATENTS.PATENTS.PUBLICATIONS cp,
         LATERAL FLATTEN (INPUT => cp."citation") c_f,
         LATERAL FLATTEN (INPUT => cp."assignee_harmonized") a_f,
         denso_pubs
    WHERE c_f.value:"publication_number"::STRING = denso_pubs."publication_number"
      AND cp."filing_date" > 0
      AND a_f.value:"name"::STRING NOT ILIKE '%DENSO%'
),
primary_cpc AS (                                                -- primary CPC code for citing patents
    SELECT 
           pub."publication_number"               AS "citing_pub",
           cpc_f.value:"code"::STRING             AS "cpc_code"
    FROM PATENTS.PATENTS.PUBLICATIONS pub,
         LATERAL FLATTEN (INPUT => pub."cpc") cpc_f
    WHERE cpc_f.value:"first"::BOOLEAN = TRUE
),
joined AS (                                                     -- merge assignee with CPC subclass
    SELECT 
           ci."citing_assignee",
           SPLIT_PART(pc."cpc_code", '/', 1)      AS "cpc_subclass"
    FROM primary_cpc pc
    JOIN citing_info ci ON ci."citing_pub" = pc."citing_pub"
)
SELECT 
       j."citing_assignee",
       cd."titleFull"                 AS "cpc_subclass_title",
       COUNT(*)                       AS "citation_count"
FROM joined j
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
       ON cd."symbol" = j."cpc_subclass"
GROUP BY j."citing_assignee", cd."titleFull"
ORDER BY "citation_count" DESC
LIMIT 20
Results:
citing_assignee,cpc_subclass_title,citation_count
MAHLE INT GMBH,,7
TOYOTA MOTOR CO LTD,,5
KABKUSHIKI KAISHA KOBE SEIKO S,,3
KIA MOTORS CORP,,3
HONDA MOTOR CO LTD,,3
HYUNDAI MOTOR CO LTD,,3
SUZUKI HISAO,,3
YAZAKI CORP,,2
FUJI ELECTRIC CO LTD,,2
SAHASHI HIDEO,,2
TOYOTA BOSHOKU KK,,2

[Successfully executed]
2025-05-07 01:49:29 - Thread-33 (execute) - INFO - [Try to execute]
--Description: 8)  Count the number of distinct patent publications that are assigned to DENSO.
SELECT COUNT(*) AS "denso_patent_count"
FROM (
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN (INPUT => p."assignee_harmonized") f
    WHERE f.value:"name"::STRING ILIKE '%DENSO%'
)
[Try to execute]
2025-05-07 01:49:32 - Thread-33 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 8)  Count the number of distinct patent publications that are assigned to DENSO.
SELECT COUNT(*) AS "denso_patent_count"
FROM (
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN (INPUT => p."assignee_harmonized") f
    WHERE f.value:"name"::STRING ILIKE '%DENSO%'
)
Results:
denso_patent_count
797

[Successfully executed]
2025-05-07 01:49:32 - Thread-33 (execute) - INFO - [Try to execute]
--Description: 9)  Retrieve the CPC_DEFINITION record for subclass symbol “H04L”.
SELECT "symbol", "titleFull"
FROM PATENTS.PATENTS.CPC_DEFINITION
WHERE "symbol" = 'H04L'
LIMIT 20
[Try to execute]
2025-05-07 01:49:32 - Thread-33 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 9)  Retrieve the CPC_DEFINITION record for subclass symbol “H04L”.
SELECT "symbol", "titleFull"
FROM PATENTS.PATENTS.CPC_DEFINITION
WHERE "symbol" = 'H04L'
LIMIT 20
Results:
symbol,titleFull
H04L,"TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION"

[Successfully executed]
2025-05-07 01:49:32 - Thread-33 (execute) - INFO - [Try to execute]
--Description: 10)  Show several CPC subclass titles whose symbols start with “H04”.
SELECT "symbol", "titleFull"
FROM PATENTS.PATENTS.CPC_DEFINITION
WHERE "symbol" ILIKE 'H04%'
LIMIT 20
[Try to execute]
2025-05-07 01:49:33 - Thread-33 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 10)  Show several CPC subclass titles whose symbols start with “H04”.
SELECT "symbol", "titleFull"
FROM PATENTS.PATENTS.CPC_DEFINITION
WHERE "symbol" ILIKE 'H04%'
LIMIT 20
Results:
symbol,titleFull
H04,ELECTRIC COMMUNICATION TECHNIQUE
H04L,"TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION"
H04R,"LOUDSPEAKERS, MICROPHONES, GRAMOPHONE PICK-UPS OR LIKE ACOUSTIC ELECTROMECHANICAL TRANSDUCERS; DEAF-AID SETS; PUBLIC ADDRESS SYSTEMS"
H04M,TELEPHONIC COMMUNICATION
H04S,STEREOPHONIC SYSTEMS 
H04J,MULTIPLEX COMMUNICATION
H04H,BROADCAST COMMUNICATION
H04T,INDEXING SCHEME RELATING TO STANDARDS FOR ELECTRIC COMMUNICATION TECHNIQUE
H04K,SECRET COMMUNICATION; 

[Successfully executed]
2025-05-07 01:49:33 - Thread-33 (execute) - INFO - itercount: 0
2025-05-07 01:49:33 - Thread-33 (execute) - INFO - [Self-refine]
Table full name: PATENTS.PATENTS.DISCLOSURES_13
Column name: serial_cleaned Type: TEXT
Column name: sso Type: TEXT
Column name: disclosure_event Type: TEXT
Column name: reciprocity Type: TEXT
Column name: patent_owner_harmonized Type: TEXT
Column name: record_id Type: TEXT
Column name: family_id Type: TEXT
Column name: blanket_scope Type: TEXT
Column name: copyright Type: TEXT
Column name: standard Type: TEXT
Column name: licensing_commitment Type: TEXT
Column name: committee_project Type: TEXT
Column name: sc_name Type: TEXT
Column name: blanket_type Type: TEXT
Column name: pub_cleaned Type: TEXT
Column name: third_party Type: TEXT
Column name: wg_name Type: TEXT
Column name: patent_owner_unharmonized Type: TEXT
Column name: tc_name Type: TEXT
Column name: date Type: NUMBER
Sample rows:
[{'family_id': '22549751', 'record_id': 'REC00002', 'disclosure_event': 'DE0001', 'sso': 'ANSI', 'patent_owner_harmonized': '3M', 'patent_owner_unharmonized': '3M', 'date': 19751124, 'standard': 'X3.55;X3.56', 'committee_project': '', 'tc_name': '', 'sc_name': '', 'wg_name': '', 'licensing_commitment': 'FRAND', 'copyright': '', 'blanket_type': '0', 'blanket_scope': '', 'third_party': '0', 'reciprocity': '0', 'serial_cleaned': '', 'pub_cleaned': 'US3692255'}, {'family_id': '23170520', 'record_id': 'REC00001', 'disclosure_event': 'DE0001', 'sso': 'ANSI', 'patent_owner_harmonized': '3M', 'patent_owner_unharmonized': '3M', 'date': 19751124, 'standard': 'X3.55;X3.56', 'committee_project': '', 'tc_name': '', 'sc_name': '', 'wg_name': '', 'licensing_commitment': 'FRAND', 'copyright': '', 'blanket_type': '0', 'blanket_scope': '', 'third_party': '0', 'reciprocity': '0', 'serial_cleaned': '', 'pub_cleaned': 'US3861619'}, {'family_id': '23170520', 'record_id': 'REC00006', 'disclosure_event': 'DE0003', 'sso': 'ANSI', 'patent_owner_harmonized': '3M', 'patent_owner_unharmonized': '3M', 'date': 19890711, 'standard': 'X3.55;X3.56;X3.72;X3.116;X3.127;X3.136', 'committee_project': '', 'tc_name': '', 'sc_name': '', 'wg_name': '', 'licensing_commitment': 'Specific Terms', 'copyright': '', 'blanket_type': '0', 'blanket_scope': '', 'third_party': '0', 'reciprocity': '0', 'serial_cleaned': '', 'pub_cleaned': 'US3861619'}, {'family_id': '22549751', 'record_id': 'REC00008', 'disclosure_event': 'DE0004', 'sso': 'ANSI', 'patent_owner_harmonized': '3M', 'patent_owner_unharmonized': '3M', 'date': 19890906, 'standard': '', 'committee_project': '', 'tc_name': '', 'sc_name': '', 'wg_name': '', 'licensing_commitment': 'FRAND', 'copyright': '', 'blanket_type': '2', 'blanket_scope': '', 'third_party': '0', 'reciprocity': '0', 'serial_cleaned': '', 'pub_cleaned': 'US3692255'}, {'family_id': '23418274', 'record_id': 'REC00024', 'disclosure_event': 'DE0013', 'sso': 'ANSI', 'patent_owner_harmonized': 'Agilent Technologies', 'patent_owner_unharmonized': 'Agilent Technologies', 'date': 20020606, 'standard': '1588', 'committee_project': 'IEEE', 'tc_name': '', 'sc_name': '', 'wg_name': '', 'licensing_commitment': 'FRAND', 'copyright': '', 'blanket_type': '0', 'blanket_scope': '', 'third_party': '0', 'reciprocity': '0', 'serial_cleaned': '', 'pub_cleaned': 'US5566180'}]

--------------------------------------------------
Table full name: PATENTS.PATENTS.PUBLICATIONS
Column name: examiner Type: VARIANT Description: Is this text truncated?
Column name: fterm Type: VARIANT Description: For US publications only, the description in HTML, limited to the first 9 megabytes
Column name: application_number_formatted Type: TEXT Description: Application number, formatted to the patent office format where possible.
Column name: application_number Type: TEXT Description: Patent application number (DOCDB compatible), eg: 'US-87124404-A'. This may not always be set.
Column name: grant_date Type: NUMBER Description: For US publications only, the claims in plain text
Column name: cpc Type: VARIANT Description: Two-letter language code for this text
Column name: locarno Type: VARIANT Description: Localized text
Column name: description_localized_html Type: VARIANT Description: Localized text
Column name: publication_date Type: NUMBER Description: Two-letter language code for this text
Column name: kind_code Type: TEXT Description: Kind code, indicating application, grant, search report, correction, etc. These are different for each country.
Column name: spif_publication_number Type: TEXT Description: SPIF standard (spif.group) publication number, after 2000
Column name: ipc Type: VARIANT Description: Localized text
Column name: pct_number Type: TEXT Description: PCT number for this application if it was part of a PCT filing, eg: 'PCT/EP2008/062623'.
Column name: entity_status Type: TEXT Description: The filing date.
Column name: filing_date Type: NUMBER Description: Is this text truncated?
Column name: abstract_localized Type: VARIANT Description: Localized text
Column name: description_localized Type: VARIANT Description: The publication abstracts in different languages
Column name: assignee Type: VARIANT Description: Localized text
Column name: citation Type: VARIANT Description: Two-letter language code for this text
Column name: fi Type: VARIANT Description: Is this text truncated?
Column name: claims_localized_html Type: VARIANT Description: Is this text truncated?
Column name: inventor_harmonized Type: VARIANT Description: For US publications only, the claims in HTML
Column name: inventor Type: VARIANT Description: Is this text truncated?
Column name: claims_localized Type: VARIANT Description: Two-letter language code for this text
Column name: priority_date Type: NUMBER Description: Localized text
Column name: application_kind Type: TEXT Description: High-level kind of the application: A=patent; U=utility; P=provision; W= PCT; F=design; T=translation.
Column name: priority_claim Type: VARIANT Description: Two-letter language code for this text
Column name: assignee_harmonized Type: VARIANT Description: Two-letter language code for this text
Column name: title_localized Type: VARIANT Description: The publication titles in different languages
Column name: art_unit Type: TEXT Description: The grant date, or 0 if not granted.
Column name: child Type: VARIANT Description: The publication date.
Column name: family_id Type: TEXT Description: Family ID (simple family). Grouping on family ID will return all publications associated with a simple patent family (all publications share the same priority claims).
Column name: spif_application_number Type: TEXT Description: SPIF standard (spif.group) application number, after 2000
Column name: uspc Type: VARIANT Description: For US publications only, the description in plain text, limited to the first 9 megabytes
Column name: publication_number Type: TEXT Description: Patent publication number (DOCDB compatible), eg: 'US-7650331-B1'
Column name: country_code Type: TEXT Description: Country code, eg: 'US', 'EP', etc
Column name: parent Type: VARIANT Description: Is this text truncated?
Sample rows:
[{'publication_number': 'DE-69611147-T2', 'application_number': 'DE-69611147-T', 'country_code': 'DE', 'kind_code': 'T2', 'application_kind': 'T', 'application_number_formatted': 'DE1996611147', 'pct_number': '', 'family_id': '9483724', 'spif_publication_number': '', 'spif_application_number': '', 'title_localized': '[\n  {\n    "language": "de",\n    "text": "Schloss vom Typ eines entkuppelbaren Rotors",\n    "truncated": false\n  }\n]', 'abstract_localized': '[]', 'claims_localized': '[]', 'claims_localized_html': '[]', 'description_localized': '[]', 'description_localized_html': '[]', 'publication_date': 20010621, 'filing_date': 19961015, 'grant_date': 20010621, 'priority_date': 19951018, 'priority_claim': '[\n  {\n    "application_number": "FR-9512326-A",\n    "category": "",\n    "filing_date": 19951018,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  }\n]', 'inventor': '[\n  "MENAGER, CHRISTOPHE",\n  "CANARD, LOUIS",\n  "CADOUOT, PATRICK",\n  "GOURDIN, DOMINIQUE"\n]', 'inventor_harmonized': '[\n  {\n    "country_code": "FR",\n    "name": "MENAGER CHRISTOPHE"\n  },\n  {\n    "country_code": "FR",\n    "name": "CANARD LOUIS"\n  },\n  {\n    "country_code": "FR",\n    "name": "CADOUOT PATRICK"\n  },\n  {\n    "country_code": "FR",\n    "name": "GOURDIN DOMINIQUE"\n  }\n]', 'assignee': '[\n  "Valeo Securite Habitacle, Creteil Cedex"\n]', 'assignee_harmonized': '[\n  {\n    "country_code": "FR",\n    "name": "VALEO SECURITE HABITACLE"\n  }\n]', 'examiner': '[]', 'uspc': '[]', 'ipc': '[\n  {\n    "code": "E05B17/04",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "E05B17/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  }\n]', 'cpc': '[\n  {\n    "code": "E05B77/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "E05B17/0058",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  }\n]', 'fi': '[]', 'fterm': '[]', 'locarno': '[]', 'citation': '[]', 'parent': '[]', 'child': '[]', 'entity_status': '', 'art_unit': ''}, {'publication_number': 'DE-69630331-T2', 'application_number': 'DE-69630331-T', 'country_code': 'DE', 'kind_code': 'T2', 'application_kind': 'T', 'application_number_formatted': 'DE1996630331', 'pct_number': '', 'family_id': '23689246', 'spif_publication_number': '', 'spif_application_number': '', 'title_localized': '[\n  {\n    "language": "de",\n    "text": "Verfahren zur gesicherten Sitzungsschlüsselerzeugung und zur Authentifizierung",\n    "truncated": false\n  }\n]', 'abstract_localized': '[]', 'claims_localized': '[]', 'claims_localized_html': '[]', 'description_localized': '[]', 'description_localized_html': '[]', 'publication_date': 20040729, 'filing_date': 19960416, 'grant_date': 20040729, 'priority_date': 19950421, 'priority_claim': '[\n  {\n    "application_number": "US-42609095-A",\n    "category": "",\n    "filing_date": 19950421,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  }\n]', 'inventor': '[\n  "VANSTONE SCOTT .A, WATERLOO",\n  "MENEZES ALFRED JOHN, AUBURN",\n  "MINGHUA QU,"\n]', 'inventor_harmonized': '[\n  {\n    "country_code": "CA",\n    "name": "VANSTONE SCOTT A WATERLOO"\n  },\n  {\n    "country_code": "US",\n    "name": "MENEZES ALFRED JOHN AUBURN"\n  },\n  {\n    "country_code": "CA",\n    "name": "MINGHUA QU"\n  }\n]', 'assignee': '[\n  "Certicom Corp., Mississauga"\n]', 'assignee_harmonized': '[\n  {\n    "country_code": "CA",\n    "name": "CERTICOM CORP"\n  }\n]', 'examiner': '[]', 'uspc': '[]', 'ipc': '[\n  {\n    "code": "H04L9/08",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G06F7/72",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  }\n]', 'cpc': '[\n  {\n    "code": "G06F7/725",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "H04L9/0844",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "H04L9/0838",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "H04L9/0844",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G06F7/725",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  }\n]', 'fi': '[]', 'fterm': '[]', 'locarno': '[]', 'citation': '[]', 'parent': '[]', 'child': '[]', 'entity_status': '', 'art_unit': ''}, {'publication_number': 'DE-69636755-T2', 'application_number': 'DE-69636755-T', 'country_code': 'DE', 'kind_code': 'T2', 'application_kind': 'T', 'application_number_formatted': 'DE1996636755', 'pct_number': '', 'family_id': '8224764', 'spif_publication_number': '', 'spif_application_number': '', 'title_localized': '[\n  {\n    "language": "de",\n    "text": "Immortalisierte menschliche Epithelzell-Linie",\n    "truncated": false\n  }\n]', 'abstract_localized': '[\n  {\n    "language": "en",\n    "text": "Immortalised human corneal epithelial cell line, comprises cells of the cell line which are capable of stratification and expressing metabolic markers specific for nonimmortalised human epithelial cells, differentiation markers specific for nonimmortalised human corneal epithelial cells and markers specific for an inflammatory reaction.",\n    "truncated": false\n  }\n]', 'claims_localized': '[]', 'claims_localized_html': '[]', 'description_localized': '[]', 'description_localized_html': '[]', 'publication_date': 20071011, 'filing_date': 19961224, 'grant_date': 20071011, 'priority_date': 19961224, 'priority_claim': '[\n  {\n    "application_number": "EP-96203707-A",\n    "category": "",\n    "filing_date": 19961224,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  }\n]', 'inventor': '[\n  "OFFORD CAVIN, ELIZABETH",\n  "TROMVOUKIS, YVONNE",\n  "PFEIFER, ANDREA M.A.",\n  "SHARIF, NAJ"\n]', 'inventor_harmonized': '[\n  {\n    "country_code": "CH",\n    "name": "OFFORD CAVIN ELIZABETH"\n  },\n  {\n    "country_code": "CH",\n    "name": "TROMVOUKIS YVONNE"\n  },\n  {\n    "country_code": "CH",\n    "name": "PFEIFER ANDREA M A"\n  },\n  {\n    "country_code": "US",\n    "name": "SHARIF NAJ"\n  }\n]', 'assignee': '[\n  "Société des Produits Nestlé S.A."\n]', 'assignee_harmonized': '[\n  {\n    "country_code": "CH",\n    "name": "NESTLE SA"\n  }\n]', 'examiner': '[]', 'uspc': '[]', 'ipc': '[\n  {\n    "code": "C12N5/10",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N33/50",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12R1/91",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "C12N15/09",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12N5/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "A61K35/44",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N33/48",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12Q1/68",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12N5/071",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  }\n]', 'cpc': '[\n  {\n    "code": "C12N2503/02",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "C12N5/0621",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12N2503/02",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "C12N2510/04",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "C12N5/0621",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12N2510/04",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  }\n]', 'fi': '[]', 'fterm': '[]', 'locarno': '[]', 'citation': '[]', 'parent': '[]', 'child': '[]', 'entity_status': '', 'art_unit': ''}, {'publication_number': 'DE-69728658-T2', 'application_number': 'DE-69728658-T', 'country_code': 'DE', 'kind_code': 'T2', 'application_kind': 'T', 'application_number_formatted': 'DE1997628658', 'pct_number': '', 'family_id': '24437397', 'spif_publication_number': '', 'spif_application_number': '', 'title_localized': '[\n  {\n    "language": "de",\n    "text": "Lithographische dünne filmstruktur und diese enthaltende druckplatte",\n    "truncated": false\n  }\n]', 'abstract_localized': '[\n  {\n    "language": "en",\n    "text": "A lithographic laser imageable thin film structure comprising a substrate having first and second surfaces. A vacuum-deposited metal layer is carried by the first surface of the substrate. A layer of semiconductor material is adhered to and overlies the metal layer. The metal layer and the semiconductor material have thicknesses which are selected to maximize absorption of laser energy impinging on the same.",\n    "truncated": false\n  }\n]', 'claims_localized': '[]', 'claims_localized_html': '[]', 'description_localized': '[]', 'description_localized_html': '[]', 'publication_date': 20040812, 'filing_date': 19970115, 'grant_date': 20040812, 'priority_date': 19960229, 'priority_claim': '[\n  {\n    "application_number": "US-9700408-W",\n    "category": "",\n    "filing_date": 19970115,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  },\n  {\n    "application_number": "US-60864696-A",\n    "category": "",\n    "filing_date": 19960229,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  }\n]', 'inventor': '[\n  "FISHER, P.",\n  "PHILLIPS, W.",\n  "DAVIS, F.",\n  "LEGALLEE, CHARLOTTE"\n]', 'inventor_harmonized': '[\n  {\n    "country_code": "US",\n    "name": "FISHER P"\n  },\n  {\n    "country_code": "US",\n    "name": "PHILLIPS W"\n  },\n  {\n    "country_code": "US",\n    "name": "DAVIS F"\n  },\n  {\n    "country_code": "US",\n    "name": "LEGALLEE CHARLOTTE"\n  }\n]', 'assignee': '[\n  "Presstek, Inc."\n]', 'assignee_harmonized': '[\n  {\n    "country_code": "US",\n    "name": "PRESSTEK INC"\n  }\n]', 'examiner': '[]', 'uspc': '[]', 'ipc': '[\n  {\n    "code": "B32B15/04",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B41C1/10",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B41N1/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B41N1/14",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B27/20",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B7/02",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  }\n]', 'cpc': '[\n  {\n    "code": "B32B15/04",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12674",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B32B27/20",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/31678",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12458",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/31678",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12458",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B32B15/20",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/31504",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B41N1/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B15/09",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B2367/00",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B32B27/20",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12493",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B32B15/043",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B27/36",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B27/08",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B15/04",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12493",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12674",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B41C1/1033",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B41N1/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12528",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/31504",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B41C1/1033",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B32B2311/24",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12528",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  }\n]', 'fi': '[]', 'fterm': '[]', 'locarno': '[]', 'citation': '[]', 'parent': '[]', 'child': '[]', 'entity_status': '', 'art_unit': ''}, {'publication_number': 'DE-69807539-T2', 'application_number': 'DE-69807539-T', 'country_code': 'DE', 'kind_code': 'T2', 'application_kind': 'T', 'application_number_formatted': 'DE1998607539', 'pct_number': '', 'family_id': '11877005', 'spif_publication_number': '', 'spif_application_number': '', 'title_localized': '[\n  {\n    "language": "de",\n    "text": "Automatisches Analysegerät",\n    "truncated": false\n  }\n]', 'abstract_localized': '[]', 'claims_localized': '[]', 'claims_localized_html': '[]', 'description_localized': '[]', 'description_localized_html': '[]', 'publication_date': 20030116, 'filing_date': 19980120, 'grant_date': 20030116, 'priority_date': 19970129, 'priority_claim': '[\n  {\n    "application_number": "JP-1501397-A",\n    "category": "",\n    "filing_date": 19970129,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  }\n]', 'inventor': '[\n  "HANAWA, MASAAKI",\n  "MITSUMAKI, HIROSHI",\n  "OHISHI, TADASHI",\n  "KAI, SUSUMU",\n  "WATANABE, HIROSHI"\n]', 'inventor_harmonized': '[\n  {\n    "country_code": "JP",\n    "name": "HANAWA MASAAKI"\n  },\n  {\n    "country_code": "JP",\n    "name": "MITSUMAKI HIROSHI"\n  },\n  {\n    "country_code": "JP",\n    "name": "OHISHI TADASHI"\n  },\n  {\n    "country_code": "JP",\n    "name": "KAI SUSUMU"\n  },\n  {\n    "country_code": "JP",\n    "name": "WATANABE HIROSHI"\n  }\n]', 'assignee': '[\n  "Hitachi, Ltd."\n]', 'assignee_harmonized': '[\n  {\n    "country_code": "JP",\n    "name": "HITACHI LTD"\n  }\n]', 'examiner': '[]', 'uspc': '[]', 'ipc': '[\n  {\n    "code": "G01N35/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N35/02",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N35/04",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  }\n]', 'cpc': '[\n  {\n    "code": "Y10T436/115831",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/114165",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/0465",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N35/026",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/0467",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/113332",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/114165",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N35/00603",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/11",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/00326",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/0467",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N35/00603",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/00326",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/0465",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N35/026",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/11",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/113332",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/115831",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  }\n]', 'fi': '[]', 'fterm': '[]', 'locarno': '[]', 'citation': '[]', 'parent': '[]', 'child': '[]', 'entity_status': '', 'art_unit': ''}]

--------------------------------------------------
Table full name: PATENTS.PATENTS.CPC_DEFINITION
Column name: status Type: TEXT
Column name: precedenceLimitingReferences Type: VARIANT
Column name: rules Type: VARIANT
Column name: childGroups Type: VARIANT
Column name: scopeLimitingReferences Type: VARIANT
Column name: level Type: FLOAT
Column name: titlePart Type: VARIANT
Column name: residualReferences Type: VARIANT
Column name: definition Type: VARIANT
Column name: breakdownCode Type: BOOLEAN
Column name: limitingReferences Type: VARIANT
Column name: glossary Type: VARIANT
Column name: applicationReferences Type: VARIANT
Column name: notAllocatable Type: BOOLEAN
Column name: titleFull Type: TEXT
Column name: dateRevised Type: FLOAT
Column name: informativeReferences Type: VARIANT
Column name: symbol Type: TEXT
Column name: synonyms Type: VARIANT
Column name: children Type: VARIANT
Column name: parents Type: VARIANT
Column name: ipcConcordant Type: TEXT
Sample rows:
[{'applicationReferences': '[]', 'breakdownCode': True, 'childGroups': '[]', 'children': '[]', 'dateRevised': 20130101.0, 'definition': '[]', 'glossary': '[]', 'informativeReferences': '[]', 'ipcConcordant': 'CPCONLY', 'level': 9.0, 'limitingReferences': '[]', 'notAllocatable': False, 'parents': '[\n  "A01K2227/10",\n  "A01K2227/00",\n  "A01K",\n  "A01",\n  "A"\n]', 'precedenceLimitingReferences': '[]', 'residualReferences': '[]', 'rules': '[]', 'scopeLimitingReferences': '[]', 'status': 'published', 'symbol': 'A01K2227/108', 'synonyms': '[]', 'titleFull': 'Swine', 'titlePart': '[\n  "Swine"\n]'}, {'applicationReferences': '[]', 'breakdownCode': True, 'childGroups': '[]', 'children': '[]', 'dateRevised': 20130101.0, 'definition': '[]', 'glossary': '[]', 'informativeReferences': '[]', 'ipcConcordant': 'CPCONLY', 'level': 9.0, 'limitingReferences': '[]', 'notAllocatable': False, 'parents': '[\n  "A01K2227/10",\n  "A01K2227/00",\n  "A01K",\n  "A01",\n  "A"\n]', 'precedenceLimitingReferences': '[]', 'residualReferences': '[]', 'rules': '[]', 'scopeLimitingReferences': '[]', 'status': 'published', 'symbol': 'A01K2227/105', 'synonyms': '[]', 'titleFull': 'Murine', 'titlePart': '[\n  "Murine"\n]'}, {'applicationReferences': '[]', 'breakdownCode': True, 'childGroups': '[]', 'children': '[]', 'dateRevised': 20130101.0, 'definition': '[]', 'glossary': '[]', 'informativeReferences': '[]', 'ipcConcordant': 'CPCONLY', 'level': 9.0, 'limitingReferences': '[]', 'notAllocatable': False, 'parents': '[\n  "A01K2227/10",\n  "A01K2227/00",\n  "A01K",\n  "A01",\n  "A"\n]', 'precedenceLimitingReferences': '[]', 'residualReferences': '[]', 'rules': '[]', 'scopeLimitingReferences': '[]', 'status': 'published', 'symbol': 'A01K2227/107', 'synonyms': '[]', 'titleFull': 'Rabbit', 'titlePart': '[\n  "Rabbit"\n]'}, {'applicationReferences': '[]', 'breakdownCode': True, 'childGroups': '[]', 'children': '[]', 'dateRevised': 20130101.0, 'definition': '[]', 'glossary': '[]', 'informativeReferences': '[]', 'ipcConcordant': 'CPCONLY', 'level': 9.0, 'limitingReferences': '[]', 'notAllocatable': False, 'parents': '[\n  "A01K2267/02",\n  "A01K2267/00",\n  "A01K",\n  "A01",\n  "A"\n]', 'precedenceLimitingReferences': '[]', 'residualReferences': '[]', 'rules': '[]', 'scopeLimitingReferences': '[]', 'status': 'published', 'symbol': 'A01K2267/025', 'synonyms': '[]', 'titleFull': 'Animal producing cells or organs for transplantation', 'titlePart': '[\n  "Animal producing cells or organs for transplantation"\n]'}, {'applicationReferences': '[]', 'breakdownCode': True, 'childGroups': '[]', 'children': '[\n  "A01K2267/0312",\n  "A01K2267/0318",\n  "A01K2267/0325"\n]', 'dateRevised': 20130101.0, 'definition': '[]', 'glossary': '[]', 'informativeReferences': '[]', 'ipcConcordant': 'CPCONLY', 'level': 9.0, 'limitingReferences': '[]', 'notAllocatable': False, 'parents': '[\n  "A01K2267/03",\n  "A01K2267/00",\n  "A01K",\n  "A01",\n  "A"\n]', 'precedenceLimitingReferences': '[]', 'residualReferences': '[]', 'rules': '[]', 'scopeLimitingReferences': '[]', 'status': 'published', 'symbol': 'A01K2267/0306', 'synonyms': '[]', 'titleFull': 'Animal model for genetic diseases', 'titlePart': '[\n  "Animal model for genetic diseases"\n]'}]

--------------------------------------------------
External knowledge that might be helpful: 
### IPC Codes: Handling Main IPC Code Selection

When dealing with the `ipc` field in the `patents-public-data.patents.publications` dataset, it is important to understand the structure of this field, especially the subfield `first`. This subfield is a boolean that indicates whether a given IPC code is the main code for the publication number in question. This is crucial because each patent publication can be associated with multiple IPC codes, signifying the various aspects of the technology covered by the patent.

However, not every publication in the dataset has a designated main IPC code. This lack of a clearly identified main IPC code complicates the process of determining the most relevant IPC code for each publication, as selecting a single IPC code from multiple possibilities without clear prioritization can lead to inconsistent or skewed analyses.

This approach ensures a more consistent and representative selection of IPC codes across the dataset, facilitating more accurate and meaningful analysis of patent trends and classifications. By focusing on the most frequently occurring 4-digit IPC code, the view helps overcome the limitations posed by the absence of a designated main IPC code, thereby enhancing the reliability of patent-related studies and insights derived from this data.

Here is an example

```
SELECT 
    t1.publication_number, 
    SUBSTR(ipc_u.code, 0, 4) as ipc4, 
    COUNT(
    SUBSTR(ipc_u.code, 0, 4)
    ) as ipc4_count 
FROM 
    `patents-public-data.patents.publications` t1, 
    UNNEST(ipc) AS ipc_u 
GROUP BY 
    t1.publication_number, 
    ipc4

```



# Text Embeddings (Similarity)

Patent documents are rich with textual data. In fact, most of the information contained in a patent document is text. This includes the `abstract_localized`, `description_localized`, and `claims_localized`. Textual data can be a powerful tool to analyze and compare patent scope and content across patents. However, before being able to use textual data, it needs to be vectorized or transformed into text embeddings that can be used by machine learning models. Therefore, creating text embeddings from the textual data of patents is necessary to compare patent contents. Technically speaking, running an NLP algorithm that creates embeddings for all U.S. patents is computationally difficult.

Nevertheless, Google runs their own machine learning algorithm which transforms patent text metadata into text embeddings which they report in `patents-public-data.google_patents_research.publications` table. The textual embeddings of one patent, without any knowledge on the algorithm being used to create them, are meaningless on their own. However, the embeddings are powerful when it comes to comparing textual content of two or more patents. Embeddings can be used to calculate a similarity score between any two patents. This similarity score is calculated by applying the dot product of the embeddings vector of the patents, as shown below:

The similarity \( \text{Similarty}_{i,k} \) between two patents \( i \) and \( k \) is calculated as the dot product of their embedding vectors:

\[
\text{Similarty}_{i,k} = \mathbf{v}_i \cdot \mathbf{v}_k
\]

where

\[
\mathbf{v}_i = [v_{i1}, v_{i2}, v_{i3}, \ldots, v_{iN}]
\]
and
\[
\mathbf{v}_k = [v_{k1}, v_{k2}, v_{k3}, \ldots, v_{kN}]
\]

are the embedding vectors for patents \( i \) and \( k \) respectively. The higher the dot product, the more similar the patents.





# Originality (Trajtenberg)

One of the most important measures of a patent is "basicness". The aspects of basicness are tough to measure. Nevertheless, some literature finds that important aspects of these measures are embodied in the relationship between the invention and the technological predcessors and successors it is connected to through, for example, patent citations. We can thus use patent citations to construct measures that identify basicness and appropriability. Trajtenberg et al. 1997 provide a number of these measures. They distinguish between:

1. Forward-looking measures: measures that are derived from the relationship between an invention and subsequent technologies that build upon it. These measures are thus constructed from the forward citations. One example of a forward-looking basicness measure they provide is Generality, which is calculated as:

\[
\text{GENERALITY}_i = 1 - \sum_{k=1}^{N_i} \left( \frac{\text{NCITING}_{G_k}}{\text{NCITING}_i} \right)
\]


2. Backward-looking measures: measures that are derived from the relationship between a given patent and the body of knowledge that preceded it. These measure are thus constructed from the backward citations. One example of a backward-looking basicness measure they provide is Orginality, which is calculated as:

\[
\text{ORIGINALITY}_i = 1 - \sum_{k=1}^{N_i} \left( \frac{\text{NCITED}_{i,k}}{\text{NCITED}_i} \right)
\]

With **NCITING** and **NCITED** defined as the number of patents citing the focal patent and the number of patents cited by the focal patent, respectively. Index `i` corresponds to the focal patent considered, and `k` is the index of patent classes. For example, **NCITED_2,3** refers to the number of patents in patent class 3 and cited by our focal patent 2.


The table structure information is ({database name: {schema name: [table name]}}): 
{'PATENTS': {'PATENTS': ['DISCLOSURES_13', 'PUBLICATIONS', 'CPC_DEFINITION']}}

Some few-shot examples after column exploration may be helpful:
Query:
--Description: 1)  Show some patent publications whose harmonised assignee name contains “DENSO”.
SELECT DISTINCT 
       t."publication_number"
FROM PATENTS.PATENTS.PUBLICATIONS t , 
     LATERAL FLATTEN ( input => t."assignee_harmonized") f
WHERE f.value:"name"::STRING ILIKE '%DENSO%'     
LIMIT 20;
Answer:
publication_number
JP-H08140322-A
JP-2006291728-A
JP-2010180743-A
WO-2024062849-A1
US-2008236929-A1
DE-102004042762-A1
US-2015207745-A1
US-11639192-B2
JP-2009024674-A
JP-2008014215-A
JP-2017211031-A
JP-H05196383-A
JP-2000025574-A
JP-2010230654-A
JP-S61108026-A
JP-2022186279-A
CN-110071955-A
JP-2019066047-A
US-10164558-B2
JP-H10206076-A
Query:
--Description: 2)  Look at how a publication stores the cited-patent numbers (flatten the “citation” array).
WITH denso_pubs AS (
     SELECT DISTINCT 
            t."publication_number" 
     FROM PATENTS.PATENTS.PUBLICATIONS t , 
          LATERAL FLATTEN ( input => t."assignee_harmonized") f
     WHERE f.value:"name"::STRING ILIKE '%DENSO%' )
SELECT cite_t."publication_number"  AS "citing_pub",
       c.value:"publication_number"::STRING AS "cited_pub"
FROM PATENTS.PATENTS.PUBLICATIONS cite_t ,
     LATERAL FLATTEN ( input => cite_t."citation") c ,
     denso_pubs
WHERE c.value:"publication_number"::STRING = denso_pubs."publication_number"
LIMIT 20;
Answer:
citing_pub,cited_pub
US-2009017328-A1,US-5171377-A
JP-2020117051-A,JP-2008238870-A
US-10774689-B2,US-2007044473-A1
CN-108292892-A,JP-2009071935-A
US-8807647-B2,JP-2010104485-A
CN-109203994-A,JP-2008089479-A
DE-102006000312-B4,EP-1672346-A2
US-10616959-B2,US-6178292-B1
US-2015369515-A1,US-6178292-B1
US-9151260-B2,JP-2004332657-A
JP-2006133447-A,JP-S62125273-A
Query:
--Description: 3)  Retrieve the assignees of patents that cite a DENSO patent (exclude assignees containing “DENSO” and keep only valid filing dates).
WITH denso_pubs AS (
     SELECT DISTINCT t."publication_number"
     FROM PATENTS.PATENTS.PUBLICATIONS t , 
          LATERAL FLATTEN ( input => t."assignee_harmonized") f
     WHERE f.value:"name"::STRING ILIKE '%DENSO%' )
SELECT DISTINCT 
       citet."publication_number"                    AS "citing_pub",
       ass_f.value:"name"::STRING                    AS "citing_assignee"
FROM PATENTS.PATENTS.PUBLICATIONS citet ,
     LATERAL FLATTEN ( input => citet."citation") cit_f ,
     LATERAL FLATTEN ( input => citet."assignee_harmonized") ass_f ,
     denso_pubs
WHERE cit_f.value:"publication_number"::STRING = denso_pubs."publication_number"
  AND citet."filing_date" > 0
  AND ass_f.value:"name"::STRING NOT ILIKE '%DENSO%'  
LIMIT 20;
Answer:
citing_pub,citing_assignee
US-10774689-B2,MAHLE INT GMBH
DE-102006000312-B4,TOYOTA MOTOR CO LTD
US-10616959-B2,MAHLE INT GMBH
CN-109203994-A,YAZAKI CORP
US-9151260-B2,TOYOTA MOTOR CO LTD
US-9151260-B2,SUZUKI HISAO
US-8807647-B2,SAHASHI HIDEO
US-2009017328-A1,KABKUSHIKI KAISHA KOBE SEIKO S
US-8807647-B2,TOYOTA BOSHOKU KK
US-2015369515-A1,KIA MOTORS CORP
JP-2006133447-A,SEIKO EPSON CORP
JP-2020117051-A,HONDA MOTOR CO LTD
US-2015369515-A1,HYUNDAI MOTOR CO LTD
Query:
--Description: 4)  Examine how the “cpc” array marks the primary CPC code (keep entries where "first" = TRUE).
SELECT 
       citet."publication_number"                              AS "pub_num",
       cpc_f.value:"code"::STRING                              AS "cpc_code",
       cpc_f.value:"first"::BOOLEAN                            AS "is_first"
FROM PATENTS.PATENTS.PUBLICATIONS citet ,
     LATERAL FLATTEN ( input => citet."cpc") cpc_f
WHERE cpc_f.value:"first"::BOOLEAN = TRUE
LIMIT 20;
Answer:
pub_num,cpc_code,is_first
US-303290-A,B68C1/12,True
US-2076948-A,E06B7/08,True
US-2076948-A,E06B7/08,True
US-2228029-A,B61F9/00,True
US-2228029-A,B61F9/00,True
US-2331923-A,C10M1/08,True
US-2331923-A,C10M1/08,True
US-3929068-A,B32B27/10,True
US-3929068-A,B05C17/06,True
US-2742339-A,G01D15/16,True
US-2742339-A,G01D15/16,True
US-2963719-A,A43D113/00,True
US-2963719-A,A43D113/00,True
US-103059-A,F24H1/40,True
US-1096365-A,B62B5/0404,True
Query:
--Description: 6)  Join the primary CPC subclasses for each citing patent with the full CPC subclass titles.
WITH denso_pubs AS (                                            -- all publications with “DENSO” assignee
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN (INPUT => p."assignee_harmonized") f
    WHERE f.value:"name"::STRING ILIKE '%DENSO%'
),
citing_info AS (                                                -- citing patents + their (non-DENSO) assignee names
    SELECT DISTINCT 
           cp."publication_number"                AS "citing_pub",
           a_f.value:"name"::STRING               AS "citing_assignee"
    FROM PATENTS.PATENTS.PUBLICATIONS cp,
         LATERAL FLATTEN (INPUT => cp."citation") c_f,
         LATERAL FLATTEN (INPUT => cp."assignee_harmonized") a_f,
         denso_pubs
    WHERE c_f.value:"publication_number"::STRING = denso_pubs."publication_number"
      AND cp."filing_date" > 0
      AND a_f.value:"name"::STRING NOT ILIKE '%DENSO%'
),
primary_cpc AS (                                                -- primary CPC code for every citing patent
    SELECT 
           pub."publication_number"               AS "citing_pub",
           cpc_f.value:"code"::STRING             AS "cpc_code"
    FROM PATENTS.PATENTS.PUBLICATIONS pub,
         LATERAL FLATTEN (INPUT => pub."cpc") cpc_f
    WHERE cpc_f.value:"first"::BOOLEAN = TRUE
)
SELECT 
       ci."citing_assignee",
       pc."cpc_code",
       SPLIT_PART(pc."cpc_code", '/', 1)          AS "cpc_subclass",
       cd."titleFull"
FROM primary_cpc pc
JOIN citing_info  ci ON ci."citing_pub" = pc."citing_pub"
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
       ON cd."symbol" = SPLIT_PART(pc."cpc_code", '/', 1)
LIMIT 20
Answer:
citing_assignee,cpc_code,cpc_subclass,titleFull
KIA MOTORS CORP,F24H1/0018,F24H1,
HYUNDAI MOTOR CO LTD,F24H1/0018,F24H1,
KIA MOTORS CORP,F24H3/0429,F24H3,
HYUNDAI MOTOR CO LTD,F24H3/0429,F24H3,
KIA MOTORS CORP,F24H3/0429,F24H3,
HYUNDAI MOTOR CO LTD,F24H3/0429,F24H3,
SUZUKI HISAO,F02M63/0033,F02M63,
TOYOTA MOTOR CO LTD,F02M63/0033,F02M63,
SUZUKI HISAO,F02M63/0033,F02M63,
TOYOTA MOTOR CO LTD,F02M63/0033,F02M63,
Query:
--Description: 7)  Aggregate – count citations by citing assignee and CPC subclass title (excluding DENSO as citer).
WITH denso_pubs AS (
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN (INPUT => p."assignee_harmonized") f
    WHERE f.value:"name"::STRING ILIKE '%DENSO%'
),
citing_info AS (                                                -- citing patents + their assignees
    SELECT DISTINCT 
           cp."publication_number"                AS "citing_pub",
           a_f.value:"name"::STRING               AS "citing_assignee"
    FROM PATENTS.PATENTS.PUBLICATIONS cp,
         LATERAL FLATTEN (INPUT => cp."citation") c_f,
         LATERAL FLATTEN (INPUT => cp."assignee_harmonized") a_f,
         denso_pubs
    WHERE c_f.value:"publication_number"::STRING = denso_pubs."publication_number"
      AND cp."filing_date" > 0
      AND a_f.value:"name"::STRING NOT ILIKE '%DENSO%'
),
primary_cpc AS (                                                -- primary CPC code for citing patents
    SELECT 
           pub."publication_number"               AS "citing_pub",
           cpc_f.value:"code"::STRING             AS "cpc_code"
    FROM PATENTS.PATENTS.PUBLICATIONS pub,
         LATERAL FLATTEN (INPUT => pub."cpc") cpc_f
    WHERE cpc_f.value:"first"::BOOLEAN = TRUE
),
joined AS (                                                     -- merge assignee with CPC subclass
    SELECT 
           ci."citing_assignee",
           SPLIT_PART(pc."cpc_code", '/', 1)      AS "cpc_subclass"
    FROM primary_cpc pc
    JOIN citing_info ci ON ci."citing_pub" = pc."citing_pub"
)
SELECT 
       j."citing_assignee",
       cd."titleFull"                 AS "cpc_subclass_title",
       COUNT(*)                       AS "citation_count"
FROM joined j
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
       ON cd."symbol" = j."cpc_subclass"
GROUP BY j."citing_assignee", cd."titleFull"
ORDER BY "citation_count" DESC
LIMIT 20
Answer:
citing_assignee,cpc_subclass_title,citation_count
MAHLE INT GMBH,,7
TOYOTA MOTOR CO LTD,,5
KABKUSHIKI KAISHA KOBE SEIKO S,,3
KIA MOTORS CORP,,3
HONDA MOTOR CO LTD,,3
HYUNDAI MOTOR CO LTD,,3
SUZUKI HISAO,,3
YAZAKI CORP,,2
FUJI ELECTRIC CO LTD,,2
SAHASHI HIDEO,,2
TOYOTA BOSHOKU KK,,2
Query:
--Description: 8)  Count the number of distinct patent publications that are assigned to DENSO.
SELECT COUNT(*) AS "denso_patent_count"
FROM (
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN (INPUT => p."assignee_harmonized") f
    WHERE f.value:"name"::STRING ILIKE '%DENSO%'
)
Answer:
denso_patent_count
797
Query:
--Description: 9)  Retrieve the CPC_DEFINITION record for subclass symbol “H04L”.
SELECT "symbol", "titleFull"
FROM PATENTS.PATENTS.CPC_DEFINITION
WHERE "symbol" = 'H04L'
LIMIT 20
Answer:
symbol,titleFull
H04L,"TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION"
Query:
--Description: 10)  Show several CPC subclass titles whose symbols start with “H04”.
SELECT "symbol", "titleFull"
FROM PATENTS.PATENTS.CPC_DEFINITION
WHERE "symbol" ILIKE 'H04%'
LIMIT 20
Answer:
symbol,titleFull
H04,ELECTRIC COMMUNICATION TECHNIQUE
H04L,"TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION"
H04R,"LOUDSPEAKERS, MICROPHONES, GRAMOPHONE PICK-UPS OR LIKE ACOUSTIC ELECTROMECHANICAL TRANSDUCERS; DEAF-AID SETS; PUBLIC ADDRESS SYSTEMS"
H04M,TELEPHONIC COMMUNICATION
H04S,STEREOPHONIC SYSTEMS 
H04J,MULTIPLEX COMMUNICATION
H04H,BROADCAST COMMUNICATION
H04T,INDEXING SCHEME RELATING TO STANDARDS FOR ELECTRIC COMMUNICATION TECHNIQUE
H04K,SECRET COMMUNICATION; 
Task: Which assignees, excluding DENSO CORP itself, have cited patents assigned to DENSO CORP, and what are the titles of the primary CPC subclasses associated with these citations? Provide the name of each citing assignee (excluding DENSO CORP), the full title of the primary CPC subclass (based on the first CPC code), and the count of citations grouped by the citing assignee and the CPC subclass title. Ensure that only citations of patents with valid filing dates are considered, and focus on the first CPC code for each citing patent. The results should specifically exclude DENSO CORP as a citing assignee.

Please think step by step and answer only one complete SQL in snowflake dialect in ```sql``` format.
SQL usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'PATENTS': {'PATENTS': ['DISCLOSURES_13', 'PUBLICATIONS', 'CPC_DEFINITION']}}

When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
If the task description does not specify the number of decimal places, retain all decimals to four places.

[Self-refine]
2025-05-07 01:50:42 - Thread-33 (execute) - INFO - [Try to run SQL in self-refine]
```sql
WITH denso_pubs AS (                                        -- all publications assigned to DENSO
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p ,
         LATERAL FLATTEN ( INPUT => p."assignee_harmonized") f
    WHERE f.value:"name"::STRING ILIKE '%DENSO%'
),
citations_to_denso AS (                                     -- citing patents + their assignees
    SELECT DISTINCT 
           cp."publication_number"              AS "citing_pub",
           ass_f.value:"name"::STRING           AS "citing_assignee"
    FROM PATENTS.PATENTS.PUBLICATIONS cp ,
         LATERAL FLATTEN ( INPUT => cp."citation")        cit_f ,
         LATERAL FLATTEN ( INPUT => cp."assignee_harmonized") ass_f ,
         denso_pubs
    WHERE cit_f.value:"publication_number"::STRING = denso_pubs."publication_number"
      AND cp."filing_date" > 0                              -- keep only valid filing dates
      AND ass_f.value:"name"::STRING NOT ILIKE '%DENSO%'    -- exclude DENSO as citer
),
primary_cpc AS (                                            -- first / primary CPC code of each citing patent
    SELECT 
           pub."publication_number"            AS "citing_pub",
           cpc_f.value:"code"::STRING          AS "cpc_code"
    FROM PATENTS.PATENTS.PUBLICATIONS pub ,
         LATERAL FLATTEN ( INPUT => pub."cpc") cpc_f
    WHERE cpc_f.value:"first"::BOOLEAN = TRUE
),
joined AS (                                                 -- merge assignee with CPC subclass
    SELECT 
           ctd."citing_assignee",
           SPLIT_PART(pc."cpc_code", '/', 1)   AS "cpc_subclass"
    FROM citations_to_denso ctd
    JOIN primary_cpc      pc
      ON pc."citing_pub" = ctd."citing_pub"
)
SELECT 
       j."citing_assignee",
       COALESCE(cd."titleFull", '')            AS "cpc_subclass_title",
       COUNT(*)                                AS "citation_count"
FROM joined j
LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
       ON cd."symbol" = j."cpc_subclass"
GROUP BY j."citing_assignee", cd."titleFull"
ORDER BY "citation_count" DESC NULLS LAST;
```
[Try to run SQL in self-refine]
2025-05-07 01:51:18 - Thread-33 (execute) - INFO - Total iteration counts: 0
