2025-05-07 01:34:50 - Thread-37 (execute) - INFO - [Exploration]
```sql
--Description: 1) Inspect a handful of publications that list “DENSO CORP” as (one of) the harmonised assignees
SELECT 
    t."publication_number"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."assignee_harmonized") a
WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
LIMIT 20;
```

```sql
--Description: 2) Examine how individual backward-citation objects look (each contains a "publication_number" key)
SELECT 
    t."publication_number"          AS "citing_pub",
    c.value:"publication_number"::STRING AS "cited_pub",
    c.value                         AS "raw_citation_json"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
WHERE c.value:"publication_number" IS NOT NULL
LIMIT 20;
```

```sql
--Description: 3) List publication numbers that CITE any patent assigned to DENSO CORP
SELECT DISTINCT
    t."publication_number" AS "citing_pub"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
JOIN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d,
             LATERAL FLATTEN(INPUT => d."assignee_harmonized") a
        WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
     ) dp
  ON c.value:"publication_number"::STRING = dp."publication_number"
LIMIT 20;
```

```sql
--Description: 4) Retrieve distinct assignee names of those citing publications (excluding DENSO)
SELECT DISTINCT
    ass.value:"name"::STRING AS "citing_assignee"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
JOIN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d,
             LATERAL FLATTEN(INPUT => d."assignee_harmonized") a
        WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
     ) dp
  ON c.value:"publication_number"::STRING = dp."publication_number",
     LATERAL FLATTEN(INPUT => t."assignee_harmonized") ass
WHERE ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
LIMIT 20;
```

```sql
--Description: 5) Check the structure of the CPC array and pick the first (primary) CPC code for any publication
SELECT 
    t."publication_number",
    cp.value:"code"::STRING AS "first_cpc_code",
    cp.SEQ
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."cpc") cp
WHERE cp.SEQ = 0           -- first element only
LIMIT 20;
```

```sql
--Description: 6) Join the first CPC code to the CPC definition table to obtain its full title
SELECT 
    cp.value:"code"::STRING AS "first_cpc_code",
    cd."titleFull"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."cpc") cp
JOIN PATENTS.PATENTS.CPC_DEFINITION cd
  ON cd."symbol" = cp.value:"code"::STRING
WHERE cp.SEQ = 0
LIMIT 20;
```

```sql
--Description: 7) Combine citations-to-DENSO with citing assignee names and their primary CPC codes (no filing-date filter yet)
SELECT 
    t."publication_number"                         AS "citing_pub",
    ass.value:"name"::STRING                       AS "citing_assignee",
    cp.value:"code"::STRING                        AS "first_cpc_code"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
JOIN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d,
             LATERAL FLATTEN(INPUT => d."assignee_harmonized") a
        WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
     ) dp
  ON c.value:"publication_number"::STRING = dp."publication_number",
     LATERAL FLATTEN(INPUT => t."assignee_harmonized") ass,
     LATERAL FLATTEN(INPUT => t."cpc") cp
WHERE cp.SEQ = 0
  AND ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
LIMIT 20;
```

```sql
--Description: 8) Add the filing-date validity check (filing_date > 0) to the previous selection
SELECT 
    t."publication_number"                         AS "citing_pub",
    ass.value:"name"::STRING                       AS "citing_assignee",
    cp.value:"code"::STRING                        AS "first_cpc_code"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
JOIN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d,
             LATERAL FLATTEN(INPUT => d."assignee_harmonized") a
        WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
     ) dp
  ON c.value:"publication_number"::STRING = dp."publication_number",
     LATERAL FLATTEN(INPUT => t."assignee_harmonized") ass,
     LATERAL FLATTEN(INPUT => t."cpc") cp
WHERE cp.SEQ = 0
  AND t."filing_date" > 0
  AND ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
LIMIT 20;
```

```sql
--Description: 9) Attach CPC titles and group by (citing assignee, CPC title) to count distinct citing publications
SELECT 
    ass.value:"name"::STRING   AS "citing_assignee",
    cd."titleFull"             AS "cpc_title",
    COUNT(DISTINCT t."publication_number") AS "citation_count"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
JOIN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d,
             LATERAL FLATTEN(INPUT => d."assignee_harmonized") a
        WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
     ) dp
  ON c.value:"publication_number"::STRING = dp."publication_number",
     LATERAL FLATTEN(INPUT => t."assignee_harmonized") ass,
     LATERAL FLATTEN(INPUT => t."cpc") cp
JOIN PATENTS.PATENTS.CPC_DEFINITION cd
  ON cd."symbol" = cp.value:"code"::STRING
WHERE cp.SEQ = 0
  AND t."filing_date" > 0
  AND ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
GROUP BY ass.value:"name"::STRING, cd."titleFull"
ORDER BY "citation_count" DESC
LIMIT 20;
```

```sql
--Description: 10) Display, for one selected assignee, the detailed list of its citing publications and the CPC titles
SELECT 
    ass.value:"name"::STRING           AS "citing_assignee",
    t."publication_number",
    cp.value:"code"::STRING            AS "first_cpc_code",
    cd."titleFull"                     AS "cpc_title"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
JOIN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d,
             LATERAL FLATTEN(INPUT => d."assignee_harmonized") a
        WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
     ) dp
  ON c.value:"publication_number"::STRING = dp."publication_number",
     LATERAL FLATTEN(INPUT => t."assignee_harmonized") ass,
     LATERAL FLATTEN(INPUT => t."cpc") cp
JOIN PATENTS.PATENTS.CPC_DEFINITION cd
  ON cd."symbol" = cp.value:"code"::STRING
WHERE cp.SEQ = 0
  AND t."filing_date" > 0
  AND ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
  AND ass.value:"name"::STRING ILIKE '%TOYOTA%'        -- example focus on one assignee; adjust as desired
LIMIT 20;
```
[Exploration]
2025-05-07 01:34:50 - Thread-37 (execute) - INFO - [Try to execute]
--Description: 1) Inspect a handful of publications that list “DENSO CORP” as (one of) the harmonised assignees
SELECT 
    t."publication_number"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."assignee_harmonized") a
WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
LIMIT 20;
[Try to execute]
2025-05-07 01:36:40 - Thread-37 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 1) Inspect a handful of publications that list “DENSO CORP” as (one of) the harmonised assignees
SELECT 
    t."publication_number"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."assignee_harmonized") a
WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
LIMIT 20;
Results:
publication_number
US-11639192-B2
US-2019152298-A1
US-2023394418-A1
US-2021017924-A1
US-2021041508-A1
US-2005103312-A1
US-2021261142-A1
US-2021325116-A1
US-2022028029-A1
US-2022190113-A1
BR-PI0714595-A2
WO-2018199101-A1
WO-2020022280-A1
JP-2001082835-A
JP-H09104189-A
JP-H09109037-A
US-2008236929-A1
US-2015207745-A1
DE-102012206067-B4
US-10164558-B2

[Successfully executed]
2025-05-07 01:36:40 - Thread-37 (execute) - INFO - [Try to execute]
--Description: 2) Examine how individual backward-citation objects look (each contains a "publication_number" key)
SELECT 
    t."publication_number"          AS "citing_pub",
    c.value:"publication_number"::STRING AS "cited_pub",
    c.value                         AS "raw_citation_json"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
WHERE c.value:"publication_number" IS NOT NULL
LIMIT 20;
[Try to execute]
2025-05-07 01:37:44 - Thread-37 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 2) Examine how individual backward-citation objects look (each contains a "publication_number" key)
SELECT 
    t."publication_number"          AS "citing_pub",
    c.value:"publication_number"::STRING AS "cited_pub",
    c.value                         AS "raw_citation_json"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
WHERE c.value:"publication_number" IS NOT NULL
LIMIT 20;
Results:
citing_pub,cited_pub,raw_citation_json
US-10741591-B2,US-2011266646-A1,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-2011266646-A1"",
  ""type"": """"
}"
US-10741591-B2,US-2012106984-A1,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-2012106984-A1"",
  ""type"": """"
}"
US-10741591-B2,US-2012207474-A1,"{
  ""application

[Successfully executed]
2025-05-07 01:37:44 - Thread-37 (execute) - INFO - [Try to execute]
--Description: 3) List publication numbers that CITE any patent assigned to DENSO CORP
SELECT DISTINCT
    t."publication_number" AS "citing_pub"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
JOIN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d,
             LATERAL FLATTEN(INPUT => d."assignee_harmonized") a
        WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
     ) dp
  ON c.value:"publication_number"::STRING = dp."publication_number"
LIMIT 20;
[Try to execute]
2025-05-07 01:39:29 - Thread-37 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 3) List publication numbers that CITE any patent assigned to DENSO CORP
SELECT DISTINCT
    t."publication_number" AS "citing_pub"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
JOIN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d,
             LATERAL FLATTEN(INPUT => d."assignee_harmonized") a
        WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
     ) dp
  ON c.value:"publication_number"::STRING = dp."publication_number"
LIMIT 20;
Results:
citing_pub
US-2015369515-A1
DE-102006000312-B4
US-8807647-B2
US-9151260-B2
JP-2020117051-A
CN-108292892-A
US-10774689-B2
CN-109203994-A
US-10616959-B2

[Successfully executed]
2025-05-07 01:39:29 - Thread-37 (execute) - INFO - [Try to execute]
--Description: 4) Retrieve distinct assignee names of those citing publications (excluding DENSO)
SELECT DISTINCT
    ass.value:"name"::STRING AS "citing_assignee"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
JOIN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d,
             LATERAL FLATTEN(INPUT => d."assignee_harmonized") a
        WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
     ) dp
  ON c.value:"publication_number"::STRING = dp."publication_number",
     LATERAL FLATTEN(INPUT => t."assignee_harmonized") ass
WHERE ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
LIMIT 20;
[Try to execute]
2025-05-07 01:40:38 - Thread-37 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 4) Retrieve distinct assignee names of those citing publications (excluding DENSO)
SELECT DISTINCT
    ass.value:"name"::STRING AS "citing_assignee"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
JOIN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d,
             LATERAL FLATTEN(INPUT => d."assignee_harmonized") a
        WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
     ) dp
  ON c.value:"publication_number"::STRING = dp."publication_number",
     LATERAL FLATTEN(INPUT => t."assignee_harmonized") ass
WHERE ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
LIMIT 20;
Results:
citing_assignee
TOYOTA BOSHOKU KK
SUZUKI HISAO
SAHASHI HIDEO
HONDA MOTOR CO LTD
MAHLE INT GMBH
HYUNDAI MOTOR CO LTD
TOYOTA MOTOR CO LTD
YAZAKI CORP
KIA MOTORS CORP
FUJI ELECTRIC CO LTD

[Successfully executed]
2025-05-07 01:40:38 - Thread-37 (execute) - INFO - [Try to execute]
--Description: 5) Check the structure of the CPC array and pick the first (primary) CPC code for any publication
SELECT 
    t."publication_number",
    cp.value:"code"::STRING AS "first_cpc_code",
    cp.SEQ
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."cpc") cp
WHERE cp.SEQ = 0           -- first element only
LIMIT 20;
[Try to execute]
2025-05-07 01:41:27 - Thread-37 (execute) - INFO - [Error occurred]
No data found for the specified query.

[Error occurred]
2025-05-07 01:43:04 - Thread-37 (execute) - INFO - [Corrected SQL]
```sql
--Description:
-- Purpose: Inspect the raw structure of the “cpc” JSON array without any index filter
--          so we can confirm which metadata (e.g., "code", "first") are available.
--          This will help determine how to isolate the primary CPC element later.
-- Steps:
--   • Flatten the "cpc" array for a handful of publications.
--   • Display the full JSON object for each flattened element.
--   • Limit to 20 rows for quick inspection.
SELECT
    t."publication_number",
    cp.value AS "cpc_json_element"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."cpc") cp
LIMIT 20;
```
[Corrected SQL]
2025-05-07 01:43:06 - Thread-37 (execute) - INFO - [Results for corrected sql]
publication_number,cpc_json_element
US-2018247292-A1,"{
  ""code"": ""G06Q20/208"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
US-2018247292-A1,"{
  ""code"": ""H04N1/00281"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
US-2018247292-A1,"{
  ""code"": ""G06K7/10821"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
US-2018247292-A1,"{
  ""code"": ""G06K19/06028"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
US-2018247292-A1,"{


[Results for corrected sql]
2025-05-07 01:44:07 - Thread-37 (execute) - INFO - [Corrected other sqls]
```sql
--Description: 6) Join the first CPC element (index = 0) to CPC_DEFINITION to view its full title
SELECT 
    cp.value:"code"::STRING AS "first_cpc_code",
    cd."titleFull"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."cpc") cp
JOIN PATENTS.PATENTS.CPC_DEFINITION cd
  ON cd."symbol" = cp.value:"code"::STRING
WHERE cp.index = 0
LIMIT 20;
```

```sql
--Description: 7) Combine citations-to-DENSO with citing assignee names and primary CPC codes (no filing-date filter yet)
SELECT 
    t."publication_number"               AS "citing_pub",
    ass.value:"name"::STRING             AS "citing_assignee",
    cp.value:"code"::STRING              AS "first_cpc_code"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
JOIN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d,
             LATERAL FLATTEN(INPUT => d."assignee_harmonized") a
        WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
     ) dp
  ON c.value:"publication_number"::STRING = dp."publication_number",
     LATERAL FLATTEN(INPUT => t."assignee_harmonized") ass,
     LATERAL FLATTEN(INPUT => t."cpc") cp
WHERE cp.index = 0
  AND ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
LIMIT 20;
```

```sql
--Description: 8) Same as #7 but require valid filing_date (>0)
SELECT 
    t."publication_number"               AS "citing_pub",
    ass.value:"name"::STRING             AS "citing_assignee",
    cp.value:"code"::STRING              AS "first_cpc_code"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
JOIN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d,
             LATERAL FLATTEN(INPUT => d."assignee_harmonized") a
        WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
     ) dp
  ON c.value:"publication_number"::STRING = dp."publication_number",
     LATERAL FLATTEN(INPUT => t."assignee_harmonized") ass,
     LATERAL FLATTEN(INPUT => t."cpc") cp
WHERE cp.index = 0
  AND t."filing_date" > 0
  AND ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
LIMIT 20;
```

```sql
--Description: 9) Attach CPC titles and count distinct citing publications by assignee & CPC subclass
SELECT 
    ass.value:"name"::STRING                     AS "citing_assignee",
    cd."titleFull"                               AS "cpc_title",
    COUNT(DISTINCT t."publication_number")       AS "citation_count"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
JOIN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d,
             LATERAL FLATTEN(INPUT => d."assignee_harmonized") a
        WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
     ) dp
  ON c.value:"publication_number"::STRING = dp."publication_number",
     LATERAL FLATTEN(INPUT => t."assignee_harmonized") ass,
     LATERAL FLATTEN(INPUT => t."cpc") cp
JOIN PATENTS.PATENTS.CPC_DEFINITION cd
  ON cd."symbol" = cp.value:"code"::STRING
WHERE cp.index = 0
  AND t."filing_date" > 0
  AND ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
GROUP BY ass.value:"name"::STRING, cd."titleFull"
ORDER BY "citation_count" DESC
LIMIT 20;
```

```sql
--Description: 10) Detail view for a chosen citing assignee (example: TOYOTA) with its publications and CPC titles
SELECT 
    ass.value:"name"::STRING           AS "citing_assignee",
    t."publication_number",
    cp.value:"code"::STRING            AS "first_cpc_code",
    cd."titleFull"                     AS "cpc_title"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
JOIN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d,
             LATERAL FLATTEN(INPUT => d."assignee_harmonized") a
        WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
     ) dp
  ON c.value:"publication_number"::STRING = dp."publication_number",
     LATERAL FLATTEN(INPUT => t."assignee_harmonized") ass,
     LATERAL FLATTEN(INPUT => t."cpc") cp
JOIN PATENTS.PATENTS.CPC_DEFINITION cd
  ON cd."symbol" = cp.value:"code"::STRING
WHERE cp.index = 0
  AND t."filing_date" > 0
  AND ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
  AND ass.value:"name"::STRING ILIKE '%TOYOTA%'   -- adjust pattern as needed
LIMIT 20;
```
[Corrected other sqls]
2025-05-07 01:44:07 - Thread-37 (execute) - INFO - [Successfully corrected]
Successfully corrected. SQL:
--Description:
-- Purpose: Inspect the raw structure of the “cpc” JSON array without any index filter
--          so we can confirm which metadata (e.g., "code", "first") are available.
--          This will help determine how to isolate the primary CPC element later.
-- Steps:
--   • Flatten the "cpc" array for a handful of publications.
--   • Display the full JSON object for each flattened element.
--   • Limit to 20 rows for quick inspection.
SELECT
    t."publication_number",
    cp.value AS "cpc_json_element"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."cpc") cp
LIMIT 20;
Results:
publication_number,cpc_json_element
US-2018247292-A1,"{
  ""code"": ""G06Q20/208"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
US-2018247292-A1,"{
  ""code"": ""H04N1/00281"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
US-2018247292-A1,"{
  ""code"": ""G06K7/10821"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
US-2018247292-A1,"{
  ""code"": ""G06K19/06028"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
US-2018247292-A1,"{


[Successfully corrected]
2025-05-07 01:44:07 - Thread-37 (execute) - INFO - [Try to execute]
--Description: 6) Join the first CPC element (index = 0) to CPC_DEFINITION to view its full title
SELECT 
    cp.value:"code"::STRING AS "first_cpc_code",
    cd."titleFull"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."cpc") cp
JOIN PATENTS.PATENTS.CPC_DEFINITION cd
  ON cd."symbol" = cp.value:"code"::STRING
WHERE cp.index = 0
LIMIT 20
[Try to execute]
2025-05-07 01:44:08 - Thread-37 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 6) Join the first CPC element (index = 0) to CPC_DEFINITION to view its full title
SELECT 
    cp.value:"code"::STRING AS "first_cpc_code",
    cd."titleFull"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."cpc") cp
JOIN PATENTS.PATENTS.CPC_DEFINITION cd
  ON cd."symbol" = cp.value:"code"::STRING
WHERE cp.index = 0
LIMIT 20
Results:
first_cpc_code,titleFull
A45D4/16,Independent devices characterised by heating the hair-curling or hair-waving means before use
B24D7/06,"Bonded abrasive wheels, or wheels with inserted abrasive blocks, designed for acting otherwise than only by their periphery, e.g. by the front face; Bushings or mountings therefor with inserted abrasive blocks, e.g. segmental"
F16M13/02,"Other supports for positioning apparatus or articles; Means for steadying hand-held apparatus or articles for supporting 

[Successfully executed]
2025-05-07 01:44:08 - Thread-37 (execute) - INFO - [Try to execute]
--Description: 7) Combine citations-to-DENSO with citing assignee names and primary CPC codes (no filing-date filter yet)
SELECT 
    t."publication_number"               AS "citing_pub",
    ass.value:"name"::STRING             AS "citing_assignee",
    cp.value:"code"::STRING              AS "first_cpc_code"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
JOIN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d,
             LATERAL FLATTEN(INPUT => d."assignee_harmonized") a
        WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
     ) dp
  ON c.value:"publication_number"::STRING = dp."publication_number",
     LATERAL FLATTEN(INPUT => t."assignee_harmonized") ass,
     LATERAL FLATTEN(INPUT => t."cpc") cp
WHERE cp.index = 0
  AND ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
LIMIT 20
[Try to execute]
2025-05-07 01:44:36 - Thread-37 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 7) Combine citations-to-DENSO with citing assignee names and primary CPC codes (no filing-date filter yet)
SELECT 
    t."publication_number"               AS "citing_pub",
    ass.value:"name"::STRING             AS "citing_assignee",
    cp.value:"code"::STRING              AS "first_cpc_code"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
JOIN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d,
             LATERAL FLATTEN(INPUT => d."assignee_harmonized") a
        WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
     ) dp
  ON c.value:"publication_number"::STRING = dp."publication_number",
     LATERAL FLATTEN(INPUT => t."assignee_harmonized") ass,
     LATERAL FLATTEN(INPUT => t."cpc") cp
WHERE cp.index = 0
  AND ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
LIMIT 20
Results:
citing_pub,citing_assignee,first_cpc_code
CN-109203994-A,YAZAKI CORP,B60Q3/14
CN-108292892-A,FUJI ELECTRIC CO LTD,G06F1/26
DE-102006000312-B4,TOYOTA MOTOR CO LTD,F02P5/1523
JP-2020117051-A,HONDA MOTOR CO LTD,Y02T90/167
US-9151260-B2,SUZUKI HISAO,F02M61/1813
US-9151260-B2,TOYOTA MOTOR CO LTD,F02M61/1813
US-2015369515-A1,HYUNDAI MOTOR CO LTD,F24H1/0018
US-2015369515-A1,KIA MOTORS CORP,F24H1/0018
US-10774689-B2,MAHLE INT GMBH,F01K13/006
US-8807647-B2,SAHASHI HIDEO,B60N2/5657

[Successfully executed]
2025-05-07 01:44:36 - Thread-37 (execute) - INFO - [Try to execute]
--Description: 8) Same as #7 but require valid filing_date (>0)
SELECT 
    t."publication_number"               AS "citing_pub",
    ass.value:"name"::STRING             AS "citing_assignee",
    cp.value:"code"::STRING              AS "first_cpc_code"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
JOIN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d,
             LATERAL FLATTEN(INPUT => d."assignee_harmonized") a
        WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
     ) dp
  ON c.value:"publication_number"::STRING = dp."publication_number",
     LATERAL FLATTEN(INPUT => t."assignee_harmonized") ass,
     LATERAL FLATTEN(INPUT => t."cpc") cp
WHERE cp.index = 0
  AND t."filing_date" > 0
  AND ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
LIMIT 20
[Try to execute]
2025-05-07 01:45:09 - Thread-37 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 8) Same as #7 but require valid filing_date (>0)
SELECT 
    t."publication_number"               AS "citing_pub",
    ass.value:"name"::STRING             AS "citing_assignee",
    cp.value:"code"::STRING              AS "first_cpc_code"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
JOIN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d,
             LATERAL FLATTEN(INPUT => d."assignee_harmonized") a
        WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
     ) dp
  ON c.value:"publication_number"::STRING = dp."publication_number",
     LATERAL FLATTEN(INPUT => t."assignee_harmonized") ass,
     LATERAL FLATTEN(INPUT => t."cpc") cp
WHERE cp.index = 0
  AND t."filing_date" > 0
  AND ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
LIMIT 20
Results:
citing_pub,citing_assignee,first_cpc_code
US-9151260-B2,SUZUKI HISAO,F02M61/1813
US-9151260-B2,TOYOTA MOTOR CO LTD,F02M61/1813
US-10616959-B2,MAHLE INT GMBH,H05B3/02
US-10774689-B2,MAHLE INT GMBH,F01K13/006
US-8807647-B2,SAHASHI HIDEO,B60N2/5657
US-8807647-B2,TOYOTA BOSHOKU KK,B60N2/5657
DE-102006000312-B4,TOYOTA MOTOR CO LTD,F02P5/1523
CN-109203994-A,YAZAKI CORP,B60Q3/14
CN-108292892-A,FUJI ELECTRIC CO LTD,G06F1/26
JP-2020117051-A,HONDA MOTOR CO LTD,Y02T90/167

[Successfully executed]
2025-05-07 01:45:09 - Thread-37 (execute) - INFO - [Try to execute]
--Description: 9) Attach CPC titles and count distinct citing publications by assignee & CPC subclass
SELECT 
    ass.value:"name"::STRING                     AS "citing_assignee",
    cd."titleFull"                               AS "cpc_title",
    COUNT(DISTINCT t."publication_number")       AS "citation_count"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
JOIN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d,
             LATERAL FLATTEN(INPUT => d."assignee_harmonized") a
        WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
     ) dp
  ON c.value:"publication_number"::STRING = dp."publication_number",
     LATERAL FLATTEN(INPUT => t."assignee_harmonized") ass,
     LATERAL FLATTEN(INPUT => t."cpc") cp
JOIN PATENTS.PATENTS.CPC_DEFINITION cd
  ON cd."symbol" = cp.value:"code"::STRING
WHERE cp.index = 0
  AND t."filing_date" > 0
  AND ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
GROUP BY ass.value:"name"::STRING, cd."titleFull"
ORDER BY "citation_count" DESC
LIMIT 20
[Try to execute]
2025-05-07 01:48:30 - Thread-37 (execute) - INFO - [Error occurred]
{'status': 'error', 'error_msg': '##ERROR##000630 (57014): Statement reached its statement or warehouse timeout of 200 second(s) and was canceled.'}
[Error occurred]
2025-05-07 01:51:41 - Thread-37 (execute) - INFO - [Corrected SQL]
```sql
--Description: 
-- Final, single-statement solution that produces the answer requested:
--     (citing-assignee, primary-CPC-subclass title, citation count)
-- for all patents that cite any patent owned by “DENSO CORP”.
-- Key design choices for speed:
--   • CTE denso_pubs     : the (usually small) set of publication_numbers owned by DENSO.
--   • CTE citing_pubs    : distinct publication_numbers whose citation array contains
--                          one of those DENSO pubs (shrinks search space).
--   • CTE first_cpc      : extracts only the primary CPC element (index = 0) from each
--                          citing publication, avoiding repeated FLATTEN in the main SELECT.
--   • Main SELECT        : joins first_cpc to CPC_DEFINITION for the long title,
--                          flattens assignee_harmonized, filters out “DENSO CORP”,
--                          and counts distinct citing publications.
WITH denso_pubs AS (          -- 1. DENSO-assigned publications
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."assignee_harmonized") a
    WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
),
citing_pubs AS (              -- 2. Publications that cite any DENSO publication
    SELECT DISTINCT t."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."citation") c
    WHERE c.value:"publication_number"::STRING IN (SELECT "publication_number" FROM denso_pubs)
),
first_cpc AS (                -- 3. Primary CPC code (index 0) for those citing publications
    SELECT 
        t."publication_number",
        cpc.value:"code"::STRING AS cpc_code
    FROM PATENTS.PATENTS.PUBLICATIONS t
    JOIN citing_pubs cp
      ON t."publication_number" = cp."publication_number",
         LATERAL FLATTEN(input => t."cpc") cpc
    WHERE cpc.index = 0
)
SELECT
    ass.value:"name"::STRING                 AS citing_assignee,
    cd."titleFull"                           AS cpc_title,
    COUNT(DISTINCT fc."publication_number")  AS citation_count
FROM first_cpc fc
JOIN PATENTS.PATENTS.CPC_DEFINITION cd
  ON cd."symbol" = fc.cpc_code               -- join for long CPC title
JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = fc."publication_number",
     LATERAL FLATTEN(input => p."assignee_harmonized") ass
WHERE p."filing_date" > 0
  AND ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
GROUP BY citing_assignee, cpc_title
ORDER BY citation_count DESC
LIMIT 20;
```
[Corrected SQL]
2025-05-07 01:51:43 - Thread-37 (execute) - INFO - [Results for corrected sql]
CITING_ASSIGNEE,CPC_TITLE,CITATION_COUNT
HYUNDAI MOTOR CO LTD,"Water heaters, e.g. boilers, continuous-flow heaters or water-storage heaters using electric energy supply",1
KIA MOTORS CORP,"Water heaters, e.g. boilers, continuous-flow heaters or water-storage heaters using electric energy supply",1
TOYOTA MOTOR CO LTD,"Digital data processing dependent on pinking with particular laws of return to advance, e.g. step by step, differing from the laws of retard",1
SAHASHI HIDEO,Heating or ventil

[Results for corrected sql]
2025-05-07 01:52:35 - Thread-37 (execute) - INFO - [Corrected other sqls]
```sql
--Description: 
-- Detail view for one chosen citing assignee (example filter: names containing “TOYOTA”).
--   • denso_pubs   : all publication_numbers owned by DENSO CORP.  
--   • citing_pubs  : distinct publication_numbers that cite any of those DENSO pubs.  
--   • first_cpc    : extract the primary CPC code (index = 0) for each citing pub.  
--   • Final SELECT : list each citing publication, its primary CPC code and full CPC title,
--                    alongside the selected assignee name, with optional pattern filter.
WITH denso_pubs AS (          -- DENSO-owned publications
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."assignee_harmonized") a
    WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
),
citing_pubs AS (              -- Pubs that cite any DENSO pub
    SELECT DISTINCT t."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."citation") c
    WHERE c.value:"publication_number"::STRING IN (SELECT "publication_number" FROM denso_pubs)
),
first_cpc AS (                -- Primary CPC for those citing pubs
    SELECT 
        t."publication_number",
        cpc.value:"code"::STRING AS cpc_code
    FROM PATENTS.PATENTS.PUBLICATIONS t
    JOIN citing_pubs cp
      ON t."publication_number" = cp."publication_number",
         LATERAL FLATTEN(input => t."cpc") cpc
    WHERE cpc.index = 0
)
SELECT
    ass.value:"name"::STRING      AS citing_assignee,
    fc."publication_number",
    fc.cpc_code                   AS first_cpc_code,
    cd."titleFull"                AS cpc_title
FROM first_cpc fc
JOIN PATENTS.PATENTS.CPC_DEFINITION cd
  ON cd."symbol" = fc.cpc_code
JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = fc."publication_number",
     LATERAL FLATTEN(input => p."assignee_harmonized") ass
WHERE p."filing_date" > 0
  AND ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
  AND ass.value:"name"::STRING ILIKE '%TOYOTA%'   -- adjust pattern as desired
LIMIT 20;
```
[Corrected other sqls]
2025-05-07 01:52:35 - Thread-37 (execute) - INFO - [Successfully corrected]
Successfully corrected. SQL:
--Description: 
-- Final, single-statement solution that produces the answer requested:
--     (citing-assignee, primary-CPC-subclass title, citation count)
-- for all patents that cite any patent owned by “DENSO CORP”.
-- Key design choices for speed:
--   • CTE denso_pubs     : the (usually small) set of publication_numbers owned by DENSO.
--   • CTE citing_pubs    : distinct publication_numbers whose citation array contains
--                          one of those DENSO pubs (shrinks search space).
--   • CTE first_cpc      : extracts only the primary CPC element (index = 0) from each
--                          citing publication, avoiding repeated FLATTEN in the main SELECT.
--   • Main SELECT        : joins first_cpc to CPC_DEFINITION for the long title,
--                          flattens assignee_harmonized, filters out “DENSO CORP”,
--                          and counts distinct citing publications.
WITH denso_pubs AS (          -- 1. DENSO-assigned publications
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."assignee_harmonized") a
    WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
),
citing_pubs AS (              -- 2. Publications that cite any DENSO publication
    SELECT DISTINCT t."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."citation") c
    WHERE c.value:"publication_number"::STRING IN (SELECT "publication_number" FROM denso_pubs)
),
first_cpc AS (                -- 3. Primary CPC code (index 0) for those citing publications
    SELECT 
        t."publication_number",
        cpc.value:"code"::STRING AS cpc_code
    FROM PATENTS.PATENTS.PUBLICATIONS t
    JOIN citing_pubs cp
      ON t."publication_number" = cp."publication_number",
         LATERAL FLATTEN(input => t."cpc") cpc
    WHERE cpc.index = 0
)
SELECT
    ass.value:"name"::STRING                 AS citing_assignee,
    cd."titleFull"                           AS cpc_title,
    COUNT(DISTINCT fc."publication_number")  AS citation_count
FROM first_cpc fc
JOIN PATENTS.PATENTS.CPC_DEFINITION cd
  ON cd."symbol" = fc.cpc_code               -- join for long CPC title
JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = fc."publication_number",
     LATERAL FLATTEN(input => p."assignee_harmonized") ass
WHERE p."filing_date" > 0
  AND ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
GROUP BY citing_assignee, cpc_title
ORDER BY citation_count DESC
LIMIT 20;
Results:
CITING_ASSIGNEE,CPC_TITLE,CITATION_COUNT
HYUNDAI MOTOR CO LTD,"Water heaters, e.g. boilers, continuous-flow heaters or water-storage heaters using electric energy supply",1
KIA MOTORS CORP,"Water heaters, e.g. boilers, continuous-flow heaters or water-storage heaters using electric energy supply",1
TOYOTA MOTOR CO LTD,"Digital data processing dependent on pinking with particular laws of return to advance, e.g. step by step, differing from the laws of retard",1
SAHASHI HIDEO,Heating or ventil

[Successfully corrected]
2025-05-07 01:52:35 - Thread-37 (execute) - INFO - [Try to execute]
--Description: 
-- Detail view for one chosen citing assignee (example filter: names containing “TOYOTA”).
--   • denso_pubs   : all publication_numbers owned by DENSO CORP.  
--   • citing_pubs  : distinct publication_numbers that cite any of those DENSO pubs.  
--   • first_cpc    : extract the primary CPC code (index = 0) for each citing pub.  
--   • Final SELECT : list each citing publication, its primary CPC code and full CPC title,
--                    alongside the selected assignee name, with optional pattern filter.
WITH denso_pubs AS (          -- DENSO-owned publications
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."assignee_harmonized") a
    WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
),
citing_pubs AS (              -- Pubs that cite any DENSO pub
    SELECT DISTINCT t."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."citation") c
    WHERE c.value:"publication_number"::STRING IN (SELECT "publication_number" FROM denso_pubs)
),
first_cpc AS (                -- Primary CPC for those citing pubs
    SELECT 
        t."publication_number",
        cpc.value:"code"::STRING AS cpc_code
    FROM PATENTS.PATENTS.PUBLICATIONS t
    JOIN citing_pubs cp
      ON t."publication_number" = cp."publication_number",
         LATERAL FLATTEN(input => t."cpc") cpc
    WHERE cpc.index = 0
)
SELECT
    ass.value:"name"::STRING      AS citing_assignee,
    fc."publication_number",
    fc.cpc_code                   AS first_cpc_code,
    cd."titleFull"                AS cpc_title
FROM first_cpc fc
JOIN PATENTS.PATENTS.CPC_DEFINITION cd
  ON cd."symbol" = fc.cpc_code
JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = fc."publication_number",
     LATERAL FLATTEN(input => p."assignee_harmonized") ass
WHERE p."filing_date" > 0
  AND ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
  AND ass.value:"name"::STRING ILIKE '%TOYOTA%'   -- adjust pattern as desired
LIMIT 20
[Try to execute]
2025-05-07 01:52:38 - Thread-37 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
--Description: 
-- Detail view for one chosen citing assignee (example filter: names containing “TOYOTA”).
--   • denso_pubs   : all publication_numbers owned by DENSO CORP.  
--   • citing_pubs  : distinct publication_numbers that cite any of those DENSO pubs.  
--   • first_cpc    : extract the primary CPC code (index = 0) for each citing pub.  
--   • Final SELECT : list each citing publication, its primary CPC code and full CPC title,
--                    alongside the selected assignee name, with optional pattern filter.
WITH denso_pubs AS (          -- DENSO-owned publications
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."assignee_harmonized") a
    WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
),
citing_pubs AS (              -- Pubs that cite any DENSO pub
    SELECT DISTINCT t."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."citation") c
    WHERE c.value:"publication_number"::STRING IN (SELECT "publication_number" FROM denso_pubs)
),
first_cpc AS (                -- Primary CPC for those citing pubs
    SELECT 
        t."publication_number",
        cpc.value:"code"::STRING AS cpc_code
    FROM PATENTS.PATENTS.PUBLICATIONS t
    JOIN citing_pubs cp
      ON t."publication_number" = cp."publication_number",
         LATERAL FLATTEN(input => t."cpc") cpc
    WHERE cpc.index = 0
)
SELECT
    ass.value:"name"::STRING      AS citing_assignee,
    fc."publication_number",
    fc.cpc_code                   AS first_cpc_code,
    cd."titleFull"                AS cpc_title
FROM first_cpc fc
JOIN PATENTS.PATENTS.CPC_DEFINITION cd
  ON cd."symbol" = fc.cpc_code
JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = fc."publication_number",
     LATERAL FLATTEN(input => p."assignee_harmonized") ass
WHERE p."filing_date" > 0
  AND ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
  AND ass.value:"name"::STRING ILIKE '%TOYOTA%'   -- adjust pattern as desired
LIMIT 20
Results:
CITING_ASSIGNEE,publication_number,FIRST_CPC_CODE,CPC_TITLE
TOYOTA BOSHOKU KK,US-8807647-B2,B60N2/5657,Heating or ventilating devices characterised by convection by air blown towards the seat surface
TOYOTA MOTOR CO LTD,DE-102006000312-B4,F02P5/1523,"Digital data processing dependent on pinking with particular laws of return to advance, e.g. step by step, differing from the laws of retard"
TOYOTA MOTOR CO LTD,US-9151260-B2,F02M61/1813,"Discharge orifices having different orientations with res

[Successfully executed]
2025-05-07 01:52:38 - Thread-37 (execute) - INFO - itercount: 0
2025-05-07 01:52:38 - Thread-37 (execute) - INFO - [Self-refine]
Table full name: PATENTS.PATENTS.DISCLOSURES_13
Column name: serial_cleaned Type: TEXT
Column name: sso Type: TEXT
Column name: disclosure_event Type: TEXT
Column name: reciprocity Type: TEXT
Column name: patent_owner_harmonized Type: TEXT
Column name: record_id Type: TEXT
Column name: family_id Type: TEXT
Column name: blanket_scope Type: TEXT
Column name: copyright Type: TEXT
Column name: standard Type: TEXT
Column name: licensing_commitment Type: TEXT
Column name: committee_project Type: TEXT
Column name: sc_name Type: TEXT
Column name: blanket_type Type: TEXT
Column name: pub_cleaned Type: TEXT
Column name: third_party Type: TEXT
Column name: wg_name Type: TEXT
Column name: patent_owner_unharmonized Type: TEXT
Column name: tc_name Type: TEXT
Column name: date Type: NUMBER
Sample rows:
[{'family_id': '22549751', 'record_id': 'REC00002', 'disclosure_event': 'DE0001', 'sso': 'ANSI', 'patent_owner_harmonized': '3M', 'patent_owner_unharmonized': '3M', 'date': 19751124, 'standard': 'X3.55;X3.56', 'committee_project': '', 'tc_name': '', 'sc_name': '', 'wg_name': '', 'licensing_commitment': 'FRAND', 'copyright': '', 'blanket_type': '0', 'blanket_scope': '', 'third_party': '0', 'reciprocity': '0', 'serial_cleaned': '', 'pub_cleaned': 'US3692255'}, {'family_id': '23170520', 'record_id': 'REC00001', 'disclosure_event': 'DE0001', 'sso': 'ANSI', 'patent_owner_harmonized': '3M', 'patent_owner_unharmonized': '3M', 'date': 19751124, 'standard': 'X3.55;X3.56', 'committee_project': '', 'tc_name': '', 'sc_name': '', 'wg_name': '', 'licensing_commitment': 'FRAND', 'copyright': '', 'blanket_type': '0', 'blanket_scope': '', 'third_party': '0', 'reciprocity': '0', 'serial_cleaned': '', 'pub_cleaned': 'US3861619'}, {'family_id': '23170520', 'record_id': 'REC00006', 'disclosure_event': 'DE0003', 'sso': 'ANSI', 'patent_owner_harmonized': '3M', 'patent_owner_unharmonized': '3M', 'date': 19890711, 'standard': 'X3.55;X3.56;X3.72;X3.116;X3.127;X3.136', 'committee_project': '', 'tc_name': '', 'sc_name': '', 'wg_name': '', 'licensing_commitment': 'Specific Terms', 'copyright': '', 'blanket_type': '0', 'blanket_scope': '', 'third_party': '0', 'reciprocity': '0', 'serial_cleaned': '', 'pub_cleaned': 'US3861619'}, {'family_id': '22549751', 'record_id': 'REC00008', 'disclosure_event': 'DE0004', 'sso': 'ANSI', 'patent_owner_harmonized': '3M', 'patent_owner_unharmonized': '3M', 'date': 19890906, 'standard': '', 'committee_project': '', 'tc_name': '', 'sc_name': '', 'wg_name': '', 'licensing_commitment': 'FRAND', 'copyright': '', 'blanket_type': '2', 'blanket_scope': '', 'third_party': '0', 'reciprocity': '0', 'serial_cleaned': '', 'pub_cleaned': 'US3692255'}, {'family_id': '23418274', 'record_id': 'REC00024', 'disclosure_event': 'DE0013', 'sso': 'ANSI', 'patent_owner_harmonized': 'Agilent Technologies', 'patent_owner_unharmonized': 'Agilent Technologies', 'date': 20020606, 'standard': '1588', 'committee_project': 'IEEE', 'tc_name': '', 'sc_name': '', 'wg_name': '', 'licensing_commitment': 'FRAND', 'copyright': '', 'blanket_type': '0', 'blanket_scope': '', 'third_party': '0', 'reciprocity': '0', 'serial_cleaned': '', 'pub_cleaned': 'US5566180'}]

--------------------------------------------------
Table full name: PATENTS.PATENTS.PUBLICATIONS
Column name: examiner Type: VARIANT Description: Is this text truncated?
Column name: fterm Type: VARIANT Description: For US publications only, the description in HTML, limited to the first 9 megabytes
Column name: application_number_formatted Type: TEXT Description: Application number, formatted to the patent office format where possible.
Column name: application_number Type: TEXT Description: Patent application number (DOCDB compatible), eg: 'US-87124404-A'. This may not always be set.
Column name: grant_date Type: NUMBER Description: For US publications only, the claims in plain text
Column name: cpc Type: VARIANT Description: Two-letter language code for this text
Column name: locarno Type: VARIANT Description: Localized text
Column name: description_localized_html Type: VARIANT Description: Localized text
Column name: publication_date Type: NUMBER Description: Two-letter language code for this text
Column name: kind_code Type: TEXT Description: Kind code, indicating application, grant, search report, correction, etc. These are different for each country.
Column name: spif_publication_number Type: TEXT Description: SPIF standard (spif.group) publication number, after 2000
Column name: ipc Type: VARIANT Description: Localized text
Column name: pct_number Type: TEXT Description: PCT number for this application if it was part of a PCT filing, eg: 'PCT/EP2008/062623'.
Column name: entity_status Type: TEXT Description: The filing date.
Column name: filing_date Type: NUMBER Description: Is this text truncated?
Column name: abstract_localized Type: VARIANT Description: Localized text
Column name: description_localized Type: VARIANT Description: The publication abstracts in different languages
Column name: assignee Type: VARIANT Description: Localized text
Column name: citation Type: VARIANT Description: Two-letter language code for this text
Column name: fi Type: VARIANT Description: Is this text truncated?
Column name: claims_localized_html Type: VARIANT Description: Is this text truncated?
Column name: inventor_harmonized Type: VARIANT Description: For US publications only, the claims in HTML
Column name: inventor Type: VARIANT Description: Is this text truncated?
Column name: claims_localized Type: VARIANT Description: Two-letter language code for this text
Column name: priority_date Type: NUMBER Description: Localized text
Column name: application_kind Type: TEXT Description: High-level kind of the application: A=patent; U=utility; P=provision; W= PCT; F=design; T=translation.
Column name: priority_claim Type: VARIANT Description: Two-letter language code for this text
Column name: assignee_harmonized Type: VARIANT Description: Two-letter language code for this text
Column name: title_localized Type: VARIANT Description: The publication titles in different languages
Column name: art_unit Type: TEXT Description: The grant date, or 0 if not granted.
Column name: child Type: VARIANT Description: The publication date.
Column name: family_id Type: TEXT Description: Family ID (simple family). Grouping on family ID will return all publications associated with a simple patent family (all publications share the same priority claims).
Column name: spif_application_number Type: TEXT Description: SPIF standard (spif.group) application number, after 2000
Column name: uspc Type: VARIANT Description: For US publications only, the description in plain text, limited to the first 9 megabytes
Column name: publication_number Type: TEXT Description: Patent publication number (DOCDB compatible), eg: 'US-7650331-B1'
Column name: country_code Type: TEXT Description: Country code, eg: 'US', 'EP', etc
Column name: parent Type: VARIANT Description: Is this text truncated?
Sample rows:
[{'publication_number': 'DE-69611147-T2', 'application_number': 'DE-69611147-T', 'country_code': 'DE', 'kind_code': 'T2', 'application_kind': 'T', 'application_number_formatted': 'DE1996611147', 'pct_number': '', 'family_id': '9483724', 'spif_publication_number': '', 'spif_application_number': '', 'title_localized': '[\n  {\n    "language": "de",\n    "text": "Schloss vom Typ eines entkuppelbaren Rotors",\n    "truncated": false\n  }\n]', 'abstract_localized': '[]', 'claims_localized': '[]', 'claims_localized_html': '[]', 'description_localized': '[]', 'description_localized_html': '[]', 'publication_date': 20010621, 'filing_date': 19961015, 'grant_date': 20010621, 'priority_date': 19951018, 'priority_claim': '[\n  {\n    "application_number": "FR-9512326-A",\n    "category": "",\n    "filing_date": 19951018,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  }\n]', 'inventor': '[\n  "MENAGER, CHRISTOPHE",\n  "CANARD, LOUIS",\n  "CADOUOT, PATRICK",\n  "GOURDIN, DOMINIQUE"\n]', 'inventor_harmonized': '[\n  {\n    "country_code": "FR",\n    "name": "MENAGER CHRISTOPHE"\n  },\n  {\n    "country_code": "FR",\n    "name": "CANARD LOUIS"\n  },\n  {\n    "country_code": "FR",\n    "name": "CADOUOT PATRICK"\n  },\n  {\n    "country_code": "FR",\n    "name": "GOURDIN DOMINIQUE"\n  }\n]', 'assignee': '[\n  "Valeo Securite Habitacle, Creteil Cedex"\n]', 'assignee_harmonized': '[\n  {\n    "country_code": "FR",\n    "name": "VALEO SECURITE HABITACLE"\n  }\n]', 'examiner': '[]', 'uspc': '[]', 'ipc': '[\n  {\n    "code": "E05B17/04",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "E05B17/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  }\n]', 'cpc': '[\n  {\n    "code": "E05B77/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "E05B17/0058",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  }\n]', 'fi': '[]', 'fterm': '[]', 'locarno': '[]', 'citation': '[]', 'parent': '[]', 'child': '[]', 'entity_status': '', 'art_unit': ''}, {'publication_number': 'DE-69630331-T2', 'application_number': 'DE-69630331-T', 'country_code': 'DE', 'kind_code': 'T2', 'application_kind': 'T', 'application_number_formatted': 'DE1996630331', 'pct_number': '', 'family_id': '23689246', 'spif_publication_number': '', 'spif_application_number': '', 'title_localized': '[\n  {\n    "language": "de",\n    "text": "Verfahren zur gesicherten Sitzungsschlüsselerzeugung und zur Authentifizierung",\n    "truncated": false\n  }\n]', 'abstract_localized': '[]', 'claims_localized': '[]', 'claims_localized_html': '[]', 'description_localized': '[]', 'description_localized_html': '[]', 'publication_date': 20040729, 'filing_date': 19960416, 'grant_date': 20040729, 'priority_date': 19950421, 'priority_claim': '[\n  {\n    "application_number": "US-42609095-A",\n    "category": "",\n    "filing_date": 19950421,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  }\n]', 'inventor': '[\n  "VANSTONE SCOTT .A, WATERLOO",\n  "MENEZES ALFRED JOHN, AUBURN",\n  "MINGHUA QU,"\n]', 'inventor_harmonized': '[\n  {\n    "country_code": "CA",\n    "name": "VANSTONE SCOTT A WATERLOO"\n  },\n  {\n    "country_code": "US",\n    "name": "MENEZES ALFRED JOHN AUBURN"\n  },\n  {\n    "country_code": "CA",\n    "name": "MINGHUA QU"\n  }\n]', 'assignee': '[\n  "Certicom Corp., Mississauga"\n]', 'assignee_harmonized': '[\n  {\n    "country_code": "CA",\n    "name": "CERTICOM CORP"\n  }\n]', 'examiner': '[]', 'uspc': '[]', 'ipc': '[\n  {\n    "code": "H04L9/08",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G06F7/72",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  }\n]', 'cpc': '[\n  {\n    "code": "G06F7/725",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "H04L9/0844",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "H04L9/0838",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "H04L9/0844",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G06F7/725",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  }\n]', 'fi': '[]', 'fterm': '[]', 'locarno': '[]', 'citation': '[]', 'parent': '[]', 'child': '[]', 'entity_status': '', 'art_unit': ''}, {'publication_number': 'DE-69636755-T2', 'application_number': 'DE-69636755-T', 'country_code': 'DE', 'kind_code': 'T2', 'application_kind': 'T', 'application_number_formatted': 'DE1996636755', 'pct_number': '', 'family_id': '8224764', 'spif_publication_number': '', 'spif_application_number': '', 'title_localized': '[\n  {\n    "language": "de",\n    "text": "Immortalisierte menschliche Epithelzell-Linie",\n    "truncated": false\n  }\n]', 'abstract_localized': '[\n  {\n    "language": "en",\n    "text": "Immortalised human corneal epithelial cell line, comprises cells of the cell line which are capable of stratification and expressing metabolic markers specific for nonimmortalised human epithelial cells, differentiation markers specific for nonimmortalised human corneal epithelial cells and markers specific for an inflammatory reaction.",\n    "truncated": false\n  }\n]', 'claims_localized': '[]', 'claims_localized_html': '[]', 'description_localized': '[]', 'description_localized_html': '[]', 'publication_date': 20071011, 'filing_date': 19961224, 'grant_date': 20071011, 'priority_date': 19961224, 'priority_claim': '[\n  {\n    "application_number": "EP-96203707-A",\n    "category": "",\n    "filing_date": 19961224,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  }\n]', 'inventor': '[\n  "OFFORD CAVIN, ELIZABETH",\n  "TROMVOUKIS, YVONNE",\n  "PFEIFER, ANDREA M.A.",\n  "SHARIF, NAJ"\n]', 'inventor_harmonized': '[\n  {\n    "country_code": "CH",\n    "name": "OFFORD CAVIN ELIZABETH"\n  },\n  {\n    "country_code": "CH",\n    "name": "TROMVOUKIS YVONNE"\n  },\n  {\n    "country_code": "CH",\n    "name": "PFEIFER ANDREA M A"\n  },\n  {\n    "country_code": "US",\n    "name": "SHARIF NAJ"\n  }\n]', 'assignee': '[\n  "Société des Produits Nestlé S.A."\n]', 'assignee_harmonized': '[\n  {\n    "country_code": "CH",\n    "name": "NESTLE SA"\n  }\n]', 'examiner': '[]', 'uspc': '[]', 'ipc': '[\n  {\n    "code": "C12N5/10",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N33/50",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12R1/91",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "C12N15/09",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12N5/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "A61K35/44",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N33/48",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12Q1/68",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12N5/071",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  }\n]', 'cpc': '[\n  {\n    "code": "C12N2503/02",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "C12N5/0621",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12N2503/02",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "C12N2510/04",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "C12N5/0621",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "C12N2510/04",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  }\n]', 'fi': '[]', 'fterm': '[]', 'locarno': '[]', 'citation': '[]', 'parent': '[]', 'child': '[]', 'entity_status': '', 'art_unit': ''}, {'publication_number': 'DE-69728658-T2', 'application_number': 'DE-69728658-T', 'country_code': 'DE', 'kind_code': 'T2', 'application_kind': 'T', 'application_number_formatted': 'DE1997628658', 'pct_number': '', 'family_id': '24437397', 'spif_publication_number': '', 'spif_application_number': '', 'title_localized': '[\n  {\n    "language": "de",\n    "text": "Lithographische dünne filmstruktur und diese enthaltende druckplatte",\n    "truncated": false\n  }\n]', 'abstract_localized': '[\n  {\n    "language": "en",\n    "text": "A lithographic laser imageable thin film structure comprising a substrate having first and second surfaces. A vacuum-deposited metal layer is carried by the first surface of the substrate. A layer of semiconductor material is adhered to and overlies the metal layer. The metal layer and the semiconductor material have thicknesses which are selected to maximize absorption of laser energy impinging on the same.",\n    "truncated": false\n  }\n]', 'claims_localized': '[]', 'claims_localized_html': '[]', 'description_localized': '[]', 'description_localized_html': '[]', 'publication_date': 20040812, 'filing_date': 19970115, 'grant_date': 20040812, 'priority_date': 19960229, 'priority_claim': '[\n  {\n    "application_number": "US-9700408-W",\n    "category": "",\n    "filing_date": 19970115,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  },\n  {\n    "application_number": "US-60864696-A",\n    "category": "",\n    "filing_date": 19960229,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  }\n]', 'inventor': '[\n  "FISHER, P.",\n  "PHILLIPS, W.",\n  "DAVIS, F.",\n  "LEGALLEE, CHARLOTTE"\n]', 'inventor_harmonized': '[\n  {\n    "country_code": "US",\n    "name": "FISHER P"\n  },\n  {\n    "country_code": "US",\n    "name": "PHILLIPS W"\n  },\n  {\n    "country_code": "US",\n    "name": "DAVIS F"\n  },\n  {\n    "country_code": "US",\n    "name": "LEGALLEE CHARLOTTE"\n  }\n]', 'assignee': '[\n  "Presstek, Inc."\n]', 'assignee_harmonized': '[\n  {\n    "country_code": "US",\n    "name": "PRESSTEK INC"\n  }\n]', 'examiner': '[]', 'uspc': '[]', 'ipc': '[\n  {\n    "code": "B32B15/04",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B41C1/10",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B41N1/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B41N1/14",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B27/20",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B7/02",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  }\n]', 'cpc': '[\n  {\n    "code": "B32B15/04",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12674",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B32B27/20",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/31678",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12458",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/31678",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12458",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B32B15/20",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/31504",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B41N1/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B15/09",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B2367/00",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B32B27/20",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12493",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B32B15/043",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B27/36",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B27/08",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "B32B15/04",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12493",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12674",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B41C1/1033",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B41N1/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12528",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/31504",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B41C1/1033",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "B32B2311/24",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T428/12528",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  }\n]', 'fi': '[]', 'fterm': '[]', 'locarno': '[]', 'citation': '[]', 'parent': '[]', 'child': '[]', 'entity_status': '', 'art_unit': ''}, {'publication_number': 'DE-69807539-T2', 'application_number': 'DE-69807539-T', 'country_code': 'DE', 'kind_code': 'T2', 'application_kind': 'T', 'application_number_formatted': 'DE1998607539', 'pct_number': '', 'family_id': '11877005', 'spif_publication_number': '', 'spif_application_number': '', 'title_localized': '[\n  {\n    "language": "de",\n    "text": "Automatisches Analysegerät",\n    "truncated": false\n  }\n]', 'abstract_localized': '[]', 'claims_localized': '[]', 'claims_localized_html': '[]', 'description_localized': '[]', 'description_localized_html': '[]', 'publication_date': 20030116, 'filing_date': 19980120, 'grant_date': 20030116, 'priority_date': 19970129, 'priority_claim': '[\n  {\n    "application_number": "JP-1501397-A",\n    "category": "",\n    "filing_date": 19970129,\n    "npl_text": "",\n    "publication_number": "",\n    "type": ""\n  }\n]', 'inventor': '[\n  "HANAWA, MASAAKI",\n  "MITSUMAKI, HIROSHI",\n  "OHISHI, TADASHI",\n  "KAI, SUSUMU",\n  "WATANABE, HIROSHI"\n]', 'inventor_harmonized': '[\n  {\n    "country_code": "JP",\n    "name": "HANAWA MASAAKI"\n  },\n  {\n    "country_code": "JP",\n    "name": "MITSUMAKI HIROSHI"\n  },\n  {\n    "country_code": "JP",\n    "name": "OHISHI TADASHI"\n  },\n  {\n    "country_code": "JP",\n    "name": "KAI SUSUMU"\n  },\n  {\n    "country_code": "JP",\n    "name": "WATANABE HIROSHI"\n  }\n]', 'assignee': '[\n  "Hitachi, Ltd."\n]', 'assignee_harmonized': '[\n  {\n    "country_code": "JP",\n    "name": "HITACHI LTD"\n  }\n]', 'examiner': '[]', 'uspc': '[]', 'ipc': '[\n  {\n    "code": "G01N35/00",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N35/02",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N35/04",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  }\n]', 'cpc': '[\n  {\n    "code": "Y10T436/115831",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/114165",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/0465",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N35/026",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/0467",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/113332",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/114165",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N35/00603",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/11",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/00326",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/0467",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N35/00603",\n    "first": false,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/00326",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N2035/0465",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "G01N35/026",\n    "first": true,\n    "inventive": true,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/11",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/113332",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  },\n  {\n    "code": "Y10T436/115831",\n    "first": false,\n    "inventive": false,\n    "tree": []\n  }\n]', 'fi': '[]', 'fterm': '[]', 'locarno': '[]', 'citation': '[]', 'parent': '[]', 'child': '[]', 'entity_status': '', 'art_unit': ''}]

--------------------------------------------------
Table full name: PATENTS.PATENTS.CPC_DEFINITION
Column name: status Type: TEXT
Column name: precedenceLimitingReferences Type: VARIANT
Column name: rules Type: VARIANT
Column name: childGroups Type: VARIANT
Column name: scopeLimitingReferences Type: VARIANT
Column name: level Type: FLOAT
Column name: titlePart Type: VARIANT
Column name: residualReferences Type: VARIANT
Column name: definition Type: VARIANT
Column name: breakdownCode Type: BOOLEAN
Column name: limitingReferences Type: VARIANT
Column name: glossary Type: VARIANT
Column name: applicationReferences Type: VARIANT
Column name: notAllocatable Type: BOOLEAN
Column name: titleFull Type: TEXT
Column name: dateRevised Type: FLOAT
Column name: informativeReferences Type: VARIANT
Column name: symbol Type: TEXT
Column name: synonyms Type: VARIANT
Column name: children Type: VARIANT
Column name: parents Type: VARIANT
Column name: ipcConcordant Type: TEXT
Sample rows:
[{'applicationReferences': '[]', 'breakdownCode': True, 'childGroups': '[]', 'children': '[]', 'dateRevised': 20130101.0, 'definition': '[]', 'glossary': '[]', 'informativeReferences': '[]', 'ipcConcordant': 'CPCONLY', 'level': 9.0, 'limitingReferences': '[]', 'notAllocatable': False, 'parents': '[\n  "A01K2227/10",\n  "A01K2227/00",\n  "A01K",\n  "A01",\n  "A"\n]', 'precedenceLimitingReferences': '[]', 'residualReferences': '[]', 'rules': '[]', 'scopeLimitingReferences': '[]', 'status': 'published', 'symbol': 'A01K2227/108', 'synonyms': '[]', 'titleFull': 'Swine', 'titlePart': '[\n  "Swine"\n]'}, {'applicationReferences': '[]', 'breakdownCode': True, 'childGroups': '[]', 'children': '[]', 'dateRevised': 20130101.0, 'definition': '[]', 'glossary': '[]', 'informativeReferences': '[]', 'ipcConcordant': 'CPCONLY', 'level': 9.0, 'limitingReferences': '[]', 'notAllocatable': False, 'parents': '[\n  "A01K2227/10",\n  "A01K2227/00",\n  "A01K",\n  "A01",\n  "A"\n]', 'precedenceLimitingReferences': '[]', 'residualReferences': '[]', 'rules': '[]', 'scopeLimitingReferences': '[]', 'status': 'published', 'symbol': 'A01K2227/105', 'synonyms': '[]', 'titleFull': 'Murine', 'titlePart': '[\n  "Murine"\n]'}, {'applicationReferences': '[]', 'breakdownCode': True, 'childGroups': '[]', 'children': '[]', 'dateRevised': 20130101.0, 'definition': '[]', 'glossary': '[]', 'informativeReferences': '[]', 'ipcConcordant': 'CPCONLY', 'level': 9.0, 'limitingReferences': '[]', 'notAllocatable': False, 'parents': '[\n  "A01K2227/10",\n  "A01K2227/00",\n  "A01K",\n  "A01",\n  "A"\n]', 'precedenceLimitingReferences': '[]', 'residualReferences': '[]', 'rules': '[]', 'scopeLimitingReferences': '[]', 'status': 'published', 'symbol': 'A01K2227/107', 'synonyms': '[]', 'titleFull': 'Rabbit', 'titlePart': '[\n  "Rabbit"\n]'}, {'applicationReferences': '[]', 'breakdownCode': True, 'childGroups': '[]', 'children': '[]', 'dateRevised': 20130101.0, 'definition': '[]', 'glossary': '[]', 'informativeReferences': '[]', 'ipcConcordant': 'CPCONLY', 'level': 9.0, 'limitingReferences': '[]', 'notAllocatable': False, 'parents': '[\n  "A01K2267/02",\n  "A01K2267/00",\n  "A01K",\n  "A01",\n  "A"\n]', 'precedenceLimitingReferences': '[]', 'residualReferences': '[]', 'rules': '[]', 'scopeLimitingReferences': '[]', 'status': 'published', 'symbol': 'A01K2267/025', 'synonyms': '[]', 'titleFull': 'Animal producing cells or organs for transplantation', 'titlePart': '[\n  "Animal producing cells or organs for transplantation"\n]'}, {'applicationReferences': '[]', 'breakdownCode': True, 'childGroups': '[]', 'children': '[\n  "A01K2267/0312",\n  "A01K2267/0318",\n  "A01K2267/0325"\n]', 'dateRevised': 20130101.0, 'definition': '[]', 'glossary': '[]', 'informativeReferences': '[]', 'ipcConcordant': 'CPCONLY', 'level': 9.0, 'limitingReferences': '[]', 'notAllocatable': False, 'parents': '[\n  "A01K2267/03",\n  "A01K2267/00",\n  "A01K",\n  "A01",\n  "A"\n]', 'precedenceLimitingReferences': '[]', 'residualReferences': '[]', 'rules': '[]', 'scopeLimitingReferences': '[]', 'status': 'published', 'symbol': 'A01K2267/0306', 'synonyms': '[]', 'titleFull': 'Animal model for genetic diseases', 'titlePart': '[\n  "Animal model for genetic diseases"\n]'}]

--------------------------------------------------
External knowledge that might be helpful: 
### IPC Codes: Handling Main IPC Code Selection

When dealing with the `ipc` field in the `patents-public-data.patents.publications` dataset, it is important to understand the structure of this field, especially the subfield `first`. This subfield is a boolean that indicates whether a given IPC code is the main code for the publication number in question. This is crucial because each patent publication can be associated with multiple IPC codes, signifying the various aspects of the technology covered by the patent.

However, not every publication in the dataset has a designated main IPC code. This lack of a clearly identified main IPC code complicates the process of determining the most relevant IPC code for each publication, as selecting a single IPC code from multiple possibilities without clear prioritization can lead to inconsistent or skewed analyses.

This approach ensures a more consistent and representative selection of IPC codes across the dataset, facilitating more accurate and meaningful analysis of patent trends and classifications. By focusing on the most frequently occurring 4-digit IPC code, the view helps overcome the limitations posed by the absence of a designated main IPC code, thereby enhancing the reliability of patent-related studies and insights derived from this data.

Here is an example

```
SELECT 
    t1.publication_number, 
    SUBSTR(ipc_u.code, 0, 4) as ipc4, 
    COUNT(
    SUBSTR(ipc_u.code, 0, 4)
    ) as ipc4_count 
FROM 
    `patents-public-data.patents.publications` t1, 
    UNNEST(ipc) AS ipc_u 
GROUP BY 
    t1.publication_number, 
    ipc4

```



# Text Embeddings (Similarity)

Patent documents are rich with textual data. In fact, most of the information contained in a patent document is text. This includes the `abstract_localized`, `description_localized`, and `claims_localized`. Textual data can be a powerful tool to analyze and compare patent scope and content across patents. However, before being able to use textual data, it needs to be vectorized or transformed into text embeddings that can be used by machine learning models. Therefore, creating text embeddings from the textual data of patents is necessary to compare patent contents. Technically speaking, running an NLP algorithm that creates embeddings for all U.S. patents is computationally difficult.

Nevertheless, Google runs their own machine learning algorithm which transforms patent text metadata into text embeddings which they report in `patents-public-data.google_patents_research.publications` table. The textual embeddings of one patent, without any knowledge on the algorithm being used to create them, are meaningless on their own. However, the embeddings are powerful when it comes to comparing textual content of two or more patents. Embeddings can be used to calculate a similarity score between any two patents. This similarity score is calculated by applying the dot product of the embeddings vector of the patents, as shown below:

The similarity \( \text{Similarty}_{i,k} \) between two patents \( i \) and \( k \) is calculated as the dot product of their embedding vectors:

\[
\text{Similarty}_{i,k} = \mathbf{v}_i \cdot \mathbf{v}_k
\]

where

\[
\mathbf{v}_i = [v_{i1}, v_{i2}, v_{i3}, \ldots, v_{iN}]
\]
and
\[
\mathbf{v}_k = [v_{k1}, v_{k2}, v_{k3}, \ldots, v_{kN}]
\]

are the embedding vectors for patents \( i \) and \( k \) respectively. The higher the dot product, the more similar the patents.





# Originality (Trajtenberg)

One of the most important measures of a patent is "basicness". The aspects of basicness are tough to measure. Nevertheless, some literature finds that important aspects of these measures are embodied in the relationship between the invention and the technological predcessors and successors it is connected to through, for example, patent citations. We can thus use patent citations to construct measures that identify basicness and appropriability. Trajtenberg et al. 1997 provide a number of these measures. They distinguish between:

1. Forward-looking measures: measures that are derived from the relationship between an invention and subsequent technologies that build upon it. These measures are thus constructed from the forward citations. One example of a forward-looking basicness measure they provide is Generality, which is calculated as:

\[
\text{GENERALITY}_i = 1 - \sum_{k=1}^{N_i} \left( \frac{\text{NCITING}_{G_k}}{\text{NCITING}_i} \right)
\]


2. Backward-looking measures: measures that are derived from the relationship between a given patent and the body of knowledge that preceded it. These measure are thus constructed from the backward citations. One example of a backward-looking basicness measure they provide is Orginality, which is calculated as:

\[
\text{ORIGINALITY}_i = 1 - \sum_{k=1}^{N_i} \left( \frac{\text{NCITED}_{i,k}}{\text{NCITED}_i} \right)
\]

With **NCITING** and **NCITED** defined as the number of patents citing the focal patent and the number of patents cited by the focal patent, respectively. Index `i` corresponds to the focal patent considered, and `k` is the index of patent classes. For example, **NCITED_2,3** refers to the number of patents in patent class 3 and cited by our focal patent 2.


The table structure information is ({database name: {schema name: [table name]}}): 
{'PATENTS': {'PATENTS': ['DISCLOSURES_13', 'PUBLICATIONS', 'CPC_DEFINITION']}}

Some few-shot examples after column exploration may be helpful:
Query:
--Description: 1) Inspect a handful of publications that list “DENSO CORP” as (one of) the harmonised assignees
SELECT 
    t."publication_number"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."assignee_harmonized") a
WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
LIMIT 20;
Answer:
publication_number
US-11639192-B2
US-2019152298-A1
US-2023394418-A1
US-2021017924-A1
US-2021041508-A1
US-2005103312-A1
US-2021261142-A1
US-2021325116-A1
US-2022028029-A1
US-2022190113-A1
BR-PI0714595-A2
WO-2018199101-A1
WO-2020022280-A1
JP-2001082835-A
JP-H09104189-A
JP-H09109037-A
US-2008236929-A1
US-2015207745-A1
DE-102012206067-B4
US-10164558-B2
Query:
--Description: 2) Examine how individual backward-citation objects look (each contains a "publication_number" key)
SELECT 
    t."publication_number"          AS "citing_pub",
    c.value:"publication_number"::STRING AS "cited_pub",
    c.value                         AS "raw_citation_json"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
WHERE c.value:"publication_number" IS NOT NULL
LIMIT 20;
Answer:
citing_pub,cited_pub,raw_citation_json
US-10741591-B2,US-2011266646-A1,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-2011266646-A1"",
  ""type"": """"
}"
US-10741591-B2,US-2012106984-A1,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-2012106984-A1"",
  ""type"": """"
}"
US-10741591-B2,US-2012207474-A1,"{
  ""application
Query:
--Description: 3) List publication numbers that CITE any patent assigned to DENSO CORP
SELECT DISTINCT
    t."publication_number" AS "citing_pub"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
JOIN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d,
             LATERAL FLATTEN(INPUT => d."assignee_harmonized") a
        WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
     ) dp
  ON c.value:"publication_number"::STRING = dp."publication_number"
LIMIT 20;
Answer:
citing_pub
US-2015369515-A1
DE-102006000312-B4
US-8807647-B2
US-9151260-B2
JP-2020117051-A
CN-108292892-A
US-10774689-B2
CN-109203994-A
US-10616959-B2
Query:
--Description: 4) Retrieve distinct assignee names of those citing publications (excluding DENSO)
SELECT DISTINCT
    ass.value:"name"::STRING AS "citing_assignee"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
JOIN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d,
             LATERAL FLATTEN(INPUT => d."assignee_harmonized") a
        WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
     ) dp
  ON c.value:"publication_number"::STRING = dp."publication_number",
     LATERAL FLATTEN(INPUT => t."assignee_harmonized") ass
WHERE ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
LIMIT 20;
Answer:
citing_assignee
TOYOTA BOSHOKU KK
SUZUKI HISAO
SAHASHI HIDEO
HONDA MOTOR CO LTD
MAHLE INT GMBH
HYUNDAI MOTOR CO LTD
TOYOTA MOTOR CO LTD
YAZAKI CORP
KIA MOTORS CORP
FUJI ELECTRIC CO LTD
Query:
--Description: 6) Join the first CPC element (index = 0) to CPC_DEFINITION to view its full title
SELECT 
    cp.value:"code"::STRING AS "first_cpc_code",
    cd."titleFull"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."cpc") cp
JOIN PATENTS.PATENTS.CPC_DEFINITION cd
  ON cd."symbol" = cp.value:"code"::STRING
WHERE cp.index = 0
LIMIT 20
Answer:
first_cpc_code,titleFull
A45D4/16,Independent devices characterised by heating the hair-curling or hair-waving means before use
B24D7/06,"Bonded abrasive wheels, or wheels with inserted abrasive blocks, designed for acting otherwise than only by their periphery, e.g. by the front face; Bushings or mountings therefor with inserted abrasive blocks, e.g. segmental"
F16M13/02,"Other supports for positioning apparatus or articles; Means for steadying hand-held apparatus or articles for supporting 
Query:
--Description: 7) Combine citations-to-DENSO with citing assignee names and primary CPC codes (no filing-date filter yet)
SELECT 
    t."publication_number"               AS "citing_pub",
    ass.value:"name"::STRING             AS "citing_assignee",
    cp.value:"code"::STRING              AS "first_cpc_code"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
JOIN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d,
             LATERAL FLATTEN(INPUT => d."assignee_harmonized") a
        WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
     ) dp
  ON c.value:"publication_number"::STRING = dp."publication_number",
     LATERAL FLATTEN(INPUT => t."assignee_harmonized") ass,
     LATERAL FLATTEN(INPUT => t."cpc") cp
WHERE cp.index = 0
  AND ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
LIMIT 20
Answer:
citing_pub,citing_assignee,first_cpc_code
CN-109203994-A,YAZAKI CORP,B60Q3/14
CN-108292892-A,FUJI ELECTRIC CO LTD,G06F1/26
DE-102006000312-B4,TOYOTA MOTOR CO LTD,F02P5/1523
JP-2020117051-A,HONDA MOTOR CO LTD,Y02T90/167
US-9151260-B2,SUZUKI HISAO,F02M61/1813
US-9151260-B2,TOYOTA MOTOR CO LTD,F02M61/1813
US-2015369515-A1,HYUNDAI MOTOR CO LTD,F24H1/0018
US-2015369515-A1,KIA MOTORS CORP,F24H1/0018
US-10774689-B2,MAHLE INT GMBH,F01K13/006
US-8807647-B2,SAHASHI HIDEO,B60N2/5657
Query:
--Description: 8) Same as #7 but require valid filing_date (>0)
SELECT 
    t."publication_number"               AS "citing_pub",
    ass.value:"name"::STRING             AS "citing_assignee",
    cp.value:"code"::STRING              AS "first_cpc_code"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(INPUT => t."citation") c
JOIN (
        SELECT DISTINCT d."publication_number"
        FROM PATENTS.PATENTS.PUBLICATIONS d,
             LATERAL FLATTEN(INPUT => d."assignee_harmonized") a
        WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
     ) dp
  ON c.value:"publication_number"::STRING = dp."publication_number",
     LATERAL FLATTEN(INPUT => t."assignee_harmonized") ass,
     LATERAL FLATTEN(INPUT => t."cpc") cp
WHERE cp.index = 0
  AND t."filing_date" > 0
  AND ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
LIMIT 20
Answer:
citing_pub,citing_assignee,first_cpc_code
US-9151260-B2,SUZUKI HISAO,F02M61/1813
US-9151260-B2,TOYOTA MOTOR CO LTD,F02M61/1813
US-10616959-B2,MAHLE INT GMBH,H05B3/02
US-10774689-B2,MAHLE INT GMBH,F01K13/006
US-8807647-B2,SAHASHI HIDEO,B60N2/5657
US-8807647-B2,TOYOTA BOSHOKU KK,B60N2/5657
DE-102006000312-B4,TOYOTA MOTOR CO LTD,F02P5/1523
CN-109203994-A,YAZAKI CORP,B60Q3/14
CN-108292892-A,FUJI ELECTRIC CO LTD,G06F1/26
JP-2020117051-A,HONDA MOTOR CO LTD,Y02T90/167
Query:
--Description: 
-- Detail view for one chosen citing assignee (example filter: names containing “TOYOTA”).
--   • denso_pubs   : all publication_numbers owned by DENSO CORP.  
--   • citing_pubs  : distinct publication_numbers that cite any of those DENSO pubs.  
--   • first_cpc    : extract the primary CPC code (index = 0) for each citing pub.  
--   • Final SELECT : list each citing publication, its primary CPC code and full CPC title,
--                    alongside the selected assignee name, with optional pattern filter.
WITH denso_pubs AS (          -- DENSO-owned publications
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(input => p."assignee_harmonized") a
    WHERE a.value:"name"::STRING ILIKE '%DENSO%CORP%'
),
citing_pubs AS (              -- Pubs that cite any DENSO pub
    SELECT DISTINCT t."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."citation") c
    WHERE c.value:"publication_number"::STRING IN (SELECT "publication_number" FROM denso_pubs)
),
first_cpc AS (                -- Primary CPC for those citing pubs
    SELECT 
        t."publication_number",
        cpc.value:"code"::STRING AS cpc_code
    FROM PATENTS.PATENTS.PUBLICATIONS t
    JOIN citing_pubs cp
      ON t."publication_number" = cp."publication_number",
         LATERAL FLATTEN(input => t."cpc") cpc
    WHERE cpc.index = 0
)
SELECT
    ass.value:"name"::STRING      AS citing_assignee,
    fc."publication_number",
    fc.cpc_code                   AS first_cpc_code,
    cd."titleFull"                AS cpc_title
FROM first_cpc fc
JOIN PATENTS.PATENTS.CPC_DEFINITION cd
  ON cd."symbol" = fc.cpc_code
JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = fc."publication_number",
     LATERAL FLATTEN(input => p."assignee_harmonized") ass
WHERE p."filing_date" > 0
  AND ass.value:"name"::STRING NOT ILIKE '%DENSO%CORP%'
  AND ass.value:"name"::STRING ILIKE '%TOYOTA%'   -- adjust pattern as desired
LIMIT 20
Answer:
CITING_ASSIGNEE,publication_number,FIRST_CPC_CODE,CPC_TITLE
TOYOTA BOSHOKU KK,US-8807647-B2,B60N2/5657,Heating or ventilating devices characterised by convection by air blown towards the seat surface
TOYOTA MOTOR CO LTD,DE-102006000312-B4,F02P5/1523,"Digital data processing dependent on pinking with particular laws of return to advance, e.g. step by step, differing from the laws of retard"
TOYOTA MOTOR CO LTD,US-9151260-B2,F02M61/1813,"Discharge orifices having different orientations with res
Task: Which assignees, excluding DENSO CORP itself, have cited patents assigned to DENSO CORP, and what are the titles of the primary CPC subclasses associated with these citations? Provide the name of each citing assignee (excluding DENSO CORP), the full title of the primary CPC subclass (based on the first CPC code), and the count of citations grouped by the citing assignee and the CPC subclass title. Ensure that only citations of patents with valid filing dates are considered, and focus on the first CPC code for each citing patent. The results should specifically exclude DENSO CORP as a citing assignee.

Please think step by step and answer only one complete SQL in snowflake dialect in ```sql``` format.
SQL usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'PATENTS': {'PATENTS': ['DISCLOSURES_13', 'PUBLICATIONS', 'CPC_DEFINITION']}}

When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
If the task description does not specify the number of decimal places, retain all decimals to four places.

[Self-refine]
2025-05-07 01:55:30 - Thread-37 (execute) - INFO - [Try to run SQL in self-refine]
```sql
/* ---  Assignees (except DENSO CORP) that cite any patent owned by DENSO CORP,
        together with the full title of the primary CPC subclass of the citing
        publication and the number of such citing publications.  --- */

WITH denso_pubs AS (   -- all publications that list DENSO CORP as (one) assignee
    SELECT DISTINCT p."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS p,
         LATERAL FLATTEN(INPUT => p."assignee_harmonized") a
    WHERE UPPER(a.value:"name"::STRING) LIKE '%DENSO%CORP%'
),

citing_pubs AS (       -- publications that cite at least one DENSO publication
    SELECT DISTINCT t."publication_number"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(INPUT => t."citation") c
    WHERE c.value:"publication_number"::STRING IN (SELECT "publication_number" FROM denso_pubs)
),

citing_details AS (    -- assignee name and primary CPC code of each citing pub
    SELECT
        t."publication_number",
        ass.value:"name"::STRING   AS "citing_assignee",
        cpc.value:"code"::STRING   AS "primary_cpc_code"
    FROM PATENTS.PATENTS.PUBLICATIONS t
    JOIN citing_pubs cp
      ON t."publication_number" = cp."publication_number",
         LATERAL FLATTEN(INPUT => t."assignee_harmonized") ass,
         LATERAL FLATTEN(INPUT => t."cpc") cpc
    WHERE cpc.index = 0                 -- first / primary CPC element
      AND t."filing_date" > 0           -- only records with valid filing dates
      AND UPPER(ass.value:"name"::STRING) NOT LIKE '%DENSO%CORP%'   -- exclude DENSO as citer
)

SELECT
    cdets."citing_assignee"                               AS "citing_assignee",
    cd."titleFull"                                        AS "cpc_subclass_title",
    COUNT(DISTINCT cdets."publication_number")            AS "citation_count"
FROM citing_details cdets
JOIN PATENTS.PATENTS.CPC_DEFINITION cd
  ON cd."symbol" = cdets."primary_cpc_code"
GROUP BY
    cdets."citing_assignee",
    cd."titleFull"
ORDER BY
    "citation_count" DESC NULLS LAST;
```
[Try to run SQL in self-refine]
2025-05-07 01:55:32 - Thread-37 (execute) - INFO - Total iteration counts: 0
