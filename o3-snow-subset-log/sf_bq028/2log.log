2025-05-07 05:22:48 - Thread-163 (execute) - INFO - [Exploration]
```sql
-- Description: 1) Peek at some GitHub projects together with their star numbers  
SELECT "Name",
       "StarsCount",
       "ForksCount",
       "Description"
FROM   DEPS_DEV_V1.DEPS_DEV_V1."PROJECTS"
WHERE  "Type" = 'GITHUB'
ORDER  BY "StarsCount" DESC
LIMIT  20;
```

```sql
-- Description: 2) Inspect how NPM package versions are linked to GitHub repos via PACKAGEVERSIONTOPROJECT  
SELECT "System",
       "Name",
       "Version",
       "ProjectType",
       "ProjectName",
       "RelationType"
FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONTOPROJECT"
WHERE  "System" = 'NPM'
  AND  "ProjectType" = 'GITHUB'
  AND  "RelationType" = 'SOURCE_REPO_TYPE'
LIMIT  20;
```

```sql
-- Description: 3) View the JSON structure of the VersionInfo column for a few NPM versions  
SELECT "Name",
       "Version",
       "VersionInfo"
FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
WHERE  "System" = 'NPM'
LIMIT  20;
```

```sql
-- Description: 4) Extract `IsRelease` and `Ordinal` flags from VersionInfo to understand release ordering  
SELECT "Name",
       "Version",
       PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN  AS "IsRelease",
       PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER     AS "Ordinal"
FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
WHERE  "System" = 'NPM'
  AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
LIMIT  20;
```

```sql
-- Description: 5) For each NPM package, keep only the latest *release* version by highest Ordinal  
SELECT *
FROM  (
        SELECT "Name",
               "Version",
               PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER AS "Ordinal",
               ROW_NUMBER() OVER (PARTITION BY "Name"
                                  ORDER BY PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER DESC) AS rn
        FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
        WHERE  "System" = 'NPM'
          AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
      )
WHERE  rn = 1
LIMIT  20;
```

```sql
-- Description: 6) Join the ‚Äúlatest-release‚Äù result with PACKAGEVERSIONTOPROJECT to obtain the GitHub repo  
WITH latest AS (
        SELECT "Name",
               "Version"
        FROM  (
                SELECT "Name",
                       "Version",
                       ROW_NUMBER() OVER (PARTITION BY "Name"
                                          ORDER BY PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER DESC) AS rn
                FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
                WHERE  "System" = 'NPM'
                  AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
              )
        WHERE  rn = 1
)
SELECT l."Name"              AS "Package",
       l."Version",
       pvt."ProjectName"
FROM   latest l
JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONTOPROJECT" pvt
       ON  pvt."System"      = 'NPM'
       AND pvt."Name"        = l."Name"
       AND pvt."Version"     = l."Version"
       AND pvt."ProjectType" = 'GITHUB'
       AND pvt."RelationType"= 'SOURCE_REPO_TYPE'
LIMIT  20;
```

```sql
-- Description: 7) Add GitHub star counts by joining with PROJECTS  
WITH latest AS (
        SELECT "Name","Version"
        FROM  (
                SELECT "Name",
                       "Version",
                       ROW_NUMBER() OVER (PARTITION BY "Name"
                                          ORDER BY PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER DESC) AS rn
                FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
                WHERE  "System" = 'NPM'
                  AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
              )
        WHERE  rn = 1
),
pkg_repo AS (
        SELECT l."Name"      AS "Package",
               l."Version",
               pvt."ProjectName"
        FROM   latest l
        JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONTOPROJECT" pvt
               ON  pvt."System"      = 'NPM'
               AND pvt."Name"        = l."Name"
               AND pvt."Version"     = l."Version"
               AND pvt."ProjectType" = 'GITHUB'
               AND pvt."RelationType"= 'SOURCE_REPO_TYPE'
)
SELECT pr."Package",
       pr."Version",
       proj."StarsCount"
FROM   pkg_repo pr
JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PROJECTS" proj
       ON proj."Type" = 'GITHUB'
      AND proj."Name" = pr."ProjectName"
ORDER  BY proj."StarsCount" DESC
LIMIT  20;
```

```sql
-- Description: 8) Produce the final list of the top-8 most-starred packages together with their latest release versions  
WITH latest AS (
        SELECT "Name","Version"
        FROM  (
                SELECT "Name",
                       "Version",
                       ROW_NUMBER() OVER (PARTITION BY "Name"
                                          ORDER BY PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER DESC) AS rn
                FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
                WHERE  "System" = 'NPM'
                  AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
              )
        WHERE  rn = 1
),
pkg_repo AS (
        SELECT l."Name"      AS "Package",
               l."Version",
               pvt."ProjectName"
        FROM   latest l
        JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONTOPROJECT" pvt
               ON  pvt."System"      = 'NPM'
               AND pvt."Name"        = l."Name"
               AND pvt."Version"     = l."Version"
               AND pvt."ProjectType" = 'GITHUB'
               AND pvt."RelationType"= 'SOURCE_REPO_TYPE'
),
pkg_stars AS (
        SELECT pr."Package",
               pr."Version",
               proj."StarsCount"
        FROM   pkg_repo pr
        JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PROJECTS" proj
               ON proj."Type" = 'GITHUB'
              AND proj."Name" = pr."ProjectName"
)
SELECT "Package",
       "Version",
       "StarsCount"
FROM   pkg_stars
ORDER  BY "StarsCount" DESC
LIMIT  8;
```

```sql
-- Description: 9) Quickly double-check the star distribution for the 8 selected packages  
SELECT "Package",
       "StarsCount"
FROM (
      /* re-use the previous CTE chain */
      WITH latest AS (
              SELECT "Name","Version"
              FROM  (
                      SELECT "Name",
                             "Version",
                             ROW_NUMBER() OVER (PARTITION BY "Name"
                                                ORDER BY PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER DESC) AS rn
                      FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
                      WHERE  "System" = 'NPM'
                        AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
                    )
              WHERE  rn = 1
      ),
      pkg_repo AS (
              SELECT l."Name"      AS "Package",
                     l."Version",
                     pvt."ProjectName"
              FROM   latest l
              JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONTOPROJECT" pvt
                     ON  pvt."System"      = 'NPM'
                     AND pvt."Name"        = l."Name"
                     AND pvt."Version"     = l."Version"
                     AND pvt."ProjectType" = 'GITHUB'
                     AND pvt."RelationType"= 'SOURCE_REPO_TYPE'
      ),
      pkg_stars AS (
              SELECT pr."Package",
                     pr."Version",
                     proj."StarsCount"
              FROM   pkg_repo pr
              JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PROJECTS" proj
                     ON proj."Type" = 'GITHUB'
                    AND proj."Name" = pr."ProjectName"
      )
      SELECT *
      FROM   pkg_stars
      ORDER  BY "StarsCount" DESC
      LIMIT  8
) t
LIMIT 20;
```

```sql
-- Description: 10) Inspect one of the top-starred packages‚Äô dependency list (optional exploration)  
SELECT "Dependency"
FROM   DEPS_DEV_V1.DEPS_DEV_V1."DEPENDENCIES"
WHERE  "System" = 'NPM'
  AND  "Name"   ILIKE '%react%'
LIMIT  20;
```
[Exploration]
2025-05-07 05:22:48 - Thread-163 (execute) - INFO - [Try to execute]
-- Description: 1) Peek at some GitHub projects together with their star numbers  
SELECT "Name",
       "StarsCount",
       "ForksCount",
       "Description"
FROM   DEPS_DEV_V1.DEPS_DEV_V1."PROJECTS"
WHERE  "Type" = 'GITHUB'
ORDER  BY "StarsCount" DESC
LIMIT  20;
[Try to execute]
2025-05-07 05:22:50 - Thread-163 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
-- Description: 1) Peek at some GitHub projects together with their star numbers  
SELECT "Name",
       "StarsCount",
       "ForksCount",
       "Description"
FROM   DEPS_DEV_V1.DEPS_DEV_V1."PROJECTS"
WHERE  "Type" = 'GITHUB'
ORDER  BY "StarsCount" DESC
LIMIT  20;
Results:
Name,StarsCount,ForksCount,Description
sindresorhus/awesome,311123,27057,üòé Awesome lists about all kinds of interesting topics
sindresorhus/awesome,277025,26697,üòé Awesome lists about all kinds of interesting topics
tensorflow/tensorflow,178762,89117,An Open Source Machine Learning Framework for Everyone
thealgorithms/python,172611,43305,All Algorithms implemented in Python
robbyrussell/oh-my-zsh,170853,25737,"üôÉ   A delightful community-driven (with 2,300+ contributors) framework for managin

[Successfully executed]
2025-05-07 05:22:50 - Thread-163 (execute) - INFO - [Try to execute]
-- Description: 2) Inspect how NPM package versions are linked to GitHub repos via PACKAGEVERSIONTOPROJECT  
SELECT "System",
       "Name",
       "Version",
       "ProjectType",
       "ProjectName",
       "RelationType"
FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONTOPROJECT"
WHERE  "System" = 'NPM'
  AND  "ProjectType" = 'GITHUB'
  AND  "RelationType" = 'SOURCE_REPO_TYPE'
LIMIT  20;
[Try to execute]
2025-05-07 05:22:50 - Thread-163 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
-- Description: 2) Inspect how NPM package versions are linked to GitHub repos via PACKAGEVERSIONTOPROJECT  
SELECT "System",
       "Name",
       "Version",
       "ProjectType",
       "ProjectName",
       "RelationType"
FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONTOPROJECT"
WHERE  "System" = 'NPM'
  AND  "ProjectType" = 'GITHUB'
  AND  "RelationType" = 'SOURCE_REPO_TYPE'
LIMIT  20;
Results:
System,Name,Version,ProjectType,ProjectName,RelationType
NPM,@dms/io,0.9.1,GITHUB,dataminingsupply/dms-io,SOURCE_REPO_TYPE
NPM,@dms/io,0.8.6,GITHUB,dataminingsupply/dms-io,SOURCE_REPO_TYPE
NPM,@dms/io,0.8.0,GITHUB,dataminingsupply/dms-io,SOURCE_REPO_TYPE
NPM,@dub/ui,0.0.43,GITHUB,steven-tey/dub,SOURCE_REPO_TYPE
NPM,@dub/ui,0.0.61,GITHUB,steven-tey/dub,SOURCE_REPO_TYPE
NPM,@dub/ui,0.1.23,GITHUB,steven-tey/dub,SOURCE_REPO_TYPE
NPM,@dub/ui,0.0.45,GITHUB,steven-tey/dub,SOURCE_REPO_TYPE

[Successfully executed]
2025-05-07 05:22:50 - Thread-163 (execute) - INFO - [Try to execute]
-- Description: 3) View the JSON structure of the VersionInfo column for a few NPM versions  
SELECT "Name",
       "Version",
       "VersionInfo"
FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
WHERE  "System" = 'NPM'
LIMIT  20;
[Try to execute]
2025-05-07 05:22:50 - Thread-163 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
-- Description: 3) View the JSON structure of the VersionInfo column for a few NPM versions  
SELECT "Name",
       "Version",
       "VersionInfo"
FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
WHERE  "System" = 'NPM'
LIMIT  20;
Results:
Name,Version,VersionInfo
@dfds-ui/react-components,0.8.45-alpha.c4d6ef85,"{
  ""IsRelease"": false,
  ""Ordinal"": 1557
}"
@dfds-ui/react-components,0.8.65-alpha.a3276ccf,"{
  ""IsRelease"": false,
  ""Ordinal"": 1849
}"
@digigov/auth,0.0.1-fix-logout.10,"{
  ""IsRelease"": false,
  ""Ordinal"": 67
}"
@dfds-ui/scripts,0.1.29-alpha.d1dbf29,"{
  ""IsRelease"": false,
  ""Ordinal"": 264
}"
@dfds-ui/colors,0.6.2-alpha.4439ec1,"{
  ""IsRelease"": false,
  ""Ordinal"": 477
}"
@dfds-ui/modal,0.8.

[Successfully executed]
2025-05-07 05:22:50 - Thread-163 (execute) - INFO - [Try to execute]
-- Description: 4) Extract `IsRelease` and `Ordinal` flags from VersionInfo to understand release ordering  
SELECT "Name",
       "Version",
       PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN  AS "IsRelease",
       PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER     AS "Ordinal"
FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
WHERE  "System" = 'NPM'
  AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
LIMIT  20;
[Try to execute]
2025-05-07 05:24:05 - Thread-163 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
-- Description: 4) Extract `IsRelease` and `Ordinal` flags from VersionInfo to understand release ordering  
SELECT "Name",
       "Version",
       PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN  AS "IsRelease",
       PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER     AS "Ordinal"
FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
WHERE  "System" = 'NPM'
  AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
LIMIT  20;
Results:
Name,Version,IsRelease,Ordinal
wot-design,2.0.0,True,15
wpfnodecli,1.0.51,True,49
zach-to-git,0.1.3,True,4
yelp-locales,1.0.356,True,357
wstatesession,0.3.93,True,93
xctest-client,1.0.15,True,16
wordsearch-algo,2.1.0,True,4
zq-ui-components,0.0.4,True,4
yuanian-ai-component,0.3.39,True,216
zeebe-elasticsearch-client,0.3.0,True,10
yoshi>1.1.304>cssnano>ansi-styles,2.2.1,True,1
xpx>0.0.2-beta>npm>npmlog>gauge>object-assign,4.1.1,True,1

[Successfully executed]
2025-05-07 05:24:05 - Thread-163 (execute) - INFO - [Try to execute]
-- Description: 5) For each NPM package, keep only the latest *release* version by highest Ordinal  
SELECT *
FROM  (
        SELECT "Name",
               "Version",
               PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER AS "Ordinal",
               ROW_NUMBER() OVER (PARTITION BY "Name"
                                  ORDER BY PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER DESC) AS rn
        FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
        WHERE  "System" = 'NPM'
          AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
      )
WHERE  rn = 1
LIMIT  20;
[Try to execute]
2025-05-07 05:26:49 - Thread-163 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
-- Description: 5) For each NPM package, keep only the latest *release* version by highest Ordinal  
SELECT *
FROM  (
        SELECT "Name",
               "Version",
               PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER AS "Ordinal",
               ROW_NUMBER() OVER (PARTITION BY "Name"
                                  ORDER BY PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER DESC) AS rn
        FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
        WHERE  "System" = 'NPM'
          AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
      )
WHERE  rn = 1
LIMIT  20;
Results:
Name,Version,Ordinal,RN
step-node-agent>3.20.1>npm>copy-concurrently>iferr,0.1.5,1,1
homebridge-config-ui-x>4.7.1-test.19>sonic-boom,0.7.6,1,1
tesseractyl,0.0.4,3,1
not-albertsgrc>1.1.3>is-typedarray,1.0.0,1,1
summarizely,0.0.2,2,1
ss-database>2.0.0-beta.7>@ipld/dag-cbor,6.0.9,1,1
@f1stnpm2/asperiores-praesentium-quos,1.0.0,1,1
apib,0.2.0,6,1
string-ranger,0.0.1,1,1
@wvr/core>2.2.2-alpha.12>rimraf,3.0.2,1,1
not-albertsgrc>1.0.15>cryptiles,2.0.5,1,1

[Successfully executed]
2025-05-07 05:26:49 - Thread-163 (execute) - INFO - [Try to execute]
-- Description: 6) Join the ‚Äúlatest-release‚Äù result with PACKAGEVERSIONTOPROJECT to obtain the GitHub repo  
WITH latest AS (
        SELECT "Name",
               "Version"
        FROM  (
                SELECT "Name",
                       "Version",
                       ROW_NUMBER() OVER (PARTITION BY "Name"
                                          ORDER BY PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER DESC) AS rn
                FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
                WHERE  "System" = 'NPM'
                  AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
              )
        WHERE  rn = 1
)
SELECT l."Name"              AS "Package",
       l."Version",
       pvt."ProjectName"
FROM   latest l
JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONTOPROJECT" pvt
       ON  pvt."System"      = 'NPM'
       AND pvt."Name"        = l."Name"
       AND pvt."Version"     = l."Version"
       AND pvt."ProjectType" = 'GITHUB'
       AND pvt."RelationType"= 'SOURCE_REPO_TYPE'
LIMIT  20;
[Try to execute]
2025-05-07 05:28:08 - Thread-163 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
-- Description: 6) Join the ‚Äúlatest-release‚Äù result with PACKAGEVERSIONTOPROJECT to obtain the GitHub repo  
WITH latest AS (
        SELECT "Name",
               "Version"
        FROM  (
                SELECT "Name",
                       "Version",
                       ROW_NUMBER() OVER (PARTITION BY "Name"
                                          ORDER BY PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER DESC) AS rn
                FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
                WHERE  "System" = 'NPM'
                  AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
              )
        WHERE  rn = 1
)
SELECT l."Name"              AS "Package",
       l."Version",
       pvt."ProjectName"
FROM   latest l
JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONTOPROJECT" pvt
       ON  pvt."System"      = 'NPM'
       AND pvt."Name"        = l."Name"
       AND pvt."Version"     = l."Version"
       AND pvt."ProjectType" = 'GITHUB'
       AND pvt."RelationType"= 'SOURCE_REPO_TYPE'
LIMIT  20;
Results:
Package,Version,ProjectName
@docusaurus/plugin-content-pages,2.4.1,facebook/docusaurus
@dreamnet/queue,1.1.2,dreamnettech/monorepo
@dmartss/palette,1.0.3,dmartss/personal-packages
@dpgradio/eslint-config-vue3,0.0.2,dpgradio/code-style
@dollarshaveclub/cli>2.0.1>ms,2.1.1,zeit/ms
@drips/lazy,0.0.6,wixplosives/drip
@domparty/fe,0.0.81,domparty/component-library
@dot/env,0.1.4,shellscape/dot
@dpoineau/react-scripts>1.0.0>exit-hook,1.1.1,sindresorhus/exit-hook

[Successfully executed]
2025-05-07 05:28:08 - Thread-163 (execute) - INFO - [Try to execute]
-- Description: 7) Add GitHub star counts by joining with PROJECTS  
WITH latest AS (
        SELECT "Name","Version"
        FROM  (
                SELECT "Name",
                       "Version",
                       ROW_NUMBER() OVER (PARTITION BY "Name"
                                          ORDER BY PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER DESC) AS rn
                FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
                WHERE  "System" = 'NPM'
                  AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
              )
        WHERE  rn = 1
),
pkg_repo AS (
        SELECT l."Name"      AS "Package",
               l."Version",
               pvt."ProjectName"
        FROM   latest l
        JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONTOPROJECT" pvt
               ON  pvt."System"      = 'NPM'
               AND pvt."Name"        = l."Name"
               AND pvt."Version"     = l."Version"
               AND pvt."ProjectType" = 'GITHUB'
               AND pvt."RelationType"= 'SOURCE_REPO_TYPE'
)
SELECT pr."Package",
       pr."Version",
       proj."StarsCount"
FROM   pkg_repo pr
JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PROJECTS" proj
       ON proj."Type" = 'GITHUB'
      AND proj."Name" = pr."ProjectName"
ORDER  BY proj."StarsCount" DESC
LIMIT  20;
[Try to execute]
2025-05-07 05:28:56 - Thread-163 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
-- Description: 7) Add GitHub star counts by joining with PROJECTS  
WITH latest AS (
        SELECT "Name","Version"
        FROM  (
                SELECT "Name",
                       "Version",
                       ROW_NUMBER() OVER (PARTITION BY "Name"
                                          ORDER BY PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER DESC) AS rn
                FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
                WHERE  "System" = 'NPM'
                  AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
              )
        WHERE  rn = 1
),
pkg_repo AS (
        SELECT l."Name"      AS "Package",
               l."Version",
               pvt."ProjectName"
        FROM   latest l
        JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONTOPROJECT" pvt
               ON  pvt."System"      = 'NPM'
               AND pvt."Name"        = l."Name"
               AND pvt."Version"     = l."Version"
               AND pvt."ProjectType" = 'GITHUB'
               AND pvt."RelationType"= 'SOURCE_REPO_TYPE'
)
SELECT pr."Package",
       pr."Version",
       proj."StarsCount"
FROM   pkg_repo pr
JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PROJECTS" proj
       ON proj."Type" = 'GITHUB'
      AND proj."Name" = pr."ProjectName"
ORDER  BY proj."StarsCount" DESC
LIMIT  20;
Results:
Package,Version,StarsCount
@dmrvos/infrajs>0.0.6>typescript,2.6.2,94931
@dmrvos/infrajs>0.0.5>typescript,2.6.2,94931
@dylanvann/svelte,3.25.4,73499
@dumc11/tailwindcss,0.4.0,73464
@dollarshaveclub/cli>1.1.0>lodash,4.17.4,57779
@dwarvesf/react-scripts>0.7.0>lodash._arraycopy,3.0.0,57779
@dpoineau/react-scripts>1.0.0>lodash.keys,3.1.2,57779
@dpoineau/react-scripts>1.0.0>lodash.endswith,4.2.1,57779
@dpoineau/react-scripts>1.0.0>lodash._arraycopy,3.0.0,57779
@dollarshaveclub/cli>1.12.0>lod

[Successfully executed]
2025-05-07 05:28:56 - Thread-163 (execute) - INFO - [Try to execute]
-- Description: 8) Produce the final list of the top-8 most-starred packages together with their latest release versions  
WITH latest AS (
        SELECT "Name","Version"
        FROM  (
                SELECT "Name",
                       "Version",
                       ROW_NUMBER() OVER (PARTITION BY "Name"
                                          ORDER BY PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER DESC) AS rn
                FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
                WHERE  "System" = 'NPM'
                  AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
              )
        WHERE  rn = 1
),
pkg_repo AS (
        SELECT l."Name"      AS "Package",
               l."Version",
               pvt."ProjectName"
        FROM   latest l
        JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONTOPROJECT" pvt
               ON  pvt."System"      = 'NPM'
               AND pvt."Name"        = l."Name"
               AND pvt."Version"     = l."Version"
               AND pvt."ProjectType" = 'GITHUB'
               AND pvt."RelationType"= 'SOURCE_REPO_TYPE'
),
pkg_stars AS (
        SELECT pr."Package",
               pr."Version",
               proj."StarsCount"
        FROM   pkg_repo pr
        JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PROJECTS" proj
               ON proj."Type" = 'GITHUB'
              AND proj."Name" = pr."ProjectName"
)
SELECT "Package",
       "Version",
       "StarsCount"
FROM   pkg_stars
ORDER  BY "StarsCount" DESC
LIMIT  8;
[Try to execute]
2025-05-07 05:29:20 - Thread-163 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
-- Description: 8) Produce the final list of the top-8 most-starred packages together with their latest release versions  
WITH latest AS (
        SELECT "Name","Version"
        FROM  (
                SELECT "Name",
                       "Version",
                       ROW_NUMBER() OVER (PARTITION BY "Name"
                                          ORDER BY PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER DESC) AS rn
                FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
                WHERE  "System" = 'NPM'
                  AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
              )
        WHERE  rn = 1
),
pkg_repo AS (
        SELECT l."Name"      AS "Package",
               l."Version",
               pvt."ProjectName"
        FROM   latest l
        JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONTOPROJECT" pvt
               ON  pvt."System"      = 'NPM'
               AND pvt."Name"        = l."Name"
               AND pvt."Version"     = l."Version"
               AND pvt."ProjectType" = 'GITHUB'
               AND pvt."RelationType"= 'SOURCE_REPO_TYPE'
),
pkg_stars AS (
        SELECT pr."Package",
               pr."Version",
               proj."StarsCount"
        FROM   pkg_repo pr
        JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PROJECTS" proj
               ON proj."Type" = 'GITHUB'
              AND proj."Name" = pr."ProjectName"
)
SELECT "Package",
       "Version",
       "StarsCount"
FROM   pkg_stars
ORDER  BY "StarsCount" DESC
LIMIT  8;
Results:
Package,Version,StarsCount
@dmrvos/infrajs>0.0.6>typescript,2.6.2,94931
@dmrvos/infrajs>0.0.5>typescript,2.6.2,94931
@dylanvann/svelte,3.25.4,73499
@dumc11/tailwindcss,0.4.0,73464
@dollarshaveclub/cli>1.5.1>lodash,4.17.4,57779
@dwarvesf/react-scripts>0.7.0>lodash._arraycopy,3.0.0,57779
@dwarvesf/react-scripts>0.7.0>lodash._arrayeach,3.0.0,57779
@dwarvesf/react-scripts>0.7.0>lodash.words,3.2.0,57779

[Successfully executed]
2025-05-07 05:29:20 - Thread-163 (execute) - INFO - [Try to execute]
-- Description: 9) Quickly double-check the star distribution for the 8 selected packages  
SELECT "Package",
       "StarsCount"
FROM (
      /* re-use the previous CTE chain */
      WITH latest AS (
              SELECT "Name","Version"
              FROM  (
                      SELECT "Name",
                             "Version",
                             ROW_NUMBER() OVER (PARTITION BY "Name"
                                                ORDER BY PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER DESC) AS rn
                      FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
                      WHERE  "System" = 'NPM'
                        AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
                    )
              WHERE  rn = 1
      ),
      pkg_repo AS (
              SELECT l."Name"      AS "Package",
                     l."Version",
                     pvt."ProjectName"
              FROM   latest l
              JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONTOPROJECT" pvt
                     ON  pvt."System"      = 'NPM'
                     AND pvt."Name"        = l."Name"
                     AND pvt."Version"     = l."Version"
                     AND pvt."ProjectType" = 'GITHUB'
                     AND pvt."RelationType"= 'SOURCE_REPO_TYPE'
      ),
      pkg_stars AS (
              SELECT pr."Package",
                     pr."Version",
                     proj."StarsCount"
              FROM   pkg_repo pr
              JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PROJECTS" proj
                     ON proj."Type" = 'GITHUB'
                    AND proj."Name" = pr."ProjectName"
      )
      SELECT *
      FROM   pkg_stars
      ORDER  BY "StarsCount" DESC
      LIMIT  8
) t
LIMIT 20;
[Try to execute]
2025-05-07 05:32:27 - Thread-163 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
-- Description: 9) Quickly double-check the star distribution for the 8 selected packages  
SELECT "Package",
       "StarsCount"
FROM (
      /* re-use the previous CTE chain */
      WITH latest AS (
              SELECT "Name","Version"
              FROM  (
                      SELECT "Name",
                             "Version",
                             ROW_NUMBER() OVER (PARTITION BY "Name"
                                                ORDER BY PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER DESC) AS rn
                      FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
                      WHERE  "System" = 'NPM'
                        AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
                    )
              WHERE  rn = 1
      ),
      pkg_repo AS (
              SELECT l."Name"      AS "Package",
                     l."Version",
                     pvt."ProjectName"
              FROM   latest l
              JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONTOPROJECT" pvt
                     ON  pvt."System"      = 'NPM'
                     AND pvt."Name"        = l."Name"
                     AND pvt."Version"     = l."Version"
                     AND pvt."ProjectType" = 'GITHUB'
                     AND pvt."RelationType"= 'SOURCE_REPO_TYPE'
      ),
      pkg_stars AS (
              SELECT pr."Package",
                     pr."Version",
                     proj."StarsCount"
              FROM   pkg_repo pr
              JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PROJECTS" proj
                     ON proj."Type" = 'GITHUB'
                    AND proj."Name" = pr."ProjectName"
      )
      SELECT *
      FROM   pkg_stars
      ORDER  BY "StarsCount" DESC
      LIMIT  8
) t
LIMIT 20;
Results:
Package,StarsCount
@dmrvos/infrajs>0.0.5>typescript,94931
@dmrvos/infrajs>0.0.6>typescript,94931
@dylanvann/svelte,73499
@dumc11/tailwindcss,73464
@dollarshaveclub/cli>1.5.1>lodash,57779
@dwarvesf/react-scripts>0.7.0>lodash._arraycopy,57779
@dwarvesf/react-scripts>0.7.0>lodash.words,57779
@dpoineau/react-scripts>1.0.0>lodash._basefor,57779

[Successfully executed]
2025-05-07 05:32:27 - Thread-163 (execute) - INFO - [Try to execute]
-- Description: 10) Inspect one of the top-starred packages‚Äô dependency list (optional exploration)  
SELECT "Dependency"
FROM   DEPS_DEV_V1.DEPS_DEV_V1."DEPENDENCIES"
WHERE  "System" = 'NPM'
  AND  "Name"   ILIKE '%react%'
LIMIT  20;
[Try to execute]
2025-05-07 05:33:26 - Thread-163 (execute) - INFO - [Successfully executed]
Successfully executed. SQL:
-- Description: 10) Inspect one of the top-starred packages‚Äô dependency list (optional exploration)  
SELECT "Dependency"
FROM   DEPS_DEV_V1.DEPS_DEV_V1."DEPENDENCIES"
WHERE  "System" = 'NPM'
  AND  "Name"   ILIKE '%react%'
LIMIT  20;
Results:
Dependency
"{
  ""Name"": ""scroom"",
  ""System"": ""NPM"",
  ""Version"": ""0.1.0""
}"
"{
  ""Name"": ""@emotion/memoize"",
  ""System"": ""NPM"",
  ""Version"": ""0.7.5""
}"
"{
  ""Name"": ""react-is"",
  ""System"": ""NPM"",
  ""Version"": ""16.13.1""
}"
"{
  ""Name"": ""shallowequal"",
  ""System"": ""NPM"",
  ""Version"": ""1.1.0""
}"
"{
  ""Name"": ""camelize"",
  ""System"": ""NPM"",
  ""Version"": ""1.0.0""
}"
"{
  ""Name"": ""@babel/helper-hoist-variables"",
  ""System"": ""NPM""

[Successfully executed]
2025-05-07 05:33:26 - Thread-163 (execute) - INFO - itercount: 0
2025-05-07 05:33:26 - Thread-163 (execute) - INFO - [Self-refine]
Table full name: DEPS_DEV_V1.DEPS_DEV_V1.PROJECTS
Column name: StarsCount Type: NUMBER
Column name: ForksCount Type: NUMBER
Column name: Type Type: TEXT
Column name: Homepage Type: TEXT
Column name: OpenIssuesCount Type: NUMBER
Column name: SnapshotAt Type: NUMBER
Column name: Licenses Type: VARIANT
Column name: Description Type: TEXT
Column name: OSSFuzz Type: VARIANT
Column name: Name Type: TEXT
Sample rows:
[{'SnapshotAt': 1690837290722347, 'Type': 'GITLAB', 'Name': 'tkil/woodchuck', 'OpenIssuesCount': 0, 'StarsCount': 0, 'ForksCount': 0, 'Licenses': '[]', 'Description': None, 'Homepage': 'https://gitlab.com/tkil/woodchuck', 'OSSFuzz': None}, {'SnapshotAt': 1690837290722347, 'Type': 'GITLAB', 'Name': 'wiseidea/monorepo-utils', 'OpenIssuesCount': 0, 'StarsCount': 0, 'ForksCount': 0, 'Licenses': '[]', 'Description': 'My Utility for Everything!!!', 'Homepage': 'https://gitlab.com/wiseidea/monorepo-utils', 'OSSFuzz': None}, {'SnapshotAt': 1690837290722347, 'Type': 'GITLAB', 'Name': 'techendeavors/checkpciid', 'OpenIssuesCount': 0, 'StarsCount': 0, 'ForksCount': 0, 'Licenses': '[]', 'Description': 'Returns the vendor and device name when supplied with a PCI device ID.', 'Homepage': 'https://gitlab.com/techendeavors/checkpciid', 'OSSFuzz': None}, {'SnapshotAt': 1690837290722347, 'Type': 'GITLAB', 'Name': 'work-projects7/go-vscanner', 'OpenIssuesCount': 0, 'StarsCount': 0, 'ForksCount': 0, 'Licenses': '[]', 'Description': None, 'Homepage': 'https://gitlab.com/work-projects7/go-vscanner', 'OSSFuzz': None}, {'SnapshotAt': 1690837290722347, 'Type': 'GITLAB', 'Name': 'wpify/mapycz', 'OpenIssuesCount': 0, 'StarsCount': 0, 'ForksCount': 0, 'Licenses': '[]', 'Description': None, 'Homepage': 'https://gitlab.com/wpify/mapycz', 'OSSFuzz': None}]

--------------------------------------------------
Table full name: DEPS_DEV_V1.DEPS_DEV_V1.DEPENDENCIES
Column name: Version Type: TEXT
Column name: System Type: TEXT
Column name: Name Type: TEXT
Column name: SnapshotAt Type: NUMBER
Column name: Dependency Type: VARIANT
Column name: MinimumDepth Type: NUMBER
Sample rows:
[{'SnapshotAt': 1653865202672717, 'System': 'NPM', 'Name': '@tpp/um', 'Version': '1.4.0', 'Dependency': '{\n  "Name": "rimraf",\n  "System": "NPM",\n  "Version": "3.0.2"\n}', 'MinimumDepth': None}, {'SnapshotAt': 1652655601333164, 'System': 'NPM', 'Name': '@sdr/cli', 'Version': '1.1.1', 'Dependency': '{\n  "Name": "is-accessor-descriptor",\n  "System": "NPM",\n  "Version": "1.0.0"\n}', 'MinimumDepth': None}, {'SnapshotAt': 1652655601333164, 'System': 'NPM', 'Name': '@sdr/cli', 'Version': '1.0.12', 'Dependency': '{\n  "Name": "ansi-regex",\n  "System": "NPM",\n  "Version": "5.0.1"\n}', 'MinimumDepth': None}, {'SnapshotAt': 1652655601333164, 'System': 'NPM', 'Name': '@sdr/cli', 'Version': '1.1.1', 'Dependency': '{\n  "Name": "path-is-absolute",\n  "System": "NPM",\n  "Version": "1.0.1"\n}', 'MinimumDepth': None}, {'SnapshotAt': 1652655601333164, 'System': 'NPM', 'Name': '@sdv/alt', 'Version': '1.1.0', 'Dependency': '{\n  "Name": "whatwg-fetch",\n  "System": "NPM",\n  "Version": "3.6.2"\n}', 'MinimumDepth': None}]

--------------------------------------------------
Table full name: DEPS_DEV_V1.DEPS_DEV_V1.DEPENDENCYGRAPHEDGES
Column name: System Type: TEXT
Column name: Requirement Type: TEXT
Column name: SnapshotAt Type: NUMBER
Column name: Name Type: TEXT
Column name: Version Type: TEXT
Column name: From Type: VARIANT
Column name: To Type: VARIANT
Sample rows:
[{'SnapshotAt': 1670878903046625, 'System': 'MAVEN', 'Name': 'com.agilejava.docbkx:docbkx-maven-plugin', 'Version': '2.0.7', 'Requirement': '1.0.b2', 'From': '{\n  "Name": "fop:fop",\n  "System": "MAVEN",\n  "Version": "0.20.5"\n}', 'To': '{\n  "Name": "xml-apis:xml-apis",\n  "System": "MAVEN",\n  "Version": "1.3.03"\n}'}, {'SnapshotAt': 1670878903046625, 'System': 'MAVEN', 'Name': 'com.adobe.cq.screens:com.adobe.cq.screens', 'Version': '1.5.130', 'Requirement': '2.6.2', 'From': '{\n  "Name": "xom:xom",\n  "System": "MAVEN",\n  "Version": "1.1"\n}', 'To': '{\n  "Name": "xerces:xercesImpl",\n  "System": "MAVEN",\n  "Version": "2.8.1"\n}'}, {'SnapshotAt': 1670878903046625, 'System': 'MAVEN', 'Name': 'com.adobe.cq.commerce:cq-commerce-core', 'Version': '5.6.0', 'Requirement': '2.6.2', 'From': '{\n  "Name": "xom:xom",\n  "System": "MAVEN",\n  "Version": "1.1"\n}', 'To': '{\n  "Name": "xerces:xmlParserAPIs",\n  "System": "MAVEN",\n  "Version": "2.6.2"\n}'}, {'SnapshotAt': 1670878903046625, 'System': 'MAVEN', 'Name': 'com.adobe.granite:com.adobe.granite.socialgraph', 'Version': '0.0.6', 'Requirement': '2.6.2', 'From': '{\n  "Name": "xom:xom",\n  "System": "MAVEN",\n  "Version": "1.1"\n}', 'To': '{\n  "Name": "xerces:xmlParserAPIs",\n  "System": "MAVEN",\n  "Version": "2.6.2"\n}'}, {'SnapshotAt': 1670878903046625, 'System': 'MAVEN', 'Name': 'com.adobe.granite:com.adobe.granite.xssprotection', 'Version': '5.5.10', 'Requirement': '2.6.2', 'From': '{\n  "Name": "xom:xom",\n  "System": "MAVEN",\n  "Version": "1.1"\n}', 'To': '{\n  "Name": "xerces:xmlParserAPIs",\n  "System": "MAVEN",\n  "Version": "2.6.2"\n}'}]

--------------------------------------------------
Table full name: DEPS_DEV_V1.DEPS_DEV_V1.DEPENDENTS
Column name: Name Type: TEXT
Column name: SnapshotAt Type: NUMBER
Column name: MinimumDepth Type: NUMBER
Column name: System Type: TEXT
Column name: DependentIsHighestReleaseWithResolution Type: BOOLEAN
Column name: Dependent Type: VARIANT
Column name: Version Type: TEXT
Sample rows:
[{'SnapshotAt': 1726520453364153, 'System': 'NPM', 'Name': 'g', 'Version': '2.0.1', 'Dependent': '{\n  "Name": "poyka",\n  "System": "NPM",\n  "Version": "0.3.18"\n}', 'MinimumDepth': 1, 'DependentIsHighestReleaseWithResolution': False}, {'SnapshotAt': 1726520453364153, 'System': 'NPM', 'Name': 'g', 'Version': '2.0.1', 'Dependent': '{\n  "Name": "asmr100-com-dist",\n  "System": "NPM",\n  "Version": "0.6.0-rc.4-788-g21bfbc7"\n}', 'MinimumDepth': 1, 'DependentIsHighestReleaseWithResolution': False}, {'SnapshotAt': 1726520453364153, 'System': 'NPM', 'Name': 'i', 'Version': '0.3.7', 'Dependent': '{\n  "Name": "go-design-system-search-bar",\n  "System": "NPM",\n  "Version": "0.0.118"\n}', 'MinimumDepth': 1, 'DependentIsHighestReleaseWithResolution': False}, {'SnapshotAt': 1726520453364153, 'System': 'NPM', 'Name': 'q', 'Version': '1.5.1', 'Dependent': '{\n  "Name": "pancakes-recipe",\n  "System": "NPM",\n  "Version": "0.0.15"\n}', 'MinimumDepth': 1, 'DependentIsHighestReleaseWithResolution': False}, {'SnapshotAt': 1726520453364153, 'System': 'NPM', 'Name': 'q', 'Version': '1.4.1', 'Dependent': '{\n  "Name": "video-utils",\n  "System": "NPM",\n  "Version": "1.0.37"\n}', 'MinimumDepth': 1, 'DependentIsHighestReleaseWithResolution': False}]

--------------------------------------------------
Table full name: DEPS_DEV_V1.DEPS_DEV_V1.PACKAGEVERSIONHASHES
Column name: System Type: TEXT
Column name: HashType Type: TEXT
Column name: SnapshotAt Type: NUMBER
Column name: Name Type: TEXT
Column name: Version Type: TEXT
Column name: Hash Type: TEXT
Sample rows:
[{'SnapshotAt': 1656363603995533, 'Hash': 'OHVQhLoGM0h1kTqic82elg==', 'HashType': 'MD5', 'System': 'MAVEN', 'Name': 'com.github.sarxos:oss-parent', 'Version': '1'}, {'SnapshotAt': 1656363603995533, 'Hash': 'OLMC46rqOMMho5pdvoFFsQ==', 'HashType': 'MD5', 'System': 'MAVEN', 'Name': 'io.matthewnelson.kotlin-components:build-configuration-watchosarm32', 'Version': '1'}, {'SnapshotAt': 1656363603995533, 'Hash': 'OBYqnNn/LGVHF1U+g6/E6w==', 'HashType': 'MD5', 'System': 'MAVEN', 'Name': 'io.slixes:parent', 'Version': '1'}, {'SnapshotAt': 1656363603995533, 'Hash': 'OLlMpeGOBd4yZ/T8/LQQrA==', 'HashType': 'MD5', 'System': 'MAVEN', 'Name': 'io.github.m-m-m:mmm', 'Version': '1'}, {'SnapshotAt': 1656363603995533, 'Hash': 'O42Oyb4hZUYO7z08xgX4jA==', 'HashType': 'MD5', 'System': 'MAVEN', 'Name': 'org.infrastructurebuilder:ibparent-minimal', 'Version': '2'}]

--------------------------------------------------
Table full name: DEPS_DEV_V1.DEPS_DEV_V1.SNAPSHOTS
Column name: Time Type: NUMBER
Sample rows:
[{'Time': 1713733246839235}, {'Time': 1693256481433477}, {'Time': 1656363603995533}, {'Time': 1704142898824466}, {'Time': 1658178002532413}]

--------------------------------------------------
Table full name: DEPS_DEV_V1.DEPS_DEV_V1.ADVISORIES
Column name: ReferenceURLs Type: VARIANT
Column name: CVSS3Score Type: NUMBER
Column name: Packages Type: VARIANT
Column name: Aliases Type: VARIANT
Column name: SnapshotAt Type: NUMBER
Column name: Severity Type: TEXT
Column name: GitHubSeverity Type: TEXT
Column name: SourceID Type: TEXT
Column name: Description Type: TEXT
Column name: SourceURL Type: TEXT
Column name: Disclosed Type: NUMBER
Column name: Source Type: TEXT
Column name: Title Type: TEXT
Sample rows:
[{'SnapshotAt': 1694466085316347, 'Source': 'OSV', 'SourceID': 'GHSA-68jh-rf6x-836f', 'SourceURL': 'https://osv.dev/vulnerability/GHSA-68jh-rf6x-836f', 'Title': '@apollo/server vulnerable to unsafe application of Content Security Policy via reused nonces', 'Description': "### Context\nContent Security Policies (CSP) are a defense-in-depth strategy against XSS attacks. Improper application of CSP isn't itself a vulnerability, but it does fail to prevent XSS in the event that there is a viable attack vector for an XSS attack.\n\n### Impact\nThere aren't any XSS attack vectors via the Apollo Server landing pages _known to Apollo_, so to our knowledge there is no impact. However, if there are existing XSS vectors that haven't been reported and patched, then all users of Apollo Server's landing pages have a vulnerability which won't be prevented by the current CSP implemented by the landing pages.\n\nPrior to version 4.7.1, there was no CSP implemented at all. However, the initial CSP implementation (4.7.1+) reused nonces. While this sufficiently resolved the issue w.r.t. scripts not running in Safari, it did not implement CSP in a safe or conventional way.\n\n### Patches\nThe issue is patched in the latest version of Apollo Server, v4.7.4. The changes can be reviewed in [the merge commit](https://github.com/apollographql/apollo-server/commit/0adaf80d1ee51d8c7e5fd863c04478536d15eb8c).\n\n### Workarounds\nThe landing page can be disabled completely until the patch can be upgraded to.\nhttps://www.apollographql.com/docs/apollo-server/api/plugin/landing-pages/#disabling-the-landing-page\n\n### References\nhttps://content-security-policy.com/nonce/", 'ReferenceURLs': '[\n  "https://github.com/apollographql/apollo-server",\n  "https://github.com/apollographql/apollo-server/commit/0adaf80d1ee51d8c7e5fd863c04478536d15eb8c",\n  "https://github.com/apollographql/apollo-server/security/advisories/GHSA-68jh-rf6x-836f",\n  "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/06/GHSA-68jh-rf6x-836f/GHSA-68jh-rf6x-836f.json"\n]', 'CVSS3Score': None, 'Severity': 'UNKNOWN', 'GitHubSeverity': 'LOW', 'Disclosed': 1686944453000000, 'Packages': '[\n  {\n    "AffectedVersions": "Introduced: 4.7.1, Fixed: 4.7.4",\n    "Name": "@apollo/server",\n    "System": "NPM",\n    "UnaffectedVersions": ""\n  }\n]', 'Aliases': '[]'}, {'SnapshotAt': 1694466085316347, 'Source': 'OSV', 'SourceID': 'GHSA-qvjr-x8fw-hghv', 'SourceURL': 'https://osv.dev/vulnerability/GHSA-qvjr-x8fw-hghv', 'Title': 'Credentials stored in plain text by Jenkins TraceTronic ECU-TEST Plugin', 'Description': 'TraceTronic ECU-TEST Plugin 2.23.1 and earlier stores credentials unencrypted in its global configuration file `de.tracetronic.jenkins.plugins.ecutest.report.atx.installation.ATXInstallation.xml` on the Jenkins controller as part of its configuration.\n\nThese credentials can be viewed by users with access to the Jenkins controller file system.\n\nTraceTronic ECU-TEST Plugin 2.24 adds a new option type for sensitive options. Previously stored credentials are migrated to that option type on Jenkins startup.', 'ReferenceURLs': '[\n  "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2022/05/GHSA-qvjr-x8fw-hghv/GHSA-qvjr-x8fw-hghv.json",\n  "https://github.com/jenkinsci/ecutest-plugin",\n  "https://nvd.nist.gov/vuln/detail/CVE-2021-21612",\n  "https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2057"\n]', 'CVSS3Score': '3.300000000', 'Severity': 'UNKNOWN', 'GitHubSeverity': 'LOW', 'Disclosed': 1653413953000000, 'Packages': '[\n  {\n    "AffectedVersions": "Introduced: 0, Fixed: 2.24",\n    "Name": "de.tracetronic.jenkins.plugins:ecutest",\n    "System": "MAVEN",\n    "UnaffectedVersions": ""\n  }\n]', 'Aliases': '[]'}, {'SnapshotAt': 1694466085316347, 'Source': 'OSV', 'SourceID': 'GHSA-2jxx-2x93-2q2f', 'SourceURL': 'https://osv.dev/vulnerability/GHSA-2jxx-2x93-2q2f', 'Title': 'Non-constant time webhook token comparison in Jenkins Generic Webhook Trigger Plugin', 'Description': 'Generic Webhook Trigger Plugin 1.84.1 and earlier does not use a constant-time comparison when checking whether the provided and expected webhook token are equal.\n\nThis could potentially allow attackers to use statistical methods to obtain a valid webhook token.\n\nGeneric Webhook Trigger Plugin 1.84.2 uses a constant-time comparison when validating the webhook token.', 'ReferenceURLs': '[\n  "http://www.openwall.com/lists/oss-security/2022/10/19/3",\n  "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2022/10/GHSA-2jxx-2x93-2q2f/GHSA-2jxx-2x93-2q2f.json",\n  "https://github.com/jenkinsci/generic-webhook-trigger-plugin",\n  "https://nvd.nist.gov/vuln/detail/CVE-2022-43412",\n  "https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2874"\n]', 'CVSS3Score': '3.700000000', 'Severity': 'UNKNOWN', 'GitHubSeverity': 'LOW', 'Disclosed': 1666206022000000, 'Packages': '[\n  {\n    "AffectedVersions": "Introduced: 0, Fixed: 1.84.2",\n    "Name": "org.jenkins-ci.plugins:generic-webhook-trigger",\n    "System": "MAVEN",\n    "UnaffectedVersions": ""\n  }\n]', 'Aliases': '[]'}, {'SnapshotAt': 1694466085316347, 'Source': 'OSV', 'SourceID': 'GHSA-qh54-9vc5-m9fg', 'SourceURL': 'https://osv.dev/vulnerability/GHSA-qh54-9vc5-m9fg', 'Title': 'MD5 hash support in github.com/foxcpp/maddy', 'Description': '### Impact\n\nThis vulnerability affects maddy 0.5.1, 0.5.0 users using auth.shadow module\nand an extremely outdated system that still allows MD5 hashes in \n/etc/shadows.\n\n### Patches\n\nPatch is available as part of the 0.5.2 release.\n\n### Workarounds\n\nEnsure MD5 hashes are not present in /etc/shadow.\n', 'ReferenceURLs': '[\n  "https://github.com/foxcpp/maddy",\n  "https://github.com/foxcpp/maddy/security/advisories/GHSA-qh54-9vc5-m9fg",\n  "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2021/10/GHSA-qh54-9vc5-m9fg/GHSA-qh54-9vc5-m9fg.json"\n]', 'CVSS3Score': '3.000000000', 'Severity': 'UNKNOWN', 'GitHubSeverity': 'LOW', 'Disclosed': 1634054790000000, 'Packages': '[\n  {\n    "AffectedVersions": "Introduced: 0.5.0, Fixed: 0.5.2",\n    "Name": "github.com/foxcpp/maddy",\n    "System": "GO",\n    "UnaffectedVersions": ""\n  }\n]', 'Aliases': '[]'}, {'SnapshotAt': 1694466085316347, 'Source': 'OSV', 'SourceID': 'GHSA-j47f-4232-hvv8', 'SourceURL': 'https://osv.dev/vulnerability/GHSA-j47f-4232-hvv8', 'Title': 'Heap out of bounds read in `RaggedCross`', 'Description': '### Impact\nAn attacker can force accesses outside the bounds of heap allocated arrays by passing in invalid tensor values to `tf.raw_ops.RaggedCross`:\n\n```python\nimport tensorflow as tf\n\nragged_values = []\nragged_row_splits = [] \nsparse_indices = []\nsparse_values = []\nsparse_shape = []\n\ndense_inputs_elem = tf.constant([], shape=[92, 0], dtype=tf.int64)\ndense_inputs = [dense_inputs_elem]\n\ninput_order = "R"\nhashed_output = False\nnum_buckets = 0\nhash_key = 0 \n\ntf.raw_ops.RaggedCross(ragged_values=ragged_values,\n    ragged_row_splits=ragged_row_splits,\n    sparse_indices=sparse_indices,\n    sparse_values=sparse_values,\n    sparse_shape=sparse_shape,\n    dense_inputs=dense_inputs,\n    input_order=input_order,\n    hashed_output=hashed_output,\n    num_buckets=num_buckets,\n    hash_key=hash_key,\n    out_values_type=tf.int64,\n    out_row_splits_type=tf.int64)\n```\n\nThis is because the [implementation](https://github.com/tensorflow/tensorflow/blob/efea03b38fb8d3b81762237dc85e579cc5fc6e87/tensorflow/core/kernels/ragged_cross_op.cc#L456-L487) lacks validation for the user supplied arguments:\n\n```cc\nint next_ragged = 0;\nint next_sparse = 0;\nint next_dense = 0;\nfor (char c : input_order_) {\n  if (c == \'R\') {\n    TF_RETURN_IF_ERROR(BuildRaggedFeatureReader(\n        ragged_values_list[next_ragged], ragged_splits_list[next_ragged],\n        features));\n    next_ragged++;\n  } else if (c == \'S\') {\n    TF_RETURN_IF_ERROR(BuildSparseFeatureReader(\n        sparse_indices_list[next_sparse], sparse_values_list[next_sparse],\n        batch_size, features));\n    next_sparse++;\n  } else if (c == \'D\') {\n    TF_RETURN_IF_ERROR(\n        BuildDenseFeatureReader(dense_list[next_dense++], features));\n  }\n  ...\n}\n```\n\nEach of the above branches call a helper function after accessing array elements via a `*_list[next_*]` pattern, followed by incrementing the `next_*` index. However, as there is no validation that the `next_*` values are in the valid range for the corresponding `*_list` arrays, this results in heap OOB reads.\n\n### Patches\nWe have patched the issue in GitHub commit [44b7f486c0143f68b56c34e2d01e146ee445134a](https://github.com/tensorflow/tensorflow/commit/44b7f486c0143f68b56c34e2d01e146ee445134a).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.', 'ReferenceURLs': '[\n  "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2021/05/GHSA-j47f-4232-hvv8/GHSA-j47f-4232-hvv8.json",\n  "https://github.com/tensorflow/tensorflow/commit/44b7f486c0143f68b56c34e2d01e146ee445134a",\n  "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-j47f-4232-hvv8",\n  "https://nvd.nist.gov/vuln/detail/CVE-2021-29532"\n]', 'CVSS3Score': '2.500000000', 'Severity': 'UNKNOWN', 'GitHubSeverity': 'LOW', 'Disclosed': 1621606937000000, 'Packages': '[\n  {\n    "AffectedVersions": "Introduced: 0, Fixed: 2.1.4, Introduced: 2.2.0, Fixed: 2.2.3, Introduced: 2.3.0, Fixed: 2.3.3, Introduced: 2.4.0, Fixed: 2.4.2",\n    "Name": "tensorflow",\n    "System": "PYPI",\n    "UnaffectedVersions": ""\n  },\n  {\n    "AffectedVersions": "Introduced: 0, Fixed: 2.1.4, Introduced: 2.2.0, Fixed: 2.2.3, Introduced: 2.3.0, Fixed: 2.3.3, Introduced: 2.4.0, Fixed: 2.4.2",\n    "Name": "tensorflow-cpu",\n    "System": "PYPI",\n    "UnaffectedVersions": ""\n  },\n  {\n    "AffectedVersions": "Introduced: 0, Fixed: 2.1.4, Introduced: 2.2.0, Fixed: 2.2.3, Introduced: 2.3.0, Fixed: 2.3.3, Introduced: 2.4.0, Fixed: 2.4.2",\n    "Name": "tensorflow-gpu",\n    "System": "PYPI",\n    "UnaffectedVersions": ""\n  }\n]', 'Aliases': '[]'}]

--------------------------------------------------
Table full name: DEPS_DEV_V1.DEPS_DEV_V1.PACKAGEVERSIONS
Column name: DependenciesProcessed Type: BOOLEAN
Column name: Hashes Type: VARIANT
Column name: Links Type: VARIANT
Column name: Purl Type: TEXT
Column name: SLSAProvenance Type: VARIANT
Column name: Registries Type: VARIANT
Column name: Name Type: TEXT
Column name: DependencyError Type: BOOLEAN
Column name: Version Type: TEXT
Column name: UpstreamIdentifiers Type: VARIANT
Column name: Advisories Type: VARIANT
Column name: Licenses Type: VARIANT
Column name: VersionInfo Type: VARIANT
Column name: UpstreamPublishedAt Type: NUMBER
Column name: System Type: TEXT
Column name: SnapshotAt Type: NUMBER
Sample rows:
[{'SnapshotAt': 1680555696257226, 'System': 'NPM', 'Name': '@cocreate/attributes', 'Version': '1.1.6', 'Licenses': '[\n  "MIT"\n]', 'Links': '[\n  {\n    "Label": "HOMEPAGE",\n    "URL": "https://cocreate.app/docs/attributes"\n  },\n  {\n    "Label": "ISSUE_TRACKER",\n    "URL": "https://github.com/CoCreate-app/CoCreate-attributes/issues"\n  },\n  {\n    "Label": "ORIGIN",\n    "URL": "https://registry.npmjs.org/@cocreate%2Fattributes/1.1.6"\n  },\n  {\n    "Label": "SOURCE_REPO",\n    "URL": "git+https://github.com/CoCreate-app/CoCreate-attributes.git"\n  }\n]', 'Advisories': '[]', 'VersionInfo': '{\n  "IsRelease": true,\n  "Ordinal": 38\n}', 'Hashes': '[\n  {\n    "Hash": "+Rrk8ZgkjA9aQ1Vsp9vL9w==",\n    "Type": "MD5"\n  },\n  {\n    "Hash": "Dm1XJadxUxqBg8Zh/bd6+lm0H+c=",\n    "Type": "SHA1"\n  },\n  {\n    "Hash": "Zl71JyGD0CQEoTPH2LNDcRcqvp7xYR4GXIiStTxFyTH1D7MrMbTpD+qVqf0PSYtNtSIjR+dkxXRfCAtvjN0Acg==",\n    "Type": "SHA512"\n  }\n]', 'DependenciesProcessed': None, 'DependencyError': None, 'UpstreamPublishedAt': None, 'Registries': '[]', 'SLSAProvenance': None, 'UpstreamIdentifiers': '[]', 'Purl': None}, {'SnapshotAt': 1680555696257226, 'System': 'NPM', 'Name': '@codecademy/gamut-kit', 'Version': '0.6.169-alpha.e44bdf.0', 'Licenses': '[\n  "MIT"\n]', 'Links': '[\n  {\n    "Label": "HOMEPAGE",\n    "URL": "https://github.com/Codecademy/gamut#readme"\n  },\n  {\n    "Label": "ISSUE_TRACKER",\n    "URL": "https://github.com/Codecademy/gamut/issues"\n  },\n  {\n    "Label": "ORIGIN",\n    "URL": "https://registry.npmjs.org/@codecademy%2Fgamut-kit/0.6.169-alpha.e44bdf.0"\n  },\n  {\n    "Label": "SOURCE_REPO",\n    "URL": "git+ssh://git@github.com/Codecademy/gamut.git"\n  }\n]', 'Advisories': '[]', 'VersionInfo': '{\n  "IsRelease": false,\n  "Ordinal": 4486\n}', 'Hashes': '[\n  {\n    "Hash": "9pSWFecxsFQzj06lMVdc2g==",\n    "Type": "MD5"\n  },\n  {\n    "Hash": "iX43ZTZJTDr2DPMok8rgYS1BqTw=",\n    "Type": "SHA1"\n  },\n  {\n    "Hash": "Zmxf3AmBrKmqQPVGL36C+5HD9wWm3XOtUta3UhCLXOySH/KIUc+ugaN3HENyk1P3L77Q2K2KtyS5EA0KJ2dLxg==",\n    "Type": "SHA512"\n  }\n]', 'DependenciesProcessed': None, 'DependencyError': None, 'UpstreamPublishedAt': None, 'Registries': '[]', 'SLSAProvenance': None, 'UpstreamIdentifiers': '[]', 'Purl': None}, {'SnapshotAt': 1680555696257226, 'System': 'NPM', 'Name': '@codecademy/gamut-labs', 'Version': '33.8.5-alpha.a6d165.0', 'Licenses': '[\n  "MIT"\n]', 'Links': '[\n  {\n    "Label": "HOMEPAGE",\n    "URL": "https://github.com/Codecademy/gamut#readme"\n  },\n  {\n    "Label": "ISSUE_TRACKER",\n    "URL": "https://github.com/Codecademy/gamut/issues"\n  },\n  {\n    "Label": "ORIGIN",\n    "URL": "https://registry.npmjs.org/@codecademy%2Fgamut-labs/33.8.5-alpha.a6d165.0"\n  },\n  {\n    "Label": "SOURCE_REPO",\n    "URL": "git+ssh://git@github.com/Codecademy/gamut.git"\n  }\n]', 'Advisories': '[]', 'VersionInfo': '{\n  "IsRelease": false,\n  "Ordinal": 7280\n}', 'Hashes': '[\n  {\n    "Hash": "zdPCQdXahHgCDXkjlY//Mg==",\n    "Type": "MD5"\n  },\n  {\n    "Hash": "oOSw526KEINeHTUXGUSX38YBpX8=",\n    "Type": "SHA1"\n  },\n  {\n    "Hash": "gEeQfxoAe7ks3Hs7cUA9XpGzGwFUPeq1Dl8IjyhB71pqkSXbxK/3Lx3/xNVXgqpAcV/jVo5zmSxoPaGqyaXNyQ==",\n    "Type": "SHA512"\n  }\n]', 'DependenciesProcessed': None, 'DependencyError': None, 'UpstreamPublishedAt': None, 'Registries': '[]', 'SLSAProvenance': None, 'UpstreamIdentifiers': '[]', 'Purl': None}, {'SnapshotAt': 1680555696257226, 'System': 'NPM', 'Name': '@cocreate/prism', 'Version': '1.1.44', 'Licenses': '[\n  "MIT"\n]', 'Links': '[\n  {\n    "Label": "HOMEPAGE",\n    "URL": "https://cocreate.app/docs/prism"\n  },\n  {\n    "Label": "ISSUE_TRACKER",\n    "URL": "https://github.com/CoCreate-app/CoCreate-prism/issues"\n  },\n  {\n    "Label": "ORIGIN",\n    "URL": "https://registry.npmjs.org/@cocreate%2Fprism/1.1.44"\n  },\n  {\n    "Label": "SOURCE_REPO",\n    "URL": "git+https://github.com/CoCreate-app/CoCreate-prism.git"\n  }\n]', 'Advisories': '[]', 'VersionInfo': '{\n  "IsRelease": true,\n  "Ordinal": 58\n}', 'Hashes': '[\n  {\n    "Hash": "LxjNUp6AJXinVH6+6hQaYA==",\n    "Type": "MD5"\n  },\n  {\n    "Hash": "ZWaV34jayLcKDXfyFJXHtnFKRBg=",\n    "Type": "SHA1"\n  },\n  {\n    "Hash": "O+kzv/aeLKbta4z9S0QGkt9cQnRBeH88nBVhjZLGzW9pKzTICpcND8KLpsCBDVNf65qReCnKFWRTEm+OxjJ+Gw==",\n    "Type": "SHA512"\n  }\n]', 'DependenciesProcessed': None, 'DependencyError': None, 'UpstreamPublishedAt': None, 'Registries': '[]', 'SLSAProvenance': None, 'UpstreamIdentifiers': '[]', 'Purl': None}, {'SnapshotAt': 1680555696257226, 'System': 'NPM', 'Name': '@codecademy/gamut', 'Version': '45.1.4-alpha.84e3f4.0', 'Licenses': '[\n  "MIT"\n]', 'Links': '[\n  {\n    "Label": "HOMEPAGE",\n    "URL": "https://github.com/Codecademy/gamut#readme"\n  },\n  {\n    "Label": "ISSUE_TRACKER",\n    "URL": "https://github.com/Codecademy/gamut/issues"\n  },\n  {\n    "Label": "ORIGIN",\n    "URL": "https://registry.npmjs.org/@codecademy%2Fgamut/45.1.4-alpha.84e3f4.0"\n  },\n  {\n    "Label": "SOURCE_REPO",\n    "URL": "git+ssh://git@github.com/Codecademy/gamut.git"\n  }\n]', 'Advisories': '[]', 'VersionInfo': '{\n  "IsRelease": false,\n  "Ordinal": 5925\n}', 'Hashes': '[\n  {\n    "Hash": "CymJ7C8UnM+85+EmzYv8Kw==",\n    "Type": "MD5"\n  },\n  {\n    "Hash": "g+HULcKhISge204ED0Vaa8m2yZ0=",\n    "Type": "SHA1"\n  },\n  {\n    "Hash": "8mMTIOWrWVszVvqnpWm0Lxvp9CrzMJ5gejGW3LsQACr5cSZesEOb9HJZDqfjAccAJZplaTs4eut3soMwD2Ca+A==",\n    "Type": "SHA512"\n  }\n]', 'DependenciesProcessed': None, 'DependencyError': None, 'UpstreamPublishedAt': None, 'Registries': '[]', 'SLSAProvenance': None, 'UpstreamIdentifiers': '[]', 'Purl': None}]

--------------------------------------------------
Table full name: DEPS_DEV_V1.DEPS_DEV_V1.PACKAGEVERSIONTOPROJECT
Column name: SnapshotAt Type: NUMBER
Column name: System Type: TEXT
Column name: RelationType Type: TEXT
Column name: ProjectType Type: TEXT
Column name: ProjectName Type: TEXT
Column name: Name Type: TEXT
Column name: RelationProvenance Type: TEXT
Column name: Version Type: TEXT
Sample rows:
[{'SnapshotAt': 1721768440525402, 'System': 'NPM', 'Name': '@dub/ui', 'Version': '0.0.57', 'ProjectType': 'GITHUB', 'ProjectName': 'steven-tey/dub', 'RelationProvenance': 'UNVERIFIED_METADATA', 'RelationType': 'SOURCE_REPO_TYPE'}, {'SnapshotAt': 1721768440525402, 'System': 'NPM', 'Name': '@dub/ui', 'Version': '0.0.64', 'ProjectType': 'GITHUB', 'ProjectName': 'steven-tey/dub', 'RelationProvenance': 'UNVERIFIED_METADATA', 'RelationType': 'SOURCE_REPO_TYPE'}, {'SnapshotAt': 1721768440525402, 'System': 'NPM', 'Name': '@dub/ui', 'Version': '0.0.44', 'ProjectType': 'GITHUB', 'ProjectName': 'steven-tey/dub', 'RelationProvenance': 'UNVERIFIED_METADATA', 'RelationType': 'SOURCE_REPO_TYPE'}, {'SnapshotAt': 1721768440525402, 'System': 'NPM', 'Name': '@dub/ui', 'Version': '0.0.42', 'ProjectType': 'GITHUB', 'ProjectName': 'steven-tey/dub', 'RelationProvenance': 'UNVERIFIED_METADATA', 'RelationType': 'SOURCE_REPO_TYPE'}, {'SnapshotAt': 1721768440525402, 'System': 'NPM', 'Name': '@dub/ui', 'Version': '0.1.4', 'ProjectType': 'GITHUB', 'ProjectName': 'steven-tey/dub', 'RelationProvenance': 'UNVERIFIED_METADATA', 'RelationType': 'SOURCE_REPO_TYPE'}]

--------------------------------------------------
Table full name: DEPS_DEV_V1.DEPS_DEV_V1.NUGETREQUIREMENTS
Column name: DependencyGroups Type: VARIANT
Column name: Version Type: TEXT
Column name: Name Type: TEXT
Column name: SnapshotAt Type: NUMBER
Sample rows:
[{'SnapshotAt': 1725915643146231, 'Name': 'docs_sage', 'Version': '1.0.2.4', 'DependencyGroups': '[]'}, {'SnapshotAt': 1725915643146231, 'Name': 'docutainsdk.windows', 'Version': '1.0.1.1', 'DependencyGroups': '[]'}, {'SnapshotAt': 1725915643146231, 'Name': 'docx', 'Version': '1.7.0', 'DependencyGroups': '[]'}, {'SnapshotAt': 1725915643146231, 'Name': 'dojo.typescript.definitelytyped', 'Version': '2.3.9', 'DependencyGroups': '[]'}, {'SnapshotAt': 1725915643146231, 'Name': 'dojo.typescript.definitelytyped', 'Version': '0.0.1', 'DependencyGroups': '[]'}]

--------------------------------------------------
External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: [table name]}}): 
{'DEPS_DEV_V1': {'DEPS_DEV_V1': ['PROJECTS', 'DEPENDENCIES', 'DEPENDENCYGRAPHEDGES', 'DEPENDENTS', 'PACKAGEVERSIONHASHES', 'SNAPSHOTS', 'ADVISORIES', 'PACKAGEVERSIONS', 'PACKAGEVERSIONTOPROJECT', 'NUGETREQUIREMENTS']}}

Some few-shot examples after column exploration may be helpful:
Query:
-- Description: 1) Peek at some GitHub projects together with their star numbers  
SELECT "Name",
       "StarsCount",
       "ForksCount",
       "Description"
FROM   DEPS_DEV_V1.DEPS_DEV_V1."PROJECTS"
WHERE  "Type" = 'GITHUB'
ORDER  BY "StarsCount" DESC
LIMIT  20;
Answer:
Name,StarsCount,ForksCount,Description
sindresorhus/awesome,311123,27057,üòé Awesome lists about all kinds of interesting topics
sindresorhus/awesome,277025,26697,üòé Awesome lists about all kinds of interesting topics
tensorflow/tensorflow,178762,89117,An Open Source Machine Learning Framework for Everyone
thealgorithms/python,172611,43305,All Algorithms implemented in Python
robbyrussell/oh-my-zsh,170853,25737,"üôÉ   A delightful community-driven (with 2,300+ contributors) framework for managin
Query:
-- Description: 2) Inspect how NPM package versions are linked to GitHub repos via PACKAGEVERSIONTOPROJECT  
SELECT "System",
       "Name",
       "Version",
       "ProjectType",
       "ProjectName",
       "RelationType"
FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONTOPROJECT"
WHERE  "System" = 'NPM'
  AND  "ProjectType" = 'GITHUB'
  AND  "RelationType" = 'SOURCE_REPO_TYPE'
LIMIT  20;
Answer:
System,Name,Version,ProjectType,ProjectName,RelationType
NPM,@dms/io,0.9.1,GITHUB,dataminingsupply/dms-io,SOURCE_REPO_TYPE
NPM,@dms/io,0.8.6,GITHUB,dataminingsupply/dms-io,SOURCE_REPO_TYPE
NPM,@dms/io,0.8.0,GITHUB,dataminingsupply/dms-io,SOURCE_REPO_TYPE
NPM,@dub/ui,0.0.43,GITHUB,steven-tey/dub,SOURCE_REPO_TYPE
NPM,@dub/ui,0.0.61,GITHUB,steven-tey/dub,SOURCE_REPO_TYPE
NPM,@dub/ui,0.1.23,GITHUB,steven-tey/dub,SOURCE_REPO_TYPE
NPM,@dub/ui,0.0.45,GITHUB,steven-tey/dub,SOURCE_REPO_TYPE
Query:
-- Description: 3) View the JSON structure of the VersionInfo column for a few NPM versions  
SELECT "Name",
       "Version",
       "VersionInfo"
FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
WHERE  "System" = 'NPM'
LIMIT  20;
Answer:
Name,Version,VersionInfo
@dfds-ui/react-components,0.8.45-alpha.c4d6ef85,"{
  ""IsRelease"": false,
  ""Ordinal"": 1557
}"
@dfds-ui/react-components,0.8.65-alpha.a3276ccf,"{
  ""IsRelease"": false,
  ""Ordinal"": 1849
}"
@digigov/auth,0.0.1-fix-logout.10,"{
  ""IsRelease"": false,
  ""Ordinal"": 67
}"
@dfds-ui/scripts,0.1.29-alpha.d1dbf29,"{
  ""IsRelease"": false,
  ""Ordinal"": 264
}"
@dfds-ui/colors,0.6.2-alpha.4439ec1,"{
  ""IsRelease"": false,
  ""Ordinal"": 477
}"
@dfds-ui/modal,0.8.
Query:
-- Description: 4) Extract `IsRelease` and `Ordinal` flags from VersionInfo to understand release ordering  
SELECT "Name",
       "Version",
       PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN  AS "IsRelease",
       PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER     AS "Ordinal"
FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
WHERE  "System" = 'NPM'
  AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
LIMIT  20;
Answer:
Name,Version,IsRelease,Ordinal
wot-design,2.0.0,True,15
wpfnodecli,1.0.51,True,49
zach-to-git,0.1.3,True,4
yelp-locales,1.0.356,True,357
wstatesession,0.3.93,True,93
xctest-client,1.0.15,True,16
wordsearch-algo,2.1.0,True,4
zq-ui-components,0.0.4,True,4
yuanian-ai-component,0.3.39,True,216
zeebe-elasticsearch-client,0.3.0,True,10
yoshi>1.1.304>cssnano>ansi-styles,2.2.1,True,1
xpx>0.0.2-beta>npm>npmlog>gauge>object-assign,4.1.1,True,1
Query:
-- Description: 5) For each NPM package, keep only the latest *release* version by highest Ordinal  
SELECT *
FROM  (
        SELECT "Name",
               "Version",
               PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER AS "Ordinal",
               ROW_NUMBER() OVER (PARTITION BY "Name"
                                  ORDER BY PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER DESC) AS rn
        FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
        WHERE  "System" = 'NPM'
          AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
      )
WHERE  rn = 1
LIMIT  20;
Answer:
Name,Version,Ordinal,RN
step-node-agent>3.20.1>npm>copy-concurrently>iferr,0.1.5,1,1
homebridge-config-ui-x>4.7.1-test.19>sonic-boom,0.7.6,1,1
tesseractyl,0.0.4,3,1
not-albertsgrc>1.1.3>is-typedarray,1.0.0,1,1
summarizely,0.0.2,2,1
ss-database>2.0.0-beta.7>@ipld/dag-cbor,6.0.9,1,1
@f1stnpm2/asperiores-praesentium-quos,1.0.0,1,1
apib,0.2.0,6,1
string-ranger,0.0.1,1,1
@wvr/core>2.2.2-alpha.12>rimraf,3.0.2,1,1
not-albertsgrc>1.0.15>cryptiles,2.0.5,1,1
Query:
-- Description: 6) Join the ‚Äúlatest-release‚Äù result with PACKAGEVERSIONTOPROJECT to obtain the GitHub repo  
WITH latest AS (
        SELECT "Name",
               "Version"
        FROM  (
                SELECT "Name",
                       "Version",
                       ROW_NUMBER() OVER (PARTITION BY "Name"
                                          ORDER BY PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER DESC) AS rn
                FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
                WHERE  "System" = 'NPM'
                  AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
              )
        WHERE  rn = 1
)
SELECT l."Name"              AS "Package",
       l."Version",
       pvt."ProjectName"
FROM   latest l
JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONTOPROJECT" pvt
       ON  pvt."System"      = 'NPM'
       AND pvt."Name"        = l."Name"
       AND pvt."Version"     = l."Version"
       AND pvt."ProjectType" = 'GITHUB'
       AND pvt."RelationType"= 'SOURCE_REPO_TYPE'
LIMIT  20;
Answer:
Package,Version,ProjectName
@docusaurus/plugin-content-pages,2.4.1,facebook/docusaurus
@dreamnet/queue,1.1.2,dreamnettech/monorepo
@dmartss/palette,1.0.3,dmartss/personal-packages
@dpgradio/eslint-config-vue3,0.0.2,dpgradio/code-style
@dollarshaveclub/cli>2.0.1>ms,2.1.1,zeit/ms
@drips/lazy,0.0.6,wixplosives/drip
@domparty/fe,0.0.81,domparty/component-library
@dot/env,0.1.4,shellscape/dot
@dpoineau/react-scripts>1.0.0>exit-hook,1.1.1,sindresorhus/exit-hook
Query:
-- Description: 7) Add GitHub star counts by joining with PROJECTS  
WITH latest AS (
        SELECT "Name","Version"
        FROM  (
                SELECT "Name",
                       "Version",
                       ROW_NUMBER() OVER (PARTITION BY "Name"
                                          ORDER BY PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER DESC) AS rn
                FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
                WHERE  "System" = 'NPM'
                  AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
              )
        WHERE  rn = 1
),
pkg_repo AS (
        SELECT l."Name"      AS "Package",
               l."Version",
               pvt."ProjectName"
        FROM   latest l
        JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONTOPROJECT" pvt
               ON  pvt."System"      = 'NPM'
               AND pvt."Name"        = l."Name"
               AND pvt."Version"     = l."Version"
               AND pvt."ProjectType" = 'GITHUB'
               AND pvt."RelationType"= 'SOURCE_REPO_TYPE'
)
SELECT pr."Package",
       pr."Version",
       proj."StarsCount"
FROM   pkg_repo pr
JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PROJECTS" proj
       ON proj."Type" = 'GITHUB'
      AND proj."Name" = pr."ProjectName"
ORDER  BY proj."StarsCount" DESC
LIMIT  20;
Answer:
Package,Version,StarsCount
@dmrvos/infrajs>0.0.6>typescript,2.6.2,94931
@dmrvos/infrajs>0.0.5>typescript,2.6.2,94931
@dylanvann/svelte,3.25.4,73499
@dumc11/tailwindcss,0.4.0,73464
@dollarshaveclub/cli>1.1.0>lodash,4.17.4,57779
@dwarvesf/react-scripts>0.7.0>lodash._arraycopy,3.0.0,57779
@dpoineau/react-scripts>1.0.0>lodash.keys,3.1.2,57779
@dpoineau/react-scripts>1.0.0>lodash.endswith,4.2.1,57779
@dpoineau/react-scripts>1.0.0>lodash._arraycopy,3.0.0,57779
@dollarshaveclub/cli>1.12.0>lod
Query:
-- Description: 8) Produce the final list of the top-8 most-starred packages together with their latest release versions  
WITH latest AS (
        SELECT "Name","Version"
        FROM  (
                SELECT "Name",
                       "Version",
                       ROW_NUMBER() OVER (PARTITION BY "Name"
                                          ORDER BY PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER DESC) AS rn
                FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
                WHERE  "System" = 'NPM'
                  AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
              )
        WHERE  rn = 1
),
pkg_repo AS (
        SELECT l."Name"      AS "Package",
               l."Version",
               pvt."ProjectName"
        FROM   latest l
        JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONTOPROJECT" pvt
               ON  pvt."System"      = 'NPM'
               AND pvt."Name"        = l."Name"
               AND pvt."Version"     = l."Version"
               AND pvt."ProjectType" = 'GITHUB'
               AND pvt."RelationType"= 'SOURCE_REPO_TYPE'
),
pkg_stars AS (
        SELECT pr."Package",
               pr."Version",
               proj."StarsCount"
        FROM   pkg_repo pr
        JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PROJECTS" proj
               ON proj."Type" = 'GITHUB'
              AND proj."Name" = pr."ProjectName"
)
SELECT "Package",
       "Version",
       "StarsCount"
FROM   pkg_stars
ORDER  BY "StarsCount" DESC
LIMIT  8;
Answer:
Package,Version,StarsCount
@dmrvos/infrajs>0.0.6>typescript,2.6.2,94931
@dmrvos/infrajs>0.0.5>typescript,2.6.2,94931
@dylanvann/svelte,3.25.4,73499
@dumc11/tailwindcss,0.4.0,73464
@dollarshaveclub/cli>1.5.1>lodash,4.17.4,57779
@dwarvesf/react-scripts>0.7.0>lodash._arraycopy,3.0.0,57779
@dwarvesf/react-scripts>0.7.0>lodash._arrayeach,3.0.0,57779
@dwarvesf/react-scripts>0.7.0>lodash.words,3.2.0,57779
Query:
-- Description: 9) Quickly double-check the star distribution for the 8 selected packages  
SELECT "Package",
       "StarsCount"
FROM (
      /* re-use the previous CTE chain */
      WITH latest AS (
              SELECT "Name","Version"
              FROM  (
                      SELECT "Name",
                             "Version",
                             ROW_NUMBER() OVER (PARTITION BY "Name"
                                                ORDER BY PARSE_JSON("VersionInfo"):"Ordinal"::NUMBER DESC) AS rn
                      FROM   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS"
                      WHERE  "System" = 'NPM'
                        AND  PARSE_JSON("VersionInfo"):"IsRelease"::BOOLEAN = TRUE
                    )
              WHERE  rn = 1
      ),
      pkg_repo AS (
              SELECT l."Name"      AS "Package",
                     l."Version",
                     pvt."ProjectName"
              FROM   latest l
              JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONTOPROJECT" pvt
                     ON  pvt."System"      = 'NPM'
                     AND pvt."Name"        = l."Name"
                     AND pvt."Version"     = l."Version"
                     AND pvt."ProjectType" = 'GITHUB'
                     AND pvt."RelationType"= 'SOURCE_REPO_TYPE'
      ),
      pkg_stars AS (
              SELECT pr."Package",
                     pr."Version",
                     proj."StarsCount"
              FROM   pkg_repo pr
              JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PROJECTS" proj
                     ON proj."Type" = 'GITHUB'
                    AND proj."Name" = pr."ProjectName"
      )
      SELECT *
      FROM   pkg_stars
      ORDER  BY "StarsCount" DESC
      LIMIT  8
) t
LIMIT 20;
Answer:
Package,StarsCount
@dmrvos/infrajs>0.0.5>typescript,94931
@dmrvos/infrajs>0.0.6>typescript,94931
@dylanvann/svelte,73499
@dumc11/tailwindcss,73464
@dollarshaveclub/cli>1.5.1>lodash,57779
@dwarvesf/react-scripts>0.7.0>lodash._arraycopy,57779
@dwarvesf/react-scripts>0.7.0>lodash.words,57779
@dpoineau/react-scripts>1.0.0>lodash._basefor,57779
Query:
-- Description: 10) Inspect one of the top-starred packages‚Äô dependency list (optional exploration)  
SELECT "Dependency"
FROM   DEPS_DEV_V1.DEPS_DEV_V1."DEPENDENCIES"
WHERE  "System" = 'NPM'
  AND  "Name"   ILIKE '%react%'
LIMIT  20;
Answer:
Dependency
"{
  ""Name"": ""scroom"",
  ""System"": ""NPM"",
  ""Version"": ""0.1.0""
}"
"{
  ""Name"": ""@emotion/memoize"",
  ""System"": ""NPM"",
  ""Version"": ""0.7.5""
}"
"{
  ""Name"": ""react-is"",
  ""System"": ""NPM"",
  ""Version"": ""16.13.1""
}"
"{
  ""Name"": ""shallowequal"",
  ""System"": ""NPM"",
  ""Version"": ""1.1.0""
}"
"{
  ""Name"": ""camelize"",
  ""System"": ""NPM"",
  ""Version"": ""1.0.0""
}"
"{
  ""Name"": ""@babel/helper-hoist-variables"",
  ""System"": ""NPM""
Task: Considering only the latest release versions of NPM package, which packages are the top 8 most popular based on the Github star number, as well as their versions?

Please think step by step and answer only one complete SQL in snowflake dialect in ```sql``` format.
SQL usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'DEPS_DEV_V1': {'DEPS_DEV_V1': ['PROJECTS', 'DEPENDENCIES', 'DEPENDENCYGRAPHEDGES', 'DEPENDENTS', 'PACKAGEVERSIONHASHES', 'SNAPSHOTS', 'ADVISORIES', 'PACKAGEVERSIONS', 'PACKAGEVERSIONTOPROJECT', 'NUGETREQUIREMENTS']}}

When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
If the task description does not specify the number of decimal places, retain all decimals to four places.

[Self-refine]
2025-05-07 05:34:42 - Thread-163 (execute) - INFO - [Try to run SQL in self-refine]
```sql
WITH latest_release AS (            -- newest *release* version of every NPM package
    SELECT
        pv."Name",
        pv."Version",
        ROW_NUMBER() OVER (
              PARTITION BY pv."Name"
              ORDER BY (PARSE_JSON(pv."VersionInfo"):"Ordinal"::NUMBER) DESC
        ) AS rn
    FROM DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONS" pv
    WHERE pv."System" = 'NPM'
      AND PARSE_JSON(pv."VersionInfo"):"IsRelease"::BOOLEAN = TRUE
),
latest_pkg AS (                     -- keep only the newest release row
    SELECT "Name", "Version"
    FROM   latest_release
    WHERE  rn = 1
),
pkg_to_repo AS (                    -- link package version to its GitHub repository
    SELECT
        lp."Name",
        lp."Version",
        pvt."ProjectName"
    FROM   latest_pkg lp
    JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PACKAGEVERSIONTOPROJECT" pvt
           ON  pvt."System"        = 'NPM'
           AND pvt."Name"          = lp."Name"
           AND pvt."Version"       = lp."Version"
           AND pvt."ProjectType"   = 'GITHUB'
           AND pvt."RelationType"  = 'SOURCE_REPO_TYPE'
),
pkg_with_stars AS (                 -- attach GitHub star counts
    SELECT
        ptr."Name"        AS "Package",
        ptr."Version",
        proj."StarsCount"
    FROM   pkg_to_repo ptr
    JOIN   DEPS_DEV_V1.DEPS_DEV_V1."PROJECTS" proj
           ON  proj."Type" = 'GITHUB'
           AND proj."Name" = ptr."ProjectName"
)
SELECT
    "Package",
    "Version",
    "StarsCount"
FROM   pkg_with_stars
ORDER  BY "StarsCount" DESC NULLS LAST
LIMIT  8;
```
[Try to run SQL in self-refine]
2025-05-07 05:37:23 - Thread-163 (execute) - INFO - Total iteration counts: 0
