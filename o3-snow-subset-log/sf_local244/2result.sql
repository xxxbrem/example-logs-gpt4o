/* -----------------------------------------------------------
   1) Compute global minimum, average and maximum durations
   2) Classify every track as Short / Medium / Long
   3) Calculate revenue generated by each track
   4) Aggregate per category:   minimum & maximum duration (in minutes) 
                                + total revenue
------------------------------------------------------------ */
WITH track_stats AS (
    SELECT
        MIN("Milliseconds")                        AS min_ms,
        AVG("Milliseconds")                        AS avg_ms,
        MAX("Milliseconds")                        AS max_ms
    FROM MUSIC.MUSIC.TRACK
),
categorized_tracks AS (
    SELECT
        t."TrackId",
        t."Milliseconds",
        CASE
            WHEN t."Milliseconds" < (ts.min_ms + ts.avg_ms) / 2     THEN 'Short'
            WHEN t."Milliseconds" < (ts.avg_ms + ts.max_ms) / 2     THEN 'Medium'
            ELSE                                                        'Long'
        END                                                         AS duration_category
    FROM MUSIC.MUSIC.TRACK t
    CROSS JOIN track_stats ts
),
track_revenue AS (
    SELECT
        il."TrackId",
        SUM(il."UnitPrice" * il."Quantity")        AS track_revenue
    FROM MUSIC.MUSIC.INVOICELINE il
    GROUP BY il."TrackId"
),
category_agg AS (
    SELECT
        ct.duration_category                       AS "Category",
        ROUND(MIN(ct."Milliseconds") / 60000.0, 4) AS "MinMinutes",
        ROUND(MAX(ct."Milliseconds") / 60000.0, 4) AS "MaxMinutes",
        ROUND(SUM(COALESCE(tr.track_revenue, 0)),4)AS "TotalRevenue"
    FROM categorized_tracks ct
    LEFT JOIN track_revenue tr
           ON ct."TrackId" = tr."TrackId"
    GROUP BY ct.duration_category
)
SELECT *
FROM category_agg
ORDER BY "Category";