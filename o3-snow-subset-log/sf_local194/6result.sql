WITH film_revenue AS (               -- total money generated by each film
    SELECT 
        i."film_id",
        SUM(p."amount") AS total_revenue
    FROM SQLITE_SAKILA.SQLITE_SAKILA.PAYMENT   p
    JOIN SQLITE_SAKILA.SQLITE_SAKILA.RENTAL    r ON p."rental_id"  = r."rental_id"
    JOIN SQLITE_SAKILA.SQLITE_SAKILA.INVENTORY i ON r."inventory_id" = i."inventory_id"
    GROUP BY i."film_id"
),
actor_count AS (                     -- number of actors appearing in each film
    SELECT 
        fa."film_id",
        COUNT(DISTINCT fa."actor_id") AS actor_cnt
    FROM SQLITE_SAKILA.SQLITE_SAKILA.FILM_ACTOR fa
    GROUP BY fa."film_id"
),
revenue_per_actor AS (               -- film revenue allocated equally to its actors
    SELECT
        ac."film_id",
        COALESCE(fr.total_revenue,0) / ac.actor_cnt AS rev_per_actor
    FROM actor_count ac
    LEFT JOIN film_revenue fr ON ac."film_id" = fr."film_id"
),
actor_film_rev AS (                  -- revenue-per-actor for every (actor, film) pair
    SELECT
        fa."actor_id",
        fa."film_id",
        COALESCE(rpa.rev_per_actor,0) AS rev_per_actor
    FROM SQLITE_SAKILA.SQLITE_SAKILA.FILM_ACTOR fa
    LEFT JOIN revenue_per_actor rpa ON fa."film_id" = rpa."film_id"
),
ranked AS (                          -- rank films per actor by their revenue share
    SELECT
        afr.*,
        ROW_NUMBER() OVER (PARTITION BY afr."actor_id" ORDER BY afr.rev_per_actor DESC NULLS LAST) AS rn
    FROM actor_film_rev afr
),
top3 AS (                            -- keep only the three most lucrative films for each actor
    SELECT * 
    FROM ranked
    WHERE rn <= 3
),
avg_per_actor AS (                   -- average revenue-per-actor across the top-3 films
    SELECT
        "actor_id",
        AVG(rev_per_actor) AS avg_top3_rev_per_actor
    FROM top3
    GROUP BY "actor_id"
)
SELECT
    a."actor_id",
    a."first_name",
    a."last_name",
    f."film_id",
    f."title",
    t.rev_per_actor                      AS revenue_per_actor,
    ap.avg_top3_rev_per_actor            AS average_top3_revenue_per_actor
FROM top3                          t
JOIN SQLITE_SAKILA.SQLITE_SAKILA.ACTOR a ON t."actor_id" = a."actor_id"
JOIN SQLITE_SAKILA.SQLITE_SAKILA.FILM  f ON t."film_id"  = f."film_id"
JOIN avg_per_actor                ap ON t."actor_id" = ap."actor_id"
ORDER BY a."actor_id", t.rev_per_actor DESC NULLS LAST;