WITH FILM_REVENUE AS (          -- total revenue generated by each film
    SELECT 
        i."film_id",
        SUM(p."amount") AS "total_revenue"
    FROM "SQLITE_SAKILA"."SQLITE_SAKILA"."PAYMENT"   p
    JOIN "SQLITE_SAKILA"."SQLITE_SAKILA"."RENTAL"    r  ON p."rental_id"   = r."rental_id"
    JOIN "SQLITE_SAKILA"."SQLITE_SAKILA"."INVENTORY" i  ON r."inventory_id" = i."inventory_id"
    GROUP BY i."film_id"
),
FILM_ACTOR_COUNT AS (           -- number of actors in each film
    SELECT 
        fa."film_id",
        COUNT(*) AS "actor_cnt"
    FROM "SQLITE_SAKILA"."SQLITE_SAKILA"."FILM_ACTOR" fa
    GROUP BY fa."film_id"
),
ACTOR_FILM_REV AS (             -- revenue share for every (actor, film) pair
    SELECT
        fa."actor_id",
        fa."film_id",
        fr."total_revenue" / fac."actor_cnt" AS "actor_revenue"
    FROM "SQLITE_SAKILA"."SQLITE_SAKILA"."FILM_ACTOR" fa
    JOIN FILM_REVENUE     fr  ON fa."film_id" = fr."film_id"
    JOIN FILM_ACTOR_COUNT fac ON fa."film_id" = fac."film_id"
),
RANKED AS (                     -- rank films per actor by revenue share
    SELECT
        afr.*,
        ROW_NUMBER() OVER (PARTITION BY afr."actor_id"
                           ORDER BY afr."actor_revenue" DESC) AS "rn"
    FROM ACTOR_FILM_REV afr
)
SELECT
    a."actor_id",
    a."first_name",
    a."last_name",
    f."film_id",
    f."title",
    ROUND(r."actor_revenue", 4) AS "actor_revenue"
FROM RANKED                         r
JOIN "SQLITE_SAKILA"."SQLITE_SAKILA"."ACTOR" a ON r."actor_id" = a."actor_id"
JOIN "SQLITE_SAKILA"."SQLITE_SAKILA"."FILM"  f ON r."film_id"  = f."film_id"
WHERE r."rn" <= 3                       -- top 3 films per actor
ORDER BY a."actor_id",
         r."actor_revenue" DESC NULLS LAST,
         f."title";