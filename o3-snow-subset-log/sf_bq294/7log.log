2025-05-06 23:17:07 - Thread-1144 (execute) - INFO - itercount: 0
2025-05-06 23:17:07 - Thread-1144 (execute) - INFO - [Self-refine]
Table full name: SAN_FRANCISCO_PLUS.SAN_FRANCISCO_311._311_SERVICE_REQUESTS
Column name: latitude Type: FLOAT Description: Service request location latitude coordinate.
Column name: neighborhood Type: TEXT
Column name: status Type: TEXT Description: Service request status. Duplicate statuses indicate that issue had previously been reported recently.
Column name: police_district Type: TEXT
Column name: agency_name Type: TEXT
Column name: longitude Type: FLOAT Description: Service request location longitude coordinate.
Column name: status_notes Type: TEXT
Column name: supervisor_district Type: NUMBER
Column name: unique_key Type: NUMBER Description: The service request tracking number.
Column name: closed_date Type: NUMBER
Column name: source Type: TEXT Description: Contact method Service request was received from. Mass entry requests are submitted by dept. in groups after work is completed.
Column name: descriptor Type: TEXT
Column name: incident_address Type: TEXT Description: Service location of Service request.
Column name: resolution_action_updated_date Type: NUMBER
Column name: category Type: TEXT
Column name: complaint_type Type: TEXT
Column name: created_date Type: NUMBER Description: Date Service request was created.
Column name: location Type: TEXT Description: Service request location latitude and longitude coordinates.
Column name: media_url Type: TEXT
Sample rows:
[{'unique_key': 2985411, 'created_date': 1382690175000000, 'closed_date': 1382927320000000, 'resolution_action_updated_date': 1382927320000000, 'status': 'Closed', 'status_notes': 'Case Transferred - transfer psr 442213', 'agency_name': 'SSP - MTA Feedback Queue', 'category': 'MUNI Feedback', 'complaint_type': 'MUNI  -', 'descriptor': None, 'incident_address': 'Not associated with a specific address', 'supervisor_district': None, 'neighborhood': None, 'location': '(0.0, 0.0)', 'source': 'Web', 'media_url': None, 'latitude': 0.0, 'longitude': 0.0, 'police_district': None}, {'unique_key': 4816895, 'created_date': 1433939055000000, 'closed_date': 1433940815000000, 'resolution_action_updated_date': 1433940815000000, 'status': 'Closed', 'status_notes': 'Case is Invalid - No location or issue given', 'agency_name': 'Clear Channel - Transit Queue', 'category': 'Litter Receptacles', 'complaint_type': 'Transit_shelter_platform', 'descriptor': None, 'incident_address': 'Not associated with a specific address', 'supervisor_district': None, 'neighborhood': None, 'location': '(0.0, 0.0)', 'source': 'Web', 'media_url': None, 'latitude': 0.0, 'longitude': 0.0, 'police_district': None}, {'unique_key': 5681054, 'created_date': 1458351658000000, 'closed_date': 1458611331000000, 'resolution_action_updated_date': 1458611331000000, 'status': 'Closed', 'status_notes': 'Case Transferred', 'agency_name': 'SSP - MTA Feedback Queue', 'category': 'MUNI Feedback', 'complaint_type': 'MUNI  -', 'descriptor': None, 'incident_address': 'Not associated with a specific address', 'supervisor_district': None, 'neighborhood': None, 'location': '(0.0, 0.0)', 'source': 'Web', 'media_url': None, 'latitude': 0.0, 'longitude': 0.0, 'police_district': None}, {'unique_key': 5491149, 'created_date': 1453448139000000, 'closed_date': 1453687827000000, 'resolution_action_updated_date': 1453687827000000, 'status': 'Closed', 'status_notes': 'Case Transferred', 'agency_name': 'SSP - MTA Feedback Queue', 'category': 'MUNI Feedback', 'complaint_type': 'MUNI  -', 'descriptor': None, 'incident_address': 'Not associated with a specific address', 'supervisor_district': None, 'neighborhood': None, 'location': '(0.0, 0.0)', 'source': 'Web', 'media_url': None, 'latitude': 0.0, 'longitude': 0.0, 'police_district': None}, {'unique_key': 3584359, 'created_date': 1398410915000000, 'closed_date': 1398771496000000, 'resolution_action_updated_date': 1398771496000000, 'status': 'Closed', 'status_notes': 'Case Transferred - psr 452888', 'agency_name': 'SSP - MTA Feedback Queue', 'category': 'MUNI Feedback', 'complaint_type': 'MUNI  -', 'descriptor': None, 'incident_address': 'Not associated with a specific address', 'supervisor_district': None, 'neighborhood': None, 'location': '(0.0, 0.0)', 'source': 'Web', 'media_url': None, 'latitude': 0.0, 'longitude': 0.0, 'police_district': None}]

--------------------------------------------------
Table full name: SAN_FRANCISCO_PLUS.SAN_FRANCISCO_BIKESHARE.BIKESHARE_STATION_STATUS
Column name: is_renting Type: BOOLEAN Description: 1/0 boolean - is the station currently renting bikes (even if the station is empty, if it is set to allow rentals this value should be 1)
Column name: is_installed Type: BOOLEAN Description: 1/0 boolean - is the station currently on the street
Column name: station_id Type: TEXT Description: Unique identifier of a station
Column name: num_bikes_available Type: NUMBER Description: Number of bikes available for rental
Column name: eightd_has_available_keys Type: BOOLEAN
Column name: num_docks_disabled Type: NUMBER Description: Number of empty but disabled dock points at the station. This value remains as part of the spec as it is possibly useful during development
Column name: last_reported Type: NUMBER Description: Integer POSIX timestamp indicating the last time this station reported its status to the backend
Column name: is_returning Type: BOOLEAN Description: 1/0 boolean - is the station accepting bike returns (if a station is full but would allow a return if it was not full then this value should be 1)
Column name: num_ebikes_available Type: NUMBER
Column name: num_bikes_disabled Type: NUMBER Description: Number of disabled bikes at the station. Vendors who do not want to publicize the number of disabled bikes or docks in their system can opt to omit station capacity (in station_information), num_bikes_disabled and num_docks_disabled. If station capacity is published then broken docks/bikes can be inferred (though not specifically whether the decreased capacity is a broken bike or dock)
Column name: num_docks_available Type: NUMBER Description: Number of docks accepting bike returns
Sample rows:
[{'station_id': '46b4ef45-b06b-40eb-9fdf-9bc8ff104a4f', 'num_bikes_available': 0, 'num_bikes_disabled': 0, 'num_docks_available': 15, 'num_docks_disabled': 0, 'is_installed': True, 'is_renting': True, 'is_returning': True, 'last_reported': 1729209514, 'num_ebikes_available': 0, 'eightd_has_available_keys': False}, {'station_id': 'bb54f5c8-5578-4167-9599-8e55154de4fd', 'num_bikes_available': 0, 'num_bikes_disabled': 0, 'num_docks_available': 27, 'num_docks_disabled': 0, 'is_installed': True, 'is_renting': True, 'is_returning': True, 'last_reported': 1729209462, 'num_ebikes_available': 0, 'eightd_has_available_keys': False}, {'station_id': '63b2136c-c947-473e-977e-8cc0e6347699', 'num_bikes_available': 0, 'num_bikes_disabled': 0, 'num_docks_available': 19, 'num_docks_disabled': 0, 'is_installed': True, 'is_renting': True, 'is_returning': True, 'last_reported': 1729209551, 'num_ebikes_available': 0, 'eightd_has_available_keys': False}, {'station_id': '7dd926da-25ee-48fd-9de7-ad59a83f94a8', 'num_bikes_available': 0, 'num_bikes_disabled': 0, 'num_docks_available': 31, 'num_docks_disabled': 0, 'is_installed': True, 'is_renting': True, 'is_returning': True, 'last_reported': 1729209544, 'num_ebikes_available': 0, 'eightd_has_available_keys': False}, {'station_id': 'e70c8987-0178-46f2-941f-1fd0eb306ed9', 'num_bikes_available': 0, 'num_bikes_disabled': 0, 'num_docks_available': 19, 'num_docks_disabled': 0, 'is_installed': True, 'is_renting': True, 'is_returning': True, 'last_reported': 1729209503, 'num_ebikes_available': 0, 'eightd_has_available_keys': False}]

--------------------------------------------------
Table full name: SAN_FRANCISCO_PLUS.SAN_FRANCISCO_BIKESHARE.BIKESHARE_REGIONS
Column name: region_id Type: NUMBER Description: Unique identifier for the region
Column name: name Type: TEXT Description: Public name for this region
Sample rows:
[{'region_id': 3, 'name': 'San Francisco'}, {'region_id': 5, 'name': 'San Jose'}, {'region_id': 12, 'name': 'Oakland'}, {'region_id': 23, 'name': '8D'}]

--------------------------------------------------
Table full name: SAN_FRANCISCO_PLUS.SAN_FRANCISCO_BIKESHARE.BIKESHARE_STATION_INFO
Column name: has_kiosk Type: BOOLEAN
Column name: region_id Type: NUMBER Description: ID of the region where station is located
Column name: name Type: TEXT Description: Public name of the station
Column name: short_name Type: TEXT Description: Short name or other type of identifier, as used by the data publisher
Column name: rental_methods Type: TEXT Description: Array of enumerables containing the payment methods accepted at this station.  Current valid values (in CAPS) are: KEY (i.e. operator issued bike key / fob / card) CREDITCARD PAYPASS APPLEPAY ANDROIDPAY TRANSITCARD ACCOUNTNUMBER PHONE This list is intended to be as comprehensive at the time of publication as possible but is subject to change, as defined in File Requirements above
Column name: external_id Type: TEXT
Column name: lon Type: FLOAT Description: The longitude of station. The field value must be a valid WGS 84 longitude in decimal degrees format. See: http://en.wikipedia.org/wiki/World_Geodetic_System, https://en.wikipedia.org/wiki/Decimal_degrees
Column name: eightd_has_key_dispenser Type: BOOLEAN
Column name: station_geom Type: BINARY
Column name: station_id Type: TEXT Description: Unique identifier of a station.
Column name: capacity Type: NUMBER Description: Number of total docking points installed at this station, both available and unavailable
Column name: lat Type: FLOAT Description: The latitude of station. The field value must be a valid WGS 84 latitude in decimal degrees format. See: http://en.wikipedia.org/wiki/World_Geodetic_System, https://en.wikipedia.org/wiki/Decimal_degrees
Sample rows:
[{'station_id': '523', 'name': 'Lafayette Park (Laguna St at Washington St)', 'short_name': 'SF-E21', 'lat': 37.791965999999995, 'lon': -122.429315, 'region_id': None, 'rental_methods': None, 'capacity': 0, 'external_id': None, 'eightd_has_key_dispenser': None, 'has_kiosk': False, 'station_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\xaa+\\x9f\\xe5y\\x9b^\\xc0\\xa0\\xc5R$_\\xe5B@')"}, {'station_id': '501', 'name': 'Balboa Park (San Jose Ave at Sgt. John V. Young Ln', 'short_name': 'SF-Y16', 'lat': 37.72489268, 'lon': -122.4432385, 'region_id': None, 'rental_methods': None, 'capacity': 0, 'external_id': None, 'eightd_has_key_dispenser': None, 'has_kiosk': False, 'station_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00^<\\x00\\x05^\\x9c^\\xc0\\xe0q\\x91H\\xc9\\xdcB@')"}, {'station_id': '535', 'name': 'Filbert St at Fillmore St', 'short_name': 'SF-C19', 'lat': 37.798013999999995, 'lon': -122.435562, 'region_id': None, 'rental_methods': None, 'capacity': 0, 'external_id': None, 'eightd_has_key_dispenser': None, 'has_kiosk': True, 'station_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00XXp?\\xe0\\x9b^\\xc0\\x06\\xe0\\x9fR%\\xe6B@')"}, {'station_id': '505', 'name': 'Geneva Ave at Moscow St', 'short_name': 'SF-CC18', 'lat': 37.71319254, 'lon': -122.43349135, 'region_id': None, 'rental_methods': None, 'capacity': 0, 'external_id': None, 'eightd_has_key_dispenser': None, 'has_kiosk': False, 'station_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00t\\xc3\\x7fR\\xbe\\x9b^\\xc0\\n;\\xa1\\xe4I\\xdbB@')"}, {'station_id': '544', 'name': 'Allyne Park (Green St at Gough St)', 'short_name': 'SF-C21', 'lat': 37.797249, 'lon': -122.427457, 'region_id': None, 'rental_methods': None, 'capacity': 19, 'external_id': None, 'eightd_has_key_dispenser': None, 'has_kiosk': True, 'station_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\x91\\xdc\\x9at[\\x9b^\\xc0e\\xe2VA\\x0c\\xe6B@')"}]

--------------------------------------------------
Table full name: SAN_FRANCISCO_PLUS.SAN_FRANCISCO_BIKESHARE.BIKESHARE_TRIPS
Column name: end_date Type: NUMBER
Column name: trip_id Type: TEXT Description: Numeric ID of bike trip
Column name: end_station_id Type: NUMBER Description: Numeric reference for end station
Column name: start_station_geom Type: BINARY
Column name: start_date Type: NUMBER
Column name: end_station_geom Type: BINARY
Column name: start_station_longitude Type: FLOAT
Column name: member_gender Type: TEXT
Column name: end_station_latitude Type: FLOAT
Column name: bike_number Type: NUMBER
Column name: start_station_name Type: TEXT Description: Station name for start station
Column name: zip_code Type: TEXT
Column name: end_station_longitude Type: FLOAT
Column name: end_station_name Type: TEXT Description: Station name for end station
Column name: c_subscription_type Type: TEXT
Column name: duration_sec Type: NUMBER
Column name: start_station_id Type: NUMBER Description: Numeric reference for start station
Column name: start_station_latitude Type: FLOAT
Column name: subscriber_type Type: TEXT Description: Type of the Subscriber
Column name: member_birth_year Type: NUMBER
Column name: bike_share_for_all_trip Type: TEXT
Sample rows:
[{'trip_id': '20170821170804431', 'duration_sec': 13008, 'start_date': 1503335284000000, 'start_station_name': '10th Ave at E 15th St', 'start_station_id': 222, 'end_date': 1503348292000000, 'end_station_name': '10th Ave at E 15th St', 'end_station_id': 222, 'bike_number': 431, 'zip_code': None, 'subscriber_type': 'Customer', 'c_subscription_type': None, 'start_station_latitude': 37.7927143, 'start_station_longitude': -122.2487796, 'end_station_latitude': 37.7927143, 'end_station_longitude': -122.2487796, 'member_birth_year': nan, 'member_gender': None, 'bike_share_for_all_trip': None, 'start_station_geom': 'bytearray(b"\\x01\\x01\\x00\\x00\\x00]zE\\x01\\xec\\x8f^\\xc0\\\'\\xc9\\x84\\xa9w\\xe5B@")', 'end_station_geom': 'bytearray(b"\\x01\\x01\\x00\\x00\\x00]zE\\x01\\xec\\x8f^\\xc0\\\'\\xc9\\x84\\xa9w\\xe5B@")'}, {'trip_id': '201804091702362074', 'duration_sec': 517, 'start_date': 1523293356000000, 'start_station_name': '10th St at Fallon St', 'start_station_id': 201, 'end_date': 1523293873000000, 'end_station_name': '10th Ave at E 15th St', 'end_station_id': 222, 'bike_number': 2074, 'zip_code': None, 'subscriber_type': 'Customer', 'c_subscription_type': None, 'start_station_latitude': 37.7976728, 'start_station_longitude': -122.2629973, 'end_station_latitude': 37.7927143, 'end_station_longitude': -122.2487796, 'member_birth_year': 1986.0, 'member_gender': 'Male', 'bike_share_for_all_trip': 'No', 'start_station_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\xec\\x9b\\xa0\\xf2\\xd4\\x90^\\xc0Rtn$\\x1a\\xe6B@')", 'end_station_geom': 'bytearray(b"\\x01\\x01\\x00\\x00\\x00]zE\\x01\\xec\\x8f^\\xc0\\\'\\xc9\\x84\\xa9w\\xe5B@")'}, {'trip_id': '201803191639552778', 'duration_sec': 917, 'start_date': 1521477595000000, 'start_station_name': '10th St at Fallon St', 'start_station_id': 201, 'end_date': 1521478513000000, 'end_station_name': '10th Ave at E 15th St', 'end_station_id': 222, 'bike_number': 2778, 'zip_code': None, 'subscriber_type': 'Subscriber', 'c_subscription_type': None, 'start_station_latitude': 37.7976728, 'start_station_longitude': -122.2629973, 'end_station_latitude': 37.7927143, 'end_station_longitude': -122.2487796, 'member_birth_year': 1984.0, 'member_gender': 'Male', 'bike_share_for_all_trip': 'Yes', 'start_station_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\xec\\x9b\\xa0\\xf2\\xd4\\x90^\\xc0Rtn$\\x1a\\xe6B@')", 'end_station_geom': 'bytearray(b"\\x01\\x01\\x00\\x00\\x00]zE\\x01\\xec\\x8f^\\xc0\\\'\\xc9\\x84\\xa9w\\xe5B@")'}, {'trip_id': '20180411154326560', 'duration_sec': 893, 'start_date': 1523461406000000, 'start_station_name': '12th St at 6th Ave', 'start_station_id': 221, 'end_date': 1523462299000000, 'end_station_name': '10th Ave at E 15th St', 'end_station_id': 222, 'bike_number': 560, 'zip_code': None, 'subscriber_type': 'Customer', 'c_subscription_type': None, 'start_station_latitude': 37.7943532, 'start_station_longitude': -122.2538745, 'end_station_latitude': 37.7927143, 'end_station_longitude': -122.2487796, 'member_birth_year': 1982.0, 'member_gender': 'Male', 'bike_share_for_all_trip': 'No', 'start_station_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00t\\xb2\\xd4z?\\x90^\\xc0\\x8a\\xbc\\x9b]\\xad\\xe5B@')", 'end_station_geom': 'bytearray(b"\\x01\\x01\\x00\\x00\\x00]zE\\x01\\xec\\x8f^\\xc0\\\'\\xc9\\x84\\xa9w\\xe5B@")'}, {'trip_id': '20180423181438262', 'duration_sec': 998, 'start_date': 1524507278000000, 'start_station_name': '13th St at Franklin St', 'start_station_id': 338, 'end_date': 1524508277000000, 'end_station_name': '10th Ave at E 15th St', 'end_station_id': 222, 'bike_number': 262, 'zip_code': None, 'subscriber_type': 'Subscriber', 'c_subscription_type': None, 'start_station_latitude': 37.80318908113163, 'start_station_longitude': -122.27057933807372, 'end_station_latitude': 37.7927143, 'end_station_longitude': -122.2487796, 'member_birth_year': 1982.0, 'member_gender': 'Other', 'bike_share_for_all_trip': 'No', 'start_station_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00,Q\\x91^\\xc0y\\xfbY\\xe6\\xce\\xe6B@')", 'end_station_geom': 'bytearray(b"\\x01\\x01\\x00\\x00\\x00]zE\\x01\\xec\\x8f^\\xc0\\\'\\xc9\\x84\\xa9w\\xe5B@")'}]

--------------------------------------------------
Table full name: SAN_FRANCISCO_PLUS.SAN_FRANCISCO_FILM_LOCATIONS.FILM_LOCATIONS
Column name: writer Type: TEXT
Column name: locations Type: TEXT
Column name: actor_3 Type: TEXT
Column name: production_company Type: TEXT
Column name: actor_1 Type: TEXT
Column name: fun_facts Type: TEXT
Column name: title Type: TEXT
Column name: release_year Type: NUMBER
Column name: director Type: TEXT
Column name: distributor Type: TEXT
Column name: actor_2 Type: TEXT
Sample rows:
[{'title': 'Greed', 'release_year': 1924, 'locations': 'Cliff House (1090 Point Lobos Avenue)', 'fun_facts': 'In 1887, the Cliff House was severely damaged when the schooner Parallel, abandoned and loaded with dynamite, ran aground on the rocks below.', 'production_company': 'Metro-Goldwyn-Mayer (MGM)', 'distributor': 'Metro-Goldwyn-Mayer (MGM)', 'director': 'Eric von Stroheim', 'writer': 'Eric von Stroheim', 'actor_1': 'Zasu Pitts', 'actor_2': 'Gibson Gowland', 'actor_3': 'Jean Hersholt'}, {'title': 'San Francisco', 'release_year': 1936, 'locations': 'The Barbary Coast', 'fun_facts': 'The Barbary Coast was a red-light district that was largely destroyed in the 1906 earthquake. Though some of the establishments were rebuilt after the earthquake, an anti-vice campaign put the establishments out of business.', 'production_company': 'Metro-Goldwyn Mayer', 'distributor': 'Metro-Goldwyn Mayer', 'director': 'W.S. Van Dyke', 'writer': 'Anita Loos', 'actor_1': 'Clark Gable', 'actor_2': 'Jeanette MacDonald', 'actor_3': 'Spencer Tracy'}, {'title': "Alexander's Ragtime Band", 'release_year': 1938, 'locations': 'San Francisco Bay', 'fun_facts': None, 'production_company': 'Twentieth Century Fox Film Corporation', 'distributor': 'Twentieth Century Fox Film Corporation', 'director': 'Henry King', 'writer': 'Kathryn Scola', 'actor_1': 'Tyrone Power', 'actor_2': 'Alice Faye', 'actor_3': 'Don Ameche'}, {'title': 'The Maltese Falcon', 'release_year': 1941, 'locations': 'Golden Gate Bridge', 'fun_facts': "With 23 miles of ladders and 300,000 rivets in each tower, the Golden Gate Bridge was the world's longest span when it opened in 1937.", 'production_company': 'Warner Bros. Pictures', 'distributor': 'Warner Bros. Pictures', 'director': 'John Huston', 'writer': 'John Huston', 'actor_1': 'Humphrey Bogart', 'actor_2': 'Mary Astor', 'actor_3': 'Gladys George'}, {'title': 'The Maltese Falcon', 'release_year': 1941, 'locations': 'Ferry Building', 'fun_facts': 'Every hour and half-hour, the clock bell atop the Ferry Building chimes portions of the Westminster Quarters.', 'production_company': 'Warner Bros. Pictures', 'distributor': 'Warner Bros. Pictures', 'director': 'John Huston', 'writer': 'John Huston', 'actor_1': 'Humphrey Bogart', 'actor_2': 'Mary Astor', 'actor_3': 'Gladys George'}]

--------------------------------------------------
Table full name: SAN_FRANCISCO_PLUS.SAN_FRANCISCO_NEIGHBORHOODS.BOUNDARIES
Column name: internal_point_geom Type: BINARY
Column name: internal_point_longitude Type: FLOAT
Column name: internal_point_latitude Type: FLOAT
Column name: neighborhood_geom Type: BINARY
Column name: neighborhood Type: TEXT
Sample rows:
[{'neighborhood': 'Bret Harte', 'internal_point_latitude': 37.720159165800204, 'internal_point_longitude': -122.39265922332002, 'internal_point_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00w\\xa8&T!\\x99^\\xc0e\\x83\\xf0,.\\xdcB@')", 'neighborhood_geom': 'bytearray(b\'\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00q\\x00\\x00\\x00G\\xed\\x11\\x0cU\\x99^\\xc0x\\x03\\x9e\\xb1x\\xdcB@\\x01\\x82\\xdcRb\\x99^\\xc0g.\\n\\x04\\x7f\\xdcB@\\x19\\x9f\\x0ces\\x99^\\xc0\\x1fE\\xef$\\x87\\xdcB@C\\x96\\x17\\x89~\\x99^\\xc0\\xc87\\xe6r\\x8c\\xdcB@\\x06\\x8a\\x95\\xba\\x8c\\x99^\\xc0\\x08\\xeb\\xe34\\x93\\xdcB@\\x8a\\xe6\\xca\\xcb\\x9a\\x99^\\xc0\\x97?r\\xe7\\x99\\xdcB@jF\\x11u\\xa6\\x99^\\xc0\\x9f\\x1b\\xb6t\\x9f\\xdcB@\\xea\\xb5`\\xdc\\x9f\\x99^\\xc0\\x01\\xe4X?\\x7f\\xdcB@{7\\x19_\\x98\\x99^\\xc0\\xdf8\\x8d\\xadZ\\xdcB@\\xe0D\\xe3\\xd2\\x96\\x99^\\xc0\\x88`\\xf7\\xb8W\\xdcB@+\\xfe"\\r\\x93\\x99^\\xc0\\x88\\rS\\x1eG\\xdcB@\\x1c\\x1a\\xcb^\\x90\\x99^\\xc0\\x7f}\\xc3\\x9d;\\xdcB@5\\xcd~G\\x8e\\x99^\\xc0W \\x96\\x142\\xdcB@\\xe1\\xda\\xdf%\\x8d\\x99^\\xc0\\xef\\xcf\\xd0\\xa2+\\xdcB@\\xc4%#\\xa1\\x8c\\x99^\\xc0\\xe99\\xb3\\xae(\\xdcB@\\x02}\\xcf\\x99\\x8b\\x99^\\xc0\\xc1\\x18P0"\\xdcB@KW\\xb3\\xd8\\x8a\\x99^\\xc0\\x1frXY\\x1c\\xdcB@\\xac\\xbfw$\\x89\\x99^\\xc0\\t\\x00\\xa5F\\r\\xdcB@\\xb1q\\x81\\x87\\x86\\x99^\\xc0H\\x03c\\xdd\\xf5\\xdbB@\\x91\\xb3\\x8b\\xbd\\x85\\x99^\\xc0\\x10\\xec\\x05\\xc7\\xee\\xdbB@ z\\xc5\\xc5\\x84\\x99^\\xc0\\xb7\\x1e>\\x83\\xe2\\xdbB@v\\xab_\\x90\\x84\\x99^\\xc0\\xb7\\xe8\\x8c\\xde\\xdf\\xdbB@\\xfd\\xf7\\xdeG\\x84\\x99^\\xc0 ah\\xad\\xdc\\xdbB@\\xd1\\xec\\x94\\x83\\x83\\x99^\\xc0\\x10|\\x05\\t\\xd4\\xdbB@P\\xd7\\xd6\\x8c\\x82\\x99^\\xc0\\x87X\\xe5+\\xc9\\xdbB@\\xe7\\x95j\\x80\\x81\\x99^\\xc0\\xd7W\\xa0H\\xbd\\xdbB@O\\x9f\\x1d\\x03\\x81\\x99^\\xc0\\x97V\\xd8\\xb3\\xb7\\xdbB@\\x06\\xed\\x06K\\x81\\x99^\\xc0\\xe81\\x10\\xbf\\xb3\\xdbB@\\xe0\\xc7\\x04\\xa1\\x81\\x99^\\xc0\\x87\\x18\\xf3\\x03\\xaf\\xdbB@\\n\\x93\\xcb\\xda\\x81\\x99^\\xc0\\xc6\\xda-\\xd6\\xab\\xdbB@\\xf6\\xb0\\xa8\\xff\\x81\\x99^\\xc0\\x1f\\x81\\xd2\\xcc\\xaa\\xdbB@\\xae\\xbe_\\x04\\x81\\x99^\\xc0\\x8f\\x8b\\xec\\xb5\\xa6\\xdbB@\\x99\\xb3X\\xcc\\x80\\x99^\\xc0\\x86\\xb3C\\xe5\\xa7\\xdbB@\\x90\\xf47n\\x7f\\x99^\\xc0\\xe7\\x91\\xb3\\xdb\\xa7\\xdbB@\\x81\\x17\\xac\\x1a\\x7f\\x99^\\xc0\\xa8\\x99v\\x1d\\xa9\\xdbB@j\\xdd\\xd9\\xc6{\\x99^\\xc0\\x0f7\\x90c\\xa8\\xdbB@\\x91r\\xb1\\xaey\\x99^\\xc07\\xf7\\x8c\\xee\\xa7\\xdbB@8$\\x9d\\xfdx\\x99^\\xc0omX\\xf5\\xa7\\xdbB@\\xef\\xe5\\xbdKx\\x99^\\xc0\\x9f\\xac\\x88o\\xa8\\xdbB@\\x94\\x81\\x9e\\xc1w\\x99^\\xc0\\x87\\x12\\xe5Y\\xa9\\xdbB@z\\xe8\\x05|w\\x99^\\xc0X!g\\xcc\\xaa\\xdbB@\\\\\\x10-\\xb9w\\x99^\\xc0\\\'\\x17\\xbe\\x86\\xac\\xdbB@"\\\'\\xb7\\xd9w\\x99^\\xc0wA\\xb9\\xe4\\xad\\xdbB@`\\xbd\\x01\\xc1w\\x99^\\xc0\\xb0\\x82\\xbf\\x9c\\xaf\\xdbB@eO\\x98Iw\\x99^\\xc0\\xa8w\\x1b\\xb5\\xb1\\xdbB@\\xd5<\\xb5]u\\x99^\\xc0O\\x9f\\xc5n\\xb9\\xdbB@\\x84*\\xce\\xe1r\\x99^\\xc0\\x18Nd\\x16\\xbc\\xdbB@+\\n\\xd8\\xc7p\\x99^\\xc0\\xa0\\xd0\\xb1\\x11\\xb5\\xdbB@\\xde!N\\x85j\\x99^\\xc0w\\xfdd\\xf4\\xb2\\xdbB@\\x18\\n"/d\\x99^\\xc0\\x0fc\\xfa\\x14\\xb6\\xdbB@\\xad\\xb5\\x02fe\\x99^\\xc0\\xe8#\\x92\\x83\\xba\\xdbB@\\x8c\\xe2\\xd4\\xe8d\\x99^\\xc0\\xef\\xd05\\x08\\xbd\\xdbB@s;\\xed\\xe9]\\x99^\\xc0h\\x1d\\xc9\\x10\\xc0\\xdbB@\\x89\\xcd\\x9f\\x80W\\x99^\\xc0\\x07ti\\xad\\xbc\\xdbB@\\xe0\\xa2kpL\\x99^\\xc0h\\x18\\x03-\\xd5\\xdbB@\\x0c\\xc9\\xb0\\xbaP\\x99^\\xc0\\x991J\\xac\\xd9\\xdbB@\\x06/\\xcd\\x1cN\\x99^\\xc0\\xb7\\xfaN\\x8c\\xdf\\xdbB@\\x92\\xb5=\\x0fH\\x99^\\xc0\\x8f\\xd6\\xccR\\xd9\\xdbB@7\\xad\\x93\\x14G\\x99^\\xc0\\x87\\x00\\x9dr\\xda\\xdbB@\\xb9\\xdd\\xedhF\\x99^\\xc0O/\\t\\xce\\xdb\\xdbB@\\xca\\xfa\\xc3\\xe5D\\x99^\\xc0\\xdf\\xe8P\\x11\\xdd\\xdbB@\\xc9\\xa7N:C\\x99^\\xc0\\xf8\\x10\\xa6\\xf8\\xdd\\xdbB@\\x8d,\\x8d\\x16B\\x99^\\xc0\\xe0\\xceZ~\\xde\\xdbB@\\xe6A\\xd8\\x8eA\\x99^\\xc0H\\x13\\xf9\\xdf\\xde\\xdbB@\\xf4\\xdc;0A\\x99^\\xc0wR\\xac\\xdb\\xdf\\xdbB@\\x18\\x9f\\xb1\\xab@\\x99^\\xc0\\xe7a\\xd65\\xe1\\xdbB@\\x86\\x08\\x10O@\\x99^\\xc0\\xc7\\x06\\xe5\\xcc\\xe2\\xdbB@[\\x99\\xd7A@\\x99^\\xc0\\xf7\\xf7\\xa1\\xbe\\xe4\\xdbB@<\\x83\\r\\x82@\\x99^\\xc0\\\'A\\xb8o\\xe6\\xdbB@\\xae\\x81\\xd6$A\\x99^\\xc0/\\xa5\\xcb[\\xe8\\xdbB@#\\xc1\\xf4SB\\x99^\\xc0\\xe0\\xca\\xa9o\\xe9\\xdbB@\\xd9#\\xdf\\xc8C\\x99^\\xc0\\x08Y\\x84\\x0c\\xeb\\xdbB@N\\xe3\\x149>\\x99^\\xc0\\x982yh\\xf7\\xdbB@\\xbe`B(6\\x99^\\xc0w\\xb5\\xb8@\\xee\\xdbB@\\xba\\xaa\\xe2\\xdc2\\x99^\\xc0\\x9e-\\xd4\\x92\\xf5\\xdbB@\\x91\\n\\x91\\xd6/\\x99^\\xc0\\x970\\xd5d\\xf7\\xdbB@z\\xc5[\\x93 \\x99^\\xc0\\xbfg\\xb5\\x11\\xe6\\xdbB@8\\x9bR\\xe7\\x1c\\x99^\\xc0\\xd7\\x14\\xe6\\xaf\\xe3\\xdbB@G\\xc5\\xf8\\xf6\\x0f\\x99^\\xc0?Q\\xab\\xe5\\xd7\\xdbB@;\\x05\\\\\\x97\\x07\\x99^\\xc0\\\'\\xaax\\x0f\\xcf\\xdbB@\\x00q{\\x9b\\x01\\x99^\\xc0n\\xe1\\xd3\\x18\\xc4\\xdbB@"2\\xc6\\xc9\\xf5\\x98^\\xc0\\xe8\\xd3?\\x02\\xab\\xdbB@\\xfe\\x8f\\x00\\x8c\\xec\\x98^\\xc0\\xe7&`d\\x97\\xdbB@2\\x81Dn\\xe1\\x98^\\xc0\\x18_\\xca\\x19z\\xdbB@D\\x03\\x83\\xc7\\xde\\x98^\\xc0\\xd8\\x18l>|\\xdbB@\\x83\\xe4^r\\xd9\\x98^\\xc0G\\x95A\\x85\\x88\\xdbB@\\xc0\\x9d\\x81z\\xdb\\x98^\\xc0\\x07\\x02\\x11\\r\\x8b\\xdbB@g\\x88\\x9b\\x9a\\xde\\x98^\\xc0\\xf8&&\\xdf\\x94\\xdbB@\\xe9V\\xe4w\\xdd\\x98^\\xc0\\xd0\\xfcl|\\x97\\xdbB@p&]\\xc8\\xdd\\x98^\\xc0\\x8f\\xad\\x8b;\\x9b\\xdbB@\\x16\\xeb!\\x9b\\xdd\\x98^\\xc0f\\xba\\xc5\\xd3\\x9d\\xdbB@c\\xaf\\x1f\\x11\\xdc\\x98^\\xc07\\xbf\\x88\\x8d\\xa4\\xdbB@o\\xeb\\xa9\\x93\\xdb\\x98^\\xc0\\xef\\xd5\\xc9\\xb1\\xa6\\xdbB@\\xf9!\\xacB\\xda\\x98^\\xc0`\\xdc\\x9b\\xb9\\xa9\\xdbB@^\\xe5\\x1b\\xfa\\xdc\\x98^\\xc0\\x17\\x99\\xdb\\x85\\xb2\\xdbB@\\xce\\xa1\\x1a\\\\\\xde\\x98^\\xc0\\xdf\\x18\\xbb\\x17\\xb4\\xdbB@\\xca+\\xf4z\\xdd\\x98^\\xc0\\\'\\x8d\\xf3\\xff\\xb6\\xdbB@\\xf9\\xaeX!\\xd7\\x98^\\xc0\\xe0\\xcd\\xef\\xa8\\xaf\\xdbB@\\xe2?\\xe0\\x8b\\xd3\\x98^\\xc0\\x8e\\x05\\xbc\\xa1\\xb0\\xdbB@\\n\\xfc\\x19%\\xc2\\x98^\\xc0\\xc0\\xf0\\xbeU\\xd7\\xdbB@\\xfc\\xad\\xe4\\x90\\xb8\\x98^\\xc0W_\\r\\x85\\xcc\\xdbB@\\\\4\\xcdi\\xa6\\x98^\\xc08\\xa5\\xc0\\xc5\\xf4\\xdbB@\\xb9D\\xb4\\x04\\x96\\x98^\\xc0\\x8foNC\\x19\\xdcB@U\\xa0\\xe6\\xdc\\x94\\x98^\\xc0\\x8e:q\\x0e\\x1e\\xdcB@{C>\\x01\\x97\\x98^\\xc0_=\\xae\\xad"\\xdcB@?\\xe6,\\x14\\xb2\\x98^\\xc0_`GjA\\xdcB@\\xba\\x80\\xa2\\xd5\\xd0\\x98^\\xc0\\xf8vx`d\\xdcB@\\x89\\x9e\\xcc\\x86\\xef\\x98^\\xc0\\x18{ae\\x86\\xdcB@\\xcb\\xd1\\x194\\x0e\\x99^\\xc0\\x90\\xe5\\xa47\\xa9\\xdcB@\\xbe\\x859\\xca,\\x99^\\xc0o\\xf4\\x18\\xef\\xcb\\xdcB@\\x1aF\\x0fI;\\x99^\\xc0\\xf7?\\xd5b\\xdc\\xdcB@-\\xf0\\x1f\\xe2Q\\x99^\\xc0\\xb7=\\x86\\xa3x\\xdcB@G\\xed\\x11\\x0cU\\x99^\\xc0x\\x03\\x9e\\xb1x\\xdcB@\')'}, {'neighborhood': 'India Basin', 'internal_point_latitude': 37.738098970000216, 'internal_point_longitude': -122.37837240119072, 'internal_point_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\xae4\\xe0@7\\x98^\\xc0]\\xae\\xec\\x06z\\xdeB@')", 'neighborhood_geom': 'bytearray(b\'\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x80\\x00\\x00\\x00&\\xd9\\x92\\x04\\xaa\\x97^\\xc0W\\xe8n7\\xbe\\xddB@\\x8a\\xac\\x9b\\t\\xa8\\x97^\\xc0_\\xda\\xb7\\x9a\\xc2\\xddB@R\\x9c}Z\\xaf\\x97^\\xc0\\x97\\xdaD\\x00\\xcc\\xddB@\\x9fTWx\\xb6\\x97^\\xc0OR\\x0b%\\xd3\\xddB@\\x1eM\\xbc\\x96\\xbf\\x97^\\xc0\\xc0QL\\xc7\\xe4\\xddB@\\\'\\xe4b#\\xc8\\x97^\\xc0\\xef\\xa2\\x98\\xf1\\xf3\\xddB@\\xe2\\xb8\\x12h\\xcd\\x97^\\xc0\\xbf\\xe5\\xb6\\x8c\\xfa\\xddB@\\xdf\\xb8\\xc2\\xd7\\xd1\\x97^\\xc0amJ\\xee\\xfa\\xddB@r\\xdb\\x1aK\\xd7\\x97^\\xc0o\\xaa(\\xaa\\xf3\\xddB@\\xf9Z\\x12\\xbe\\xdc\\x97^\\xc0\\xa7\\xb8\\xad\\x11\\xe7\\xddB@\\x84\\x14IB\\xe2\\x97^\\xc0\\xe7\\n\\x0b5\\xdd\\xddB@\\xde\\xce\\xe4L\\xe7\\x97^\\xc0p\\x89fO\\xd6\\xddB@\\xe2\\xe1\\\'\\xb5\\xe7\\x97^\\xc0\\xdf\\x87MH\\xd1\\xddB@\\xff\\x0c\\x19i\\xeb\\x97^\\xc0/;\\xbf\\xf3\\xce\\xddB@=\\xb1\\x98\\xb5\\xed\\x97^\\xc0G\\xa7\\x17\\x84\\xcb\\xddB@G\\xe9\\x89|\\xf1\\x97^\\xc0\\xe8]u\\xb7\\xc7\\xddB@|~\\x16\\xb3\\xf4\\x97^\\xc0\\xb0\\x9d` \\xc4\\xddB@\\xc0\\x8c\\xf5\\xaf\\xfa\\x97^\\xc0Om\\xbe\\x1e\\xc7\\xddB@\\xf3P\\xca\\xed\\xfc\\x97^\\xc0\\x00\\x08\\xd2\\xde\\xc3\\xddB@x\\xad\\tq\\xfe\\x97^\\xc0\\xef\\x99\\xcd\\xff\\xc5\\xddB@\\x1fI!\\xda\\xf8\\x97^\\xc0\\x9f\\xd4\\x88\\xe7\\xcc\\xddB@)\\xf5\\xd2\\x98\\xf9\\x97^\\xc0`O\\xfc\\x04\\xcf\\xddB@\\x07\\xc7\\x02E\\xfd\\x97^\\xc0\\x1f\\x8d\\xc6\\xeb\\xcb\\xddB@\\x82\\xa0\\x11<\\x03\\x98^\\xc0?C\\xb4\\x9a\\xd1\\xddB@\\xce\\x9b[e\\t\\x98^\\xc0~\\x99\\x0f\\xa5\\xc9\\xddB@\\xd3\\xe1\\xcb\\x1e\\n\\x98^\\xc0@ue\\xea\\xca\\xddB@\\xe1Qz\\x04\\t\\x98^\\xc0\\xb00\\x03V\\xcd\\xddB@\\xd3;\\xfa\\xf7\\n\\x98^\\xc0g\\xf4,@\\xcf\\xddB@\\x13\\xd8vO\\x08\\x98^\\xc0\\xef+tj\\xd6\\xddB@:\\x7ftY\\x08\\x98^\\xc0\\xf0\\xb5:\\x82\\xd9\\xddB@9\\x078E\\x06\\x98^\\xc0?8\\x1e\\\'\\xdd\\xddB@"\\xe7\\xa0\\xeb\\x05\\x98^\\xc0\\xff\\x8f\\xba\\xda\\xe0\\xddB@\\xafD\\x15\\x9b\\x02\\x98^\\xc0oM\\xd9\\xa7\\xeb\\xddB@&\\xc6\\xe9\\xb9\\xff\\x97^\\xc0\\x0f\\x18\\xcb1\\xef\\xddB@\\xd5/\\xeb:\\xfe\\x97^\\xc0\\x1f]D\\xff\\xf7\\xddB@{\\x1fw?\\xfe\\x97^\\xc0\\x98\\xbbh\\xc5\\x00\\xdeB@\\xf8\\r5e\\x02\\x98^\\xc0\\x9f\\x00x\\x1b\\x06\\xdeB@EB\\xb7\\xd1\\xff\\x97^\\xc0(I\\xa2\\xc7\\n\\xdeB@$+\\x0e\\xe6\\xfd\\x97^\\xc0\\xa0h\\x0f\\x02\\x12\\xdeB@p\\xea\\xd1!\\xfe\\x97^\\xc0.K\\x80v\\x14\\xdeB@/\\x14oK\\x01\\x98^\\xc0\\xf7\\xef\\xe2\\xe6\\x1c\\xdeB@.\\xfb]\\xe7\\x05\\x98^\\xc0\\x0f\\xbb\\xb2""\\xdeB@\\xdeZ\\xc1*\\x0f\\x98^\\xc0(@\\xb7~\\x17\\xdeB@\\xe3\\xfdSe\\x10\\x98^\\xc0`]\\xe8\\x93\\x1a\\xdeB@M\\xb2i\\x93\\r\\x98^\\xc0\\x7f\\x81\\x01\\xa0$\\xdeB@\\x89[\\xe5l\\x0e\\x98^\\xc0\\xf8\\xa6t\\x13)\\xdeB@\\xca\\x7f\\xc8\\x88\\x0f\\x98^\\xc0\\xdf\\x97&\\x1e0\\xdeB@\\xbe4C\\x12\\x0c\\x98^\\xc0\\xe0\\xf7\\xb8\\xa1/\\xdeB@\\xaf\\x91q\\xe0\\x03\\x98^\\xc0\\xf0\\xcb\\xee\\xa3<\\xdeB@\\x11^V\\xaf\\x02\\x98^\\xc0\\xff\\xdb\\xe0<C\\xdeB@\\xe2\\xf5\\x03+\\x02\\x98^\\xc0\\xa0\\x98fnI\\xdeB@!C\\xb8v\\x00\\x98^\\xc0(\\x83\\x9c\\x97M\\xdeB@ G\\xc2\\xd0\\x00\\x98^\\xc0_\\x80\\xe3\\xc3P\\xdeB@A\\x9c\\x04\\xb8\\xfe\\x97^\\xc0\\x7f?\\xe4\\x83W\\xdeB@\\x99\\x14\\x85\\x14\\xfe\\x97^\\xc0G\\xed\\xa4I_\\xdeB@)\\xc4\\xc1\\x10\\xff\\x97^\\xc0h\\x08(\\xc3g\\xdeB@\\xe0\\xf5\\x16\\xc5\\x01\\x98^\\xc0\\xc8\\xcb\\xf5~o\\xdeB@\\xee\\x9e\\x9c1\\x04\\x98^\\xc0\\xb0M\\x84\\xf6r\\xdeB@*\\x1a\\x83\\xf8\\x07\\x98^\\xc0X\\x83\\x8d\\xdeu\\xdeB@U\\xee\\x06\\xb0\\x0c\\x98^\\xc0\\x10ik\\xe9v\\xdeB@\\xa8gG+\\x10\\x98^\\xc0p\\x9c\\x13\\x9cv\\xdeB@N\\xce\\xf3\\xb4\\x17\\x98^\\xc0GA$\\xa1\\x7f\\xdeB@\\x03S@L\\x15\\x98^\\xc0\\xf7\\xc1<\\x15\\x84\\xdeB@\\x8e\\x01\\x8b\\xef\\x10\\x98^\\xc0\\xa1\\xc3\\x1as\\x86\\xdeB@sp\\xa8Y\\x0c\\x98^\\xc0\\xb0\\x0b\\xca\\x97\\x84\\xdeB@~\\xaaOt\\x08\\x98^\\xc00\\xe8\\x85\\xf4\\x81\\xdeB@^\\n\\xb7+\\xfd\\x97^\\xc0\\x8f(\\xba\\x89u\\xdeB@\\xc5)\\xcc>\\xf9\\x97^\\xc0\\xaf\\xc1%\\xe1q\\xdeB@\\x13\\xddb\\xfa\\xf5\\x97^\\xc01[\\xf4\\xb3p\\xdeB@j\\xbf\\x9c\\t\\xe8\\x97^\\xc0\\xb7\\x02\\xf3\\xc5[\\xdeB@\\x85\\x1eSe\\xe2\\x97^\\xc0?otLX\\xdeB@\\xf6\\xe0Qj\\xdc\\x97^\\xc0\\x1e\\xfe\\x12rW\\xdeB@8\\xff8\\xbf\\xd3\\x97^\\xc0\\xb0""\\xf0X\\xdeB@B\\xfb\\xf4\\xdf\\xd0\\x97^\\xc0\\x7f\\xe6\\xcc\\x13[\\xdeB@9\\x15\\x11\\xa7\\xce\\x97^\\xc0\\x17\\xba\\xcaaW\\xdeB@d\\xc7!\\xa3\\xc2\\x97^\\xc0\\x88\\xfdDVX\\xdeB@\\xbe"\\x84\\xaf\\xbe\\x97^\\xc0\\x7f\\xd3\\xbb\\xe5[\\xdeB@\\xf4x f\\xba\\x97^\\xc0\\x872%Cb\\xdeB@\\xd6\\x0c\\xcd\\x8e\\xb7\\x97^\\xc0f@u\\xfaa\\xdeB@\\xcd$\\xff3\\xad\\x97^\\xc0\\x01i\\x95\\x8ch\\xdeB@p\\x8e\\x1f/\\xa6\\x97^\\xc0\\x1fFR\\x89m\\xdeB@&8c\\xfb\\x9d\\x97^\\xc0\\xd7%\\x1d1o\\xdeB@\\xb1aN\\xaf\\x98\\x97^\\xc07ESRt\\xdeB@\\x92\\x9f\\xa4\\x8b\\x90\\x97^\\xc0`\\xa6pNv\\xdeB@\\xf3\\xa6y_\\x86\\x97^\\xc0\\x18T\\xed\\xd0y\\xdeB@<\\xbeoo\\x83\\x97^\\xc0\\xd0\\xd2\\x08\\xaf}\\xdeB@$\\x85\\\\\\x16\\x84\\x97^\\xc0\\xd7\\\'\\xac\\x06\\x81\\xdeB@N1\\xbbE\\x85\\x97^\\xc0\\x87\\xb7\\\'\\xe5\\x81\\xdeB@f\\xe5\\xf3W\\x96\\x97^\\xc0\\xcf\\xf7\\x14\\xec~\\xdeB@\\xfd\\xcc\\xfex\\xa3\\x97^\\xc0\\xe8\\x8e"\\xcb\\x7f\\xdeB@N\\x9f9X\\xb0\\x97^\\xc0o\\xe3%\\x8b}\\xdeB@\\x10\\xda\\xf2\\xf7\\xb6\\x97^\\xc0a\\x03\\xe6\\x84}\\xdeB@\\x99ly\\xce\\xbe\\x97^\\xc0\\xf7;Mf|\\xdeB@\\xd1\\xb5\\xd4y\\xc8\\x97^\\xc0\\xe7\\n$\\xd2}\\xdeB@\\x86mu\\xe0\\xcc\\x97^\\xc0\\xbf\\xda\\xf3\\x97~\\xdeB@\\x02\\x96Fs\\xd4\\x97^\\xc0\\x81\\x95\\x8c\\xce\\x7f\\xdeB@\\x17\\\'\\xd8\\xc1\\xd9\\x97^\\xc0\\xb7\\x1bPK\\x80\\xdeB@\\x8f%\\xdaX\\xe0\\x97^\\xc0\\xc7\\xb6\\x0b\\xee\\x83\\xdeB@w~\\xa3\\x13\\xe5\\x97^\\xc0p\\x94\\x9eQ\\x89\\xdeB@R\\x07\\\\\\xc4\\xe8\\x97^\\xc00\\x98\\xe7w\\x90\\xdeB@v\\x84\\xe3\\xf7\\xeb\\x97^\\xc0\\x97\\x8b\\xb1\\xe6\\x9c\\xdeB@\\x1b\\xd3\\xd2\\xc3\\xed\\x97^\\xc0\\xc0(H\\xa6\\xa2\\xdeB@\\xfa\\x8c\\x07\\x98\\xef\\x97^\\xc0\\x17\\x06\\xa9\\xa4\\xa6\\xdeB@2\\xc4\\xd0\\xce\\xef\\x97^\\xc0\\xf6\\x89\\xa3\\xe2\\xa7\\xdeB@k\\xe3\\xe3\\x01\\xef\\x97^\\xc0X\\xe1\\xe3A\\xaa\\xdeB@\\xf6\\x83\\xbf\\x94\\xfe\\x97^\\xc0\\xbf\\xd0\\xe4N\\xa8\\xdeB@}\\x8a\\x95\\xc4\\xfe\\x97^\\xc0(\\xa6\\xea\\x0f\\xae\\xdeB@\\x06\\x1eH\\x0c\\x12\\x98^\\xc0/\\t\\x12\\xa6\\xab\\xdeB@H\\xb1o\\xc9\\x1f\\x98^\\xc0`A4<\\xbb\\xdeB@\\x13\\xedID\\x1e\\x98^\\xc0w\\x83A\\x9c\\xbe\\xdeB@\\xaeYH\\x02\\x85\\x98^\\xc0o\\x14\\xb4\\x917\\xdfB@}\\n_v\\xc7\\x98^\\xc0A\\x12\\xa5\\x13\\x82\\xdfB@\\xa1U\\xb5\\xb6\\xc6\\x98^\\xc0_\\\\\\xd8w^\\xdfB@\\x94\\x9by\\xb6\\xca\\x98^\\xc0`Ah\\xe4C\\xdfB@X\\xf9\\xc4\\xeb\\xce\\x98^\\xc0_\\x10Q\\xec+\\xdfB@F\\xb3\\x0b\\xc9\\xd3\\x98^\\xc0\\xb7b\\x9c\\xe5\\x10\\xdfB@\\xa2\\x00CO\\xbd\\x98^\\xc0\\xa0\\x07\\xb89\\xf8\\xdeB@\\xee8\\xfc\\x03\\x9f\\x98^\\xc07t\\xd4\\xba\\xd5\\xdeB@}\\xb2\\xdf\\\\a\\x98^\\xc0\\xb82\\x0b\\xce\\x8f\\xdeB@~\\xf0\\x1cUC\\x98^\\xc0_\\xab\\xceNl\\xdeB@\\x8aP\\xc8\\x08G\\x98^\\xc0\\x80\\x94c\\x15c\\xdeB@\\xdf\\x81\\x951H\\x98^\\xc0\\xd7\\x8d\\x9bzZ\\xdeB@X\\xf4\\x82@H\\x98^\\xc0\\xe8F\\x93#N\\xdeB@Pc\\xd1SH\\x98^\\xc0\\xe1\\x95\\x01->\\xdeB@\\xe1K\\nTH\\x98^\\xc0\\xb7\\xb1Z\\x7f\\x1c\\xdeB@\\xe7$\\xe3\\x97H\\x98^\\xc0X\\xa8\\xeab\\xf6\\xddB@n\\xb5\\xfc\\xf0\\xce\\x97^\\xc0\\x7f\\x84\\xd1\\x81l\\xddB@&\\xd9\\x92\\x04\\xaa\\x97^\\xc0W\\xe8n7\\xbe\\xddB@\')'}, {'neighborhood': 'Outer Sunset', 'internal_point_latitude': 37.75377800616469, 'internal_point_longitude': -122.49546873324938, 'internal_point_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\xc9_}\\xc2\\xb5\\x9f^\\xc0\\xf1u6\\xcc{\\xe0B@')", 'neighborhood_geom': 'bytearray(b\'\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00!\\x00\\x00\\x00\\x0c)\\x81X\\xcc\\xa0^\\xc0\\xa7\\x01m,\\x9a\\xe1B@\\xd7B\\x99>\\xc2\\xa0^\\xc0(\\x06\\x94/c\\xe1B@D\\x1d\\xa0\\xd8\\xc3\\xa0^\\xc0\\xa8\\x83\\xc2\\xfbE\\xe1B@G#\\x8b\\x06\\xb9\\xa0^\\xc0w\\xc1\\xd0%\\x87\\xe0B@ P1\\xbf\\xb4\\xa0^\\xc0\\xbfb\\x90\\x05V\\xe0B@y\\xbci#\\xac\\xa0^\\xc0\\x17\\x00G\\xfb\\x12\\xe0B@\\xe0_\\xa7e\\x9f\\xa0^\\xc0\\xce\\xd4\\x0b\\xdb\\xe2\\xdfB@.\\xbf\\xde \\xa1\\xa0^\\xc0H\\xdfh*\\xb8\\xdfB@\\xda\\xd1\\x84\\xf5\\x98\\xa0^\\xc0\\xbfY\\xb6\\xe8z\\xdfB@e\\xc2o\\xa3\\x9e\\xa0^\\xc0?\\xc0\\xe4\\xcaI\\xdfB@\\xf8\\xd2\\x0f\\xdb\\x97\\xa0^\\xc0\\xa7I\\x83W"\\xdfB@\\xd5(\\x87V\\x94\\xa0^\\xc0\\x9fM2\\xd2\\x08\\xdfB@\\xc3[\\xb0\\x7f\\x97\\xa0^\\xc0\\xa0\\x08\\x93c\\xe4\\xdeB@@f\\xaf\\xf0\\x8e\\xa0^\\xc0\\xf8\\xdfn\\xa9\\xc0\\xdeB@\\xc5\\x9e\\xae\\xc8\\x91\\xa0^\\xc0\\xffQj\\xb5\\x9b\\xdeB@j];\\x95\\x8f\\xa0^\\xc0 \\xc9\\x91\\xadr\\xdeB@3J\\xfdss\\xa0^\\xc0\\xcfv\\x08-u\\xdeB@\\x0bf\\xe4pi\\xa0^\\xc0\\xf7\\x0c\\xebwu\\xdeB@\\xb9\\xbf\\x04\\xab\\xa0\\x9f^\\xc0o\\xec@\\r\\x87\\xdeB@)a\\xc0g\\xab\\x9f^\\xc0\\xc9\\n\\xafx\\xb8\\xdfB@\\x99;$\\xbcJ\\x9f^\\xc0\\xc8\\x9b)\\x05\\xc1\\xdfB@"\\x01\\x88Sw\\x9e^\\xc0\\x08fw\\xae\\xd3\\xdfB@\\xd8\\x88r\\x92{\\x9e^\\xc0oO \\xf1M\\xe0B@\\xc1\\x1aj\\x1e\\x84\\x9e^\\xc0\\xaf\\x9b\\x06=B\\xe1B@\\x02\\xe0\\xabX\\x87\\x9e^\\xc0^[v]\\x7f\\xe1B@^\\xa8\\x828\\x8c\\x9e^\\xc0hT\\x193\\xfa\\xe1B@\\xf3J\\xc2\\xb3\\xf4\\x9e^\\xc0Y5\\xc8\\xc4\\xf0\\xe1B@q\\xf5\\x10\\xde\\xb5\\x9f^\\xc06\\xfb\\xcd\\xa8\\xdf\\xe1B@\\xe2\\x85\\x03m\\xc7\\x9f^\\xc0\\xa7R\\xa2H\\xde\\xe1B@\\x16\\x97\\xc4\\x9b\\r\\xa0^\\xc0\\xb8\\x14v\\x0f\\xd8\\xe1B@\\xbc\\xb9\\xa2n\\xa9\\xa0^\\xc0\\x0f\\xed\\x7f\\xc7\\xca\\xe1B@\\xcfh\\t\\x97\\xcd\\xa0^\\xc0\\xf0Y2\\x8f\\xc8\\xe1B@\\x0c)\\x81X\\xcc\\xa0^\\xc0\\xa7\\x01m,\\x9a\\xe1B@\')'}, {'neighborhood': 'Rincon Hill', 'internal_point_latitude': 37.78732941616594, 'internal_point_longitude': -122.39114626214587, 'internal_point_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\xa0\\xf7T\\x8a\\x08\\x99^\\xc0E\\xce\\xd65\\xc7\\xe4B@')", 'neighborhood_geom': "bytearray(b'\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x1b\\x00\\x00\\x00p\\xff\\x9c\\xa5\\xeb\\x98^\\xc0\\xa7M8\\xd5I\\xe5B@\\xa7\\xd9X\\xf6\\xf5\\x98^\\xc0V:C\\xd19\\xe5B@wj\\x1d\\x9ec\\x99^\\xc0\\x7f\\xfd\\xfe\\xa4\\x8c\\xe4B@\\x06\\n\\xc7OJ\\x99^\\xc0\\xa7\\x11\\x9fMd\\xe4B@-\\xe2\\xde\\t1\\x99^\\xc0v\\x93&\\xe5;\\xe4B@\\xbd\\x9a\\x85\\xce\\xef\\x98^\\xc0\\x00\\xa1\\x0e\\xfb\\xa2\\xe4B@\\xa5\\xab#\\xc3\\xe1\\x98^\\xc0\\x0e\\xc9\\x8d\\x18\\xb9\\xe4B@|Q\\xfd\\xa1\\xde\\x98^\\xc0\\xa0\\x99I\\t\\xbe\\xe4B@\\xa5\\xee\\x08o\\xdb\\x98^\\xc0/P\\xc9\\xdb\\xbf\\xe4B@\\xba\\x86\\xa8\\xa1\\xd1\\x98^\\xc0x#2\\x9a\\xbf\\xe4B@\\xed\\xf3Z\\x94\\xcf\\x98^\\xc0\\x17Ma$\\xc2\\xe4B@\\xea\\x1a\\xbfF\\xcb\\x98^\\xc0\\xa7v\\x0eQ\\xc4\\xe4B@- k\\xdb\\xca\\x98^\\xc0o\\x81\\xf3\\x05\\xd4\\xe4B@\\xfd\\xef\\xc3\\xff\\xa5\\x98^\\xc0 \\xd7\\xfaM\\xe1\\xe4B@\\x96*\\xf6\\xcf\\xa7\\x98^\\xc0O\\xefv\\x18\\xee\\xe4B@^{Zi\\xc5\\x98^\\xc0 l\\x9e\\xae\\xe4\\xe4B@q\\xeau\\xb1\\xc7\\x98^\\xc0\\xaf\\xbc\\xa7\\x89\\xf6\\xe4B@F\\xd29\\x95\\xa5\\x98^\\xc0\\x90\\xef>s\\x08\\xe5B@X\\xa1\\x07%\\xa9\\x98^\\xc0\\xf03\\x0c\\xc4\\x17\\xe5B@\\xd9\\x13\\xcf\\xff\\xc9\\x98^\\xc0_.\\xedd\\x08\\xe5B@9\\x17\\x1f\\x8f\\xce\\x98^\\xc0\\xa0\\xe4i\\xc1\\x17\\xe5B@\\xb4\\xc6\\xc7$\\xac\\x98^\\xc0\\x07Y\\xd0\\x9a0\\xe5B@o\\xa4\\xfa\\xce\\xaf\\x98^\\xc0O*@\\x9f>\\xe5B@\\xd2\\xfdo\\x94\\xd8\\x98^\\xc0\\x17\\xa1\\x1e\\x96\\x1e\\xe5B@*e\\x91:\\xe2\\x98^\\xc0g\\x05\\xbc\\xc2>\\xe5B@\\x17\\xfc\\xf4:\\xea\\x98^\\xc0\\xc7n\\xad6L\\xe5B@p\\xff\\x9c\\xa5\\xeb\\x98^\\xc0\\xa7M8\\xd5I\\xe5B@')"}, {'neighborhood': 'St. Francis Wood', 'internal_point_latitude': 37.73627131995747, 'internal_point_longitude': -122.46606237584871, 'internal_point_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\xa4\\x8aI\\xf7\\xd3\\x9d^\\xc0\\x9c\\x19|#>\\xdeB@')", 'neighborhood_geom': 'bytearray(b"\\x01\\x03\\x00\\x00\\x00\\x01\\x00\\x00\\x00r\\x00\\x00\\x00\\xe5\\xda\\x046,\\x9e^\\xc0\\xe7\\x07\\x90\\t\\x07\\xdeB@\\xd9e\\xfb--\\x9e^\\xc0\\xe0\\x93\\\\r\\xda\\xddB@\\xa6\\x8an%*\\x9e^\\xc0/\\x0f\\x98\\xa8\\xda\\xddB@>\\x80\\x8f\\x9e\\x1b\\x9e^\\xc0\\xf0v8\\xb2\\xd9\\xddB@$\\x9d\\xc3@\\r\\x9e^\\xc0\\xcf\\xea\\x85\\xbe\\xd8\\xddB@\\x05\\x9aL\\xcb\\xfe\\x9d^\\xc0\\x08\\xc22\\xc9\\xd7\\xddB@\\xc8Z\\x0eJ\\xf1\\x9d^\\xc0\\xb05\\x01\\xe4\\xd6\\xddB@.u\\xa2M\\xe3\\x9d^\\xc0`F\\x99\\xf6\\xd5\\xddB@\\xe5F\\x0eZ\\xcd\\x9d^\\xc0`\\xf0C\\xf4\\xd7\\xddB@\\xc8\\x14&\\xcb\\xca\\x9d^\\xc0Pu\\x85g\\xd7\\xddB@\\x11i&;\\xbd\\x9d^\\xc0\\xc7\\x0c\\x94N\\xc3\\xddB@=\\xb6\\xeeD\\xbb\\x9d^\\xc0X\\xc7|\\xa3\\xca\\xddB@\\\'j\\x92\\x80\\xba\\x9d^\\xc00\\x80P\\x81\\xcd\\xddB@\\xd7mK\\xd5\\xb7\\x9d^\\xc0/<Z\\x02\\xd4\\xddB@\\xc1\\xde\\x13j\\xb4\\x9d^\\xc0\\xa8\\xd12_\\xd9\\xddB@\\xf5\\xc4i\\xd7\\xb0\\x9d^\\xc0\\\'\\x94\\x18\\x80\\xdd\\xddB@9:\\xac\\xd8\\xae\\x9d^\\xc0hvq\\xe3\\xe2\\xddB@U73g\\xae\\x9d^\\xc0\\x0e\\xb3\\x98\\x91\\xe7\\xddB@\\x04\\xeb\\xf4\\xf3\\xae\\x9d^\\xc07K\\x97\\xa5\\xed\\xddB@\\xa5\\x9f\\x06%\\xaf\\x9d^\\xc0\\xf6^#\\x86\\xf3\\xddB@q\\x7f\\x1a\\xc9\\xae\\x9d^\\xc0o\\x85$\\xde\\xfa\\xddB@r\\xac\\x08\\x80\\xaf\\x9d^\\xc0X\\x0b\\x02\\x84\\xff\\xddB@\\x92\\x96\\x8b\\n\\xb2\\x9d^\\xc0H\\x86Y+\\x04\\xdeB@\\x94@g\\x1e\\xb5\\x9d^\\xc0\\x17\\x9d\\xf0u\\x06\\xdeB@Q\\xc6\\x1c\\x8a\\xb6\\x9d^\\xc0\\xc0b\\xb9\\x84\\x07\\xdeB@~\\x88fa\\xb9\\x9d^\\xc0\\x87Z\\xdb\\x9a\\x08\\xdeB@!\\xf2\\\\\\x93\\xb9\\x9d^\\xc0\\x90\\x8c\\xff\\x1c\\x15\\xdeB@HP\\xd1+\\xba\\x9d^\\xc0?5Q\\xfd#\\xdeB@.\\xdcu\\xa6\\xb8\\x9d^\\xc07g=\\x1c\\\'\\xdeB@\\x99R\\x11\\xe6\\xb7\\x9d^\\xc0\\xd0\\xfb\\x01\\xa7(\\xdeB@\\xc1C&\\xb3\\xb6\\x9d^\\xc0\\xb7r)-*\\xdeB@\\x86\\xfd\\xb3\\x86\\xb5\\x9d^\\xc0\\xef`\\x18\\xab+\\xdeB@d\\xddan\\xb2\\x9d^\\xc0\\\'M\\x04\\x90+\\xdeB@\\x1ds\\x01o\\xae\\x9d^\\xc0\\xf7\\x81\\xcdn*\\xdeB@\\xd2\\x99\\xee\\xe7\\xa7\\x9d^\\xc0\\xa7\\xe2\\x96a,\\xdeB@\\x86}\\x1a\\x0e\\xa3\\x9d^\\xc0\\xd8\\xab\\xb9*0\\xdeB@;N\\xfd[\\xa0\\x9d^\\xc0p\\x11\\x88\\xac5\\xdeB@\\x7fe,\\xcd\\x9f\\x9d^\\xc0\\x88\\x12\\xd6.<\\xdeB@\\x9b\\xe5\\x1d\\x00\\xa1\\x9d^\\xc0\\xe8;$\\xc1C\\xdeB@\\x96\\x15\\xee\\xe8\\xa1\\x9d^\\xc0\\x17\\x12R\\x7fI\\xdeB@\\x8e\\x9c\\xc7\\xec\\xa2\\x9d^\\xc0\\x9f~9\\xe8O\\xdeB@q*u\\x03\\xa4\\x9d^\\xc0\\x87\\x0e\\x03\\xc8V\\xdeB@S\\xcf\\xe3\\x0c\\x92\\x9d^\\xc0\\xbf\\xd8[\\x9a@\\xdeB@\\xcbT\\xe7\\x02\\x8b\\x9d^\\xc0\\xd8\\x02\\xe9\\x9f6\\xdeB@1}\\xc4\\xe2\\x89\\x9d^\\xc0\\xcf#\\xb3\\xd88\\xdeB@\\xfe[KY\\x8a\\x9d^\\xc0\\xe8\\x8fj$>\\xdeB@\\xbe\\xea1\\xbf\\x8a\\x9d^\\xc0?\\xd3\\xfa\\xb1B\\xdeB@J.~4\\x8b\\x9d^\\xc0_\\xcd\\xad\\xefG\\xdeB@\\x84L[\\x84\\x8b\\x9d^\\xc0x\\x97!\\x81K\\xdeB@=/}\\x91\\x8b\\x9d^\\xc0X\\xe0\\\\\\x17L\\xdeB@\\x0e\\x8c\\xf4\\xe9\\x8b\\x9d^\\xc0\\\'=?\\x0bP\\xdeB@\\n\\x89kJ\\x8c\\x9d^\\xc0 \\x80\\xa4ZT\\xdeB@\\xa6\\x9aH\\xb2\\x8c\\x9d^\\xc0\\x00n\\xa7\\xfeX\\xdeB@\\xdb\\x9d\\x95\\x17\\x8d\\x9d^\\xc0HPP\\x85]\\xdeB@?\\x05\\x95\\x8b\\x8d\\x9d^\\xc0\\x1f\\xe7\\xcd\\xb3b\\xdeB@Pf=\\xc1\\x8d\\x9d^\\xc0\\x90{\\xed\\x18e\\xdeB@{\\xfeY+\\x8e\\x9d^\\xc0O\\xb4L\\xd5i\\xdeB@\\x03\\x9b\\xfct\\x8e\\x9d^\\xc0\\xa7\\xfc\\x99\\x1em\\xdeB@\\x97\\n \\xcb\\x8e\\x9d^\\xc0\\x87\\x81\\xcb\\xf6p\\xdeB@\\x15\\x9a\\x03\\x1b\\x8f\\x9d^\\xc0!\\xe8\\x8a\\x87t\\xdeB@O\\xf8\\xb4<\\x8f\\x9d^\\xc0\\\'}x\\x08v\\xdeB@\\x0b\\x92\\x8b\\x85\\x8f\\x9d^\\xc0\\xf0\\x0b\\xb0Hy\\xdeB@e\\xb0\\x91\\xa0\\x8f\\x9d^\\xc0g\\xbdg}z\\xdeB@}>\\x0f\\xf0\\x8f\\x9d^\\xc0W4\\x9b\\t~\\xdeB@B\\xca\\xe8\\x10\\x90\\x9d^\\xc07\\\\\\xf4\\x80\\x7f\\xdeB@B\\xf9bR\\x90\\x9d^\\xc07?\\x11m\\x82\\xdeB@\\xff\\xf6@\\x81\\x90\\x9d^\\xc0\\x0f\\xfb\\x80\\x84\\x84\\xdeB@\\x1c\\xa7\\xb6\\xa1\\x90\\x9d^\\xc0\\x1f\\x87a\\xf7\\x85\\xdeB@\\x9eV\\xaf\\xed\\x90\\x9d^\\xc0\\xe77S[\\x89\\xdeB@\\x95GL\\xf0\\x90\\x9d^\\xc0\\xe0+\\xfc~\\x89\\xdeB@\\xd7\\xe6\\xfa/\\x91\\x9d^\\xc0\\xdf\\x1cs\\xe0\\x8d\\xdeB@\\x96_\\xbd\\x1f\\x91\\x9d^\\xc0\\xf8O\\x86\\x03\\x91\\xdeB@\\x87\\xfe~\\xce\\x90\\x9d^\\xc0\\x87\\xa0\\x8c&\\x94\\xdeB@7)\\xc3S\\x90\\x9d^\\xc0\\xf0\\x1cT\\xf9\\x96\\xdeB@\\x1c\\xb8\\x102\\x90\\x9d^\\xc0\\xf8#k\\x98\\x97\\xdeB@\\xbd\\x9ft\\xc4\\x8f\\x9d^\\xc0/U\\xfc[\\x99\\xdeB@q\\xb6\\r\\xc4\\x8e\\x9d^\\xc0w1\\xb1\\x8c\\x9c\\xdeB@\\x9e\\xd6\\x1fT\\x8e\\x9d^\\xc0/0<\\xad\\x9d\\xdeB@\\x1d\\x99)\\xce\\x8d\\x9d^\\xc0\\xe7\\xaf\\x99\\xe1\\x9e\\xdeB@\\x8c-I\\xa0\\x8c\\x9d^\\xc0\\xff|&+\\xa1\\xdeB@.\\xbd\\x10\\xe7\\x8b\\x9d^\\xc0\\x0f\\xaf\\x86Y\\xa2\\xdeB@BS\\xeeR\\x8b\\x9d^\\xc0G\\xb5\\xa12\\xa3\\xdeB@/\\t\\x1d\\xf5\\x89\\x9d^\\xc0\\xc1\\x12J\\xf7\\xa4\\xdeB@n9\\xf3x\\x88\\x9d^\\xc0\\x00\\xb7\\xb0\\xa6\\xa6\\xdeB@>HO$\\x87\\x9d^\\xc0G(\\xe9\\xe0\\xa7\\xdeB@\\xc5(\\xdd0\\x86\\x9d^\\xc0\\x00\\xb9\\n\\x8a\\xa8\\xdeB@\\xc1\\xe1\\xea\\x98\\x84\\x9d^\\xc0\\xbf\\xba\\x0b\\xb0\\xa9\\xdeB@i\\xad6_\\x82\\x9d^\\xc0\\xe8\\x9c\\xfb\\xbf\\xab\\xdeB@\\xbdM\\x01\\xc1\\x80\\x9d^\\xc0\\xf0RT\\xe4\\xad\\xdeB@)\\x85\\xd2\\xda~\\x9d^\\xc0\\x88\\xdc\\x99\\x97\\xb0\\xdeB@\\xff\\xed\\xbf\\x1c}\\x9d^\\xc0\\xe7\\x8f\\xfe>\\xb3\\xdeB@\\xbf\\xe7\\xcaw{\\x9d^\\xc0\\x19\\xd5\\xd1\\xc7\\xb5\\xdeB@\\n\\x8ax\\xaey\\x9d^\\xc0\\xdfp\\xb0\\x88\\xb8\\xdeB@Y\\xf1\\xfc\\xebz\\x9d^\\xc0\\xbfBi\\xb9\\xbd\\xdeB@#R\\x99\\x16\\x80\\x9d^\\xc0h\\x9d m\\xc0\\xdeB@\\xdb,\\xcc\\x12\\x82\\x9d^\\xc0\\xd8\\xa4;\\xf2\\xc1\\xdeB@Q\\x91\\xe3\\xe4\\x84\\x9d^\\xc0x\\xfe\\xeei\\xc3\\xdeB@\\x86[\\xcc\\xcf\\x8d\\x9d^\\xc0\\xe6P\\xf9#\\xc1\\xdeB@\\xbfU\\xa9\\xfc\\x92\\x9d^\\xc0PT;\\xd2\\xbf\\xdeB@\\xb9\\x82\\x10\\x9d\\x99\\x9d^\\xc0\\x17\\xf5\\xc3!\\xbe\\xdeB@\\xe9\\xe2\\xc5\\x0e\\x9f\\x9d^\\xc0\\x06\\xffE\\xe4\\xbc\\xdeB@\\x12|D&\\xa2\\x9d^\\xc0(\\xabY<\\xbc\\xdeB@\\xf6\\xbd\\xa7\\x81\\xa5\\x9d^\\xc0\\xa1u\\xdd\\x93\\xbb\\xdeB@1\\xc1q\\xf8\\xa8\\x9d^\\xc0(\\x02\\x05\\xe6\\xba\\xdeB@\\x85\\xa6\\x13\\x06\\xae\\x9d^\\xc0\\xdf\\xfce\\xe8\\xb9\\xdeB@\\xcdB\\xc2\\xbd\\xb3\\x9d^\\xc0\\xb0\\xb1\\xd7j\\xb8\\xdeB@h\\x10\\xf4\\xea\\xb8\\x9d^\\xc0h\\xc8\\xad\\xf3\\xb6\\xdeB@V\\x8c\\xf8\\x83\\xbe\\x9d^\\xc0_@;\\xbc\\xb4\\xdeB@\\xebN\\xc4v\\xc5\\x9d^\\xc0\\x9f\\x1a\\x1fh\\xb0\\xdeB@\\xeb\\x90Cs\\xc6\\x9d^\\xc0\\x18\\xc8N\\r\\xae\\xdeB@X\\x90\\x8a\\x85\\xd5\\x9d^\\xc0\\xd7\\xf0\\x98G\\x9f\\xdeB@\\xa8\\xc3\\xdd\\xc8\\xf8\\x9d^\\xc0\\x00\\xf0`\\xafc\\xdeB@\\x03Y,1.\\x9e^\\xc0\\x9f\\x8cl\\xdf\\n\\xdeB@\\xe5\\xda\\x046,\\x9e^\\xc0\\xe7\\x07\\x90\\t\\x07\\xdeB@")'}]

--------------------------------------------------
Table full name: SAN_FRANCISCO_PLUS.SAN_FRANCISCO_SFFD_SERVICE_CALLS.SFFD_SERVICE_CALLS
Column name: location_geom Type: BINARY
Column name: latitude Type: FLOAT Description: Latitude of the address
Column name: als_unit Type: BOOLEAN Description: Does this unit includes ALS (Advance Life Support) resources? Is there a paramedic in this unit?
Column name: watch_date Type: DATE Description: Watch date when the call is received. Watch date starts at 0800 each morning and ends at 0800 the next day.
Column name: priority Type: TEXT Description: Call priority (Code 2: Non-Emergency or Code 3:Emergency).
Column name: on_scene_timestamp Type: NUMBER Description: Date and time the unit records arriving to the location of the incident
Column name: hospital_timestamp Type: NUMBER Description: If this unit is an ambulance, date and time the unit arrives to the hospital.
Column name: entry_timestamp Type: NUMBER Description: Date and time the 911 operator submits the entry of the initical call information into the CAD system
Column name: transport_timestamp Type: NUMBER Description: If this unit is an ambulance, date and time the unit begins the transport unit arrives to hospital
Column name: call_type Type: TEXT Description: Type of call the incident falls into. See the list below.
Column name: final_priority Type: NUMBER Description: Final call priority (Code 2: Non-Emergency or Code 3:Emergency).
Column name: call_number Type: NUMBER Description: A unique 9-digit number assigned by the 911 Dispatch Center (DEM) to this call. These number are used for both Police and Fire calls.
Column name: incident_number Type: NUMBER Description: A unique 8-digit number assigned by DEM to this Fire incident.
Column name: call_type_group Type: TEXT Description: Call types are divided into four main groups: Fire, Alarm, Potential Life Threatening and Non Life Threatening.
Column name: response_timestamp Type: NUMBER Description: Date and time this unit acknowledges the dispatch and records that the unit is en route to the location of the call.
Column name: call_final_disposition Type: TEXT Description: Disposition of the call (Code). For example TH2: Transport to Hospital - Code 2, FIR: Resolved by Fire Department
Column name: dispatch_timestamp Type: NUMBER Description: Date and time the 911 operator dispatches this unit to the call.
Column name: station_area Type: TEXT Description: Fire Station First Response Area associated with the address of the incident
Column name: fire_prevention_district Type: TEXT Description: Bureau of Fire Prevention District associated with this address
Column name: unit_type Type: TEXT Description: Unit type
Column name: address Type: TEXT Description: Address of midblock point associated with incident (obfuscated address to protect caller privacy)
Column name: original_priority Type: TEXT Description: Initial call priority (Code 2: Non-Emergency or Code 3:Emergency).
Column name: neighborhood_name Type: TEXT
Column name: longitude Type: FLOAT Description: Longitude of the address
Column name: supervisor_district Type: TEXT Description: Supervisor District associated with this address
Column name: available_timestamp Type: NUMBER Description: Date and time this unit is not longer assigned to this call and it is available for another dispatch.
Column name: received_timestamp Type: NUMBER Description: Date and time of call is received at the 911 Dispatch Center.
Column name: city Type: TEXT Description: City of incident
Column name: zipcode_of_incident Type: TEXT Description: Zipcode of incident
Column name: battalion Type: TEXT Description: Emergency Response District (There are 9 Fire Emergency Response Districts)
Column name: unit_sequence_in_call_dispatch Type: NUMBER Description: A number that indicates the order this unit was assigned to this call
Column name: call_date Type: DATE Description: Date the call is received at the 911 Dispatch Center. Used for reporting purposes.
Column name: unit_id Type: TEXT Description: Unit Identifier. For example E01 for Engine 1 or T01 for Truck 1.
Column name: number_of_alarms Type: NUMBER Description: Number of alarms associated with the incident. This is a number between 1 and 5.
Column name: box Type: TEXT Description: Fire box associated with the address of the incident. A box is the smallest area used to divide the City. Each box is associated with a unique unit dispatch order. The City is divided into more than 2,400 boxes.
Column name: row_id Type: TEXT Description: Unique identifier used for managing data updates. It is the concatenation of Call Number and Unit ID separated by a dash
Sample rows:
[{'call_number': 203401353, 'unit_id': 'BLS839', 'incident_number': 20138897, 'call_type': 'Medical Incident', 'call_date': '2020-12-05', 'watch_date': '2020-12-05', 'received_timestamp': 1607171700000000, 'entry_timestamp': 1607171700000000, 'dispatch_timestamp': 1607171700000000, 'response_timestamp': 1607171700000000, 'on_scene_timestamp': 1607130613000000.0, 'transport_timestamp': None, 'hospital_timestamp': None, 'call_final_disposition': 'Other', 'available_timestamp': 1607133256000000, 'address': None, 'city': None, 'zipcode_of_incident': None, 'battalion': 'B12', 'station_area': None, 'box': None, 'original_priority': '2', 'priority': '2', 'final_priority': 2, 'als_unit': False, 'call_type_group': None, 'number_of_alarms': 1, 'unit_type': 'CHIEF', 'unit_sequence_in_call_dispatch': 1, 'fire_prevention_district': None, 'supervisor_district': None, 'row_id': '203401353-BLS839', 'latitude': nan, 'longitude': nan, 'neighborhood_name': None, 'location_geom': None}, {'call_number': 210041909, 'unit_id': 'IMT', 'incident_number': 21001529, 'call_type': 'Medical Incident', 'call_date': '2021-01-04', 'watch_date': '2021-01-04', 'received_timestamp': 1609727371000000, 'entry_timestamp': 1609727371000000, 'dispatch_timestamp': 1609727371000000, 'response_timestamp': 1609727371000000, 'on_scene_timestamp': nan, 'transport_timestamp': None, 'hospital_timestamp': None, 'call_final_disposition': 'Other', 'available_timestamp': 1609730976000000, 'address': None, 'city': None, 'zipcode_of_incident': None, 'battalion': 'B12', 'station_area': None, 'box': None, 'original_priority': '2', 'priority': '2', 'final_priority': 2, 'als_unit': False, 'call_type_group': None, 'number_of_alarms': 1, 'unit_type': 'SUPPORT', 'unit_sequence_in_call_dispatch': 1, 'fire_prevention_district': None, 'supervisor_district': None, 'row_id': '210041909-IMT', 'latitude': nan, 'longitude': nan, 'neighborhood_name': None, 'location_geom': None}, {'call_number': 150232425, 'unit_id': 'BE1', 'incident_number': 15008984, 'call_type': 'Administrative', 'call_date': '2015-01-23', 'watch_date': '2015-01-23', 'received_timestamp': 1421986870000000, 'entry_timestamp': 1421986870000000, 'dispatch_timestamp': 1421986870000000, 'response_timestamp': 1421986870000000, 'on_scene_timestamp': 1421986870000000.0, 'transport_timestamp': None, 'hospital_timestamp': None, 'call_final_disposition': 'Other', 'available_timestamp': 1421996053000000, 'address': None, 'city': None, 'zipcode_of_incident': None, 'battalion': 'B10', 'station_area': None, 'box': None, 'original_priority': '2', 'priority': '2', 'final_priority': 2, 'als_unit': False, 'call_type_group': None, 'number_of_alarms': 1, 'unit_type': 'SUPPORT', 'unit_sequence_in_call_dispatch': 1, 'fire_prevention_district': None, 'supervisor_district': None, 'row_id': '150232425-BE1', 'latitude': nan, 'longitude': nan, 'neighborhood_name': None, 'location_geom': None}, {'call_number': 152541994, 'unit_id': '71', 'incident_number': 15097133, 'call_type': 'Mutual Aid / Assist Outside Agency', 'call_date': '2015-09-11', 'watch_date': '2015-09-11', 'received_timestamp': 1441936017000000, 'entry_timestamp': 1441936017000000, 'dispatch_timestamp': 1441936017000000, 'response_timestamp': 1441936017000000, 'on_scene_timestamp': 1441936017000000.0, 'transport_timestamp': None, 'hospital_timestamp': None, 'call_final_disposition': 'Fire', 'available_timestamp': 1441936066000000, 'address': None, 'city': None, 'zipcode_of_incident': None, 'battalion': 'B99', 'station_area': None, 'box': None, 'original_priority': '3', 'priority': '3', 'final_priority': 3, 'als_unit': False, 'call_type_group': 'Fire', 'number_of_alarms': 1, 'unit_type': 'MEDIC', 'unit_sequence_in_call_dispatch': 3, 'fire_prevention_district': None, 'supervisor_district': None, 'row_id': '152541994-71', 'latitude': nan, 'longitude': nan, 'neighborhood_name': None, 'location_geom': None}, {'call_number': 202261481, 'unit_id': 'BLS839', 'incident_number': 20092766, 'call_type': 'Medical Incident', 'call_date': '2020-08-13', 'watch_date': '2020-08-13', 'received_timestamp': 1597322311000000, 'entry_timestamp': 1597322311000000, 'dispatch_timestamp': 1597322311000000, 'response_timestamp': 1597322311000000, 'on_scene_timestamp': 1597322311000000.0, 'transport_timestamp': None, 'hospital_timestamp': None, 'call_final_disposition': 'Other', 'available_timestamp': 1597283071000000, 'address': None, 'city': None, 'zipcode_of_incident': None, 'battalion': 'B12', 'station_area': None, 'box': None, 'original_priority': '3', 'priority': '2', 'final_priority': 2, 'als_unit': False, 'call_type_group': None, 'number_of_alarms': 1, 'unit_type': 'CHIEF', 'unit_sequence_in_call_dispatch': 1, 'fire_prevention_district': None, 'supervisor_district': None, 'row_id': '202261481-BLS839', 'latitude': nan, 'longitude': nan, 'neighborhood_name': None, 'location_geom': None}]

--------------------------------------------------
Table full name: SAN_FRANCISCO_PLUS.SAN_FRANCISCO_SFPD_INCIDENTS.SFPD_INCIDENTS
Column name: address Type: TEXT
Column name: resolution Type: TEXT Description: Whether there was an arrest, citation, booking, etc.
Column name: location Type: TEXT Description: Latitude/Longitude
Column name: pddistrict Type: TEXT Description: Police Department district
Column name: category Type: TEXT
Column name: dayofweek Type: TEXT
Column name: latitude Type: FLOAT
Column name: longitude Type: FLOAT
Column name: pdid Type: NUMBER Description: Unique Identifier for use in update and insert operations
Column name: timestamp Type: NUMBER
Column name: descript Type: TEXT
Column name: unique_key Type: NUMBER Description: The unique incident number for this accident
Sample rows:
[{'unique_key': 40753980, 'category': 'OTHER OFFENSES', 'descript': 'MISCELLANEOUS INVESTIGATION', 'dayofweek': 'Friday', 'pddistrict': 'BAYVIEW', 'resolution': 'NONE', 'address': 'I-280 / CESAR CHAVEZ ST', 'longitude': -120.5, 'latitude': 90.0, 'location': 'POINT (-120.50000000000001 90)', 'pdid': 4075398068020, 'timestamp': 1088775780000000}, {'unique_key': 70407436, 'category': 'LARCENY/THEFT', 'descript': 'PETTY THEFT FROM LOCKED AUTO', 'dayofweek': 'Saturday', 'pddistrict': 'BAYVIEW', 'resolution': 'NONE', 'address': '100 Block of CLEORAND AV', 'longitude': -122.371185513221, 'latitude': 37.7291049528122, 'location': 'POINT (-122.371185513221 37.7291049528122)', 'pdid': 7040743606243, 'timestamp': 1177126440000000}, {'unique_key': 180012616, 'category': 'LARCENY/THEFT', 'descript': 'PETTY THEFT OF PROPERTY', 'dayofweek': 'Thursday', 'pddistrict': 'BAYVIEW', 'resolution': 'NONE', 'address': 'DONAHUE ST / KIRKWOOD AV', 'longitude': -122.37127431744288, 'latitude': 37.72756407203412, 'location': 'POINT (-122.37127431744287 37.72756407203413)', 'pdid': 18001261606371, 'timestamp': 1513859700000000}, {'unique_key': 81208572, 'category': 'ROBBERY', 'descript': 'ROBBERY OF A RESIDENCE WITH A GUN', 'dayofweek': 'Tuesday', 'pddistrict': 'BAYVIEW', 'resolution': 'NONE', 'address': '100 Block of DOLPHIN CT', 'longitude': -122.371476348765, 'latitude': 37.7278989368917, 'location': 'POINT (-122.371476348765 37.727898936891705)', 'pdid': 8120857203051, 'timestamp': 1226435580000000}, {'unique_key': 170646269, 'category': 'VANDALISM', 'descript': 'MALICIOUS MISCHIEF, VANDALISM', 'dayofweek': 'Tuesday', 'pddistrict': 'BAYVIEW', 'resolution': 'NONE', 'address': '100 Block of JERROLD AV', 'longitude': -122.3716253703978, 'latitude': 37.72877668181266, 'location': 'POINT (-122.37162537039781 37.72877668181267)', 'pdid': 17064626928150, 'timestamp': 1502177400000000}]

--------------------------------------------------
Table full name: SAN_FRANCISCO_PLUS.SAN_FRANCISCO_TRANSIT_MUNI.CALENDAR
Column name: friday Type: BOOLEAN Description: Indicates whether the service is valid for all Sundays operating on the agency is using normal schedules and fare categories
Column name: exception_type Type: BOOLEAN Description: Indicates whether service is available on the date specified in the exceptions field. The following are valid values for this field:  - TRUE: Service will be operating during the date listed in the column exceptions -  FALSE: Service will not be operating during the date listed in the column exceptions
Column name: thursday Type: BOOLEAN Description: Indicates whether the service is valid for all Sundays operating on the agency is using normal schedules and fare categories
Column name: wednesday Type: BOOLEAN Description: Indicates whether the service is valid for all Sundays operating on the agency is using normal schedules and fare categories
Column name: monday Type: BOOLEAN Description: Indicates whether the service is valid for all Sundays operating on the agency is using normal schedules and fare categories
Column name: service_desc Type: TEXT Description: Text description of service category
Column name: sunday Type: BOOLEAN Description: Indicates whether the service is valid for all Sundays operating on the agency is using normal schedules and fare categories
Column name: service_id Type: TEXT Description: Unique identifier for a set of dates when service is available for one or more routes
Column name: saturday Type: BOOLEAN Description: Indicates whether the service is valid for all Sundays operating on the agency is using normal schedules and fare categories
Column name: tuesday Type: BOOLEAN Description: Indicates whether the service is valid for all Sundays operating on the agency is using normal schedules and fare categories
Column name: exceptions Type: DATE Description: Specifies a particular date when this service is not available. This is typically during holidays, special events, etc. If applicable, the operating service for the day is indicated in replacement_service. Format for the date is YYYY-MM-DD
Sample rows:
[{'service_id': '73692', 'service_desc': 'Weekday', 'sunday': True, 'monday': True, 'tuesday': True, 'wednesday': True, 'thursday': True, 'friday': False, 'saturday': False, 'exceptions': '2019-12-25', 'exception_type': False}, {'service_id': '73692', 'service_desc': 'Weekday', 'sunday': True, 'monday': True, 'tuesday': True, 'wednesday': True, 'thursday': True, 'friday': False, 'saturday': False, 'exceptions': '2020-01-20', 'exception_type': False}, {'service_id': '73692', 'service_desc': 'Weekday', 'sunday': True, 'monday': True, 'tuesday': True, 'wednesday': True, 'thursday': True, 'friday': False, 'saturday': False, 'exceptions': '2020-02-17', 'exception_type': False}, {'service_id': '73693', 'service_desc': 'Saturday', 'sunday': False, 'monday': False, 'tuesday': False, 'wednesday': False, 'thursday': False, 'friday': True, 'saturday': False, 'exceptions': '2020-01-20', 'exception_type': True}]

--------------------------------------------------
Table full name: SAN_FRANCISCO_PLUS.SAN_FRANCISCO_TRANSIT_MUNI.FARES
Column name: transfer_duration Type: NUMBER Description: Specifies the length of time, in seconds, before a transfer expires. When used with a transfers_permitted value of 0, the transfer_duration field indicates how long a ticket is valid for a fare where no transfers are allowed.
Column name: rider_id Type: TEXT Description: Unique identifier a rider category. Rider categories are used to assign different pricing to different groups of individuals
Column name: transfers_permitted Type: TEXT Description: Specifies the number of transfers permitted on this fare.  -  0: No transfers are permitted on this fare. -  1: One transfer is permitted on this fare. -  2: Two transfers are permitted on this fare. -  NULL: Unlimited transfers are permitted on this fare.
Column name: payment_method Type: TEXT Description: Indicates when the fare must be paid. The following are valid values for this field: -  during: Indicates the fare is paid when riders board -  before: Indicates fare must be paid before riders board
Column name: rider_desc Type: TEXT Description: Text description of the rider category
Column name: fare_id Type: TEXT Description: Unique identifier a fare class.
Column name: price Type: NUMBER Description: Contains the fare price, in USD
Sample rows:
[{'fare_id': '5398', 'rider_id': '2', 'rider_desc': 'Senior', 'price': '3.000000000', 'payment_method': '0', 'transfers_permitted': None, 'transfer_duration': 5400}]

--------------------------------------------------
Table full name: SAN_FRANCISCO_PLUS.SAN_FRANCISCO_TRANSIT_MUNI.SHAPES
Column name: shape_point_sequence Type: NUMBER Description: Associates the latitude and longitude of a shape point with its sequence order along the shape. The values for shape_pt_sequence must increase throughout the trip but don't need to be consecutive.
Column name: shape_point_geom Type: BINARY Description: Geographic representation of the points latitude and longitude
Column name: shape_id Type: TEXT Description: Uniquely identifies each shape
Column name: shape_point_lat Type: FLOAT Description: Associates a shape point's latitude with a shape ID.
Column name: shape_point_lon Type: FLOAT Description: Associates a shape point's longitude with a shape ID.
Column name: shape_distance_traveled Type: FLOAT Description: Provides the actual distance traveled along the shape from the first shape point to the point specified in this record. This information allows the trip planner to determine how much of the shape to draw when they show part of a trip on the map. The values used for shape_dist_traveled must increase along with shape_pt_sequence: they can't be used to show reverse travel along a route.
Sample rows:
[{'shape_id': '173976', 'shape_point_sequence': 195, 'shape_point_lat': 37.715079, 'shape_point_lon': -122.424956, 'shape_point_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00K\\x8f\\xa6z2\\x9b^\\xc08\\x87k\\xb5\\x87\\xdbB@')", 'shape_distance_traveled': 14391.0}, {'shape_id': '174271', 'shape_point_sequence': 92, 'shape_point_lat': 37.760837, 'shape_point_lon': -122.440596, 'shape_point_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\xe7\\xaf\\x90\\xb92\\x9c^\\xc0\\x1bKX\\x1bc\\xe1B@')", 'shape_distance_traveled': 5348.0}, {'shape_id': '174272', 'shape_point_sequence': 185, 'shape_point_lat': 37.760837, 'shape_point_lon': -122.440596, 'shape_point_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\xe7\\xaf\\x90\\xb92\\x9c^\\xc0\\x1bKX\\x1bc\\xe1B@')", 'shape_distance_traveled': 6161.0}, {'shape_id': '174273', 'shape_point_sequence': 92, 'shape_point_lat': 37.760837, 'shape_point_lon': -122.440596, 'shape_point_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\xe7\\xaf\\x90\\xb92\\x9c^\\xc0\\x1bKX\\x1bc\\xe1B@')", 'shape_distance_traveled': 5348.0}, {'shape_id': '174274', 'shape_point_sequence': 232, 'shape_point_lat': 37.760837, 'shape_point_lon': -122.440596, 'shape_point_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\xe7\\xaf\\x90\\xb92\\x9c^\\xc0\\x1bKX\\x1bc\\xe1B@')", 'shape_distance_traveled': 10989.0}]

--------------------------------------------------
Table full name: SAN_FRANCISCO_PLUS.SAN_FRANCISCO_TRANSIT_MUNI.VEHICLE_MONITORING
Column name: onward_stop_aimed_arrival_time_5 Type: NUMBER Description: Estimated arrival time at onward stop 5
Column name: onward_stop_id_7 Type: TEXT Description: Unique reference for onward stop 7. Maps to stop_id in the stops table
Column name: onward_stop_aimed_arrival_time_1 Type: NUMBER Description: Estimated arrival time at onward stop 1
Column name: onward_stop_id_10 Type: TEXT Description: Unique reference for onward stop 10. Maps to stop_id in the stops table
Column name: onward_stop_aimed_departure_time_8 Type: NUMBER Description: Aimed departure time from onward stop 8
Column name: onward_stop_expected_arrival_time_7 Type: NUMBER Description: Estimated arrival time at onward stop 7
Column name: onward_stop_aimed_departure_time_7 Type: NUMBER Description: Aimed departure time from onward stop 7
Column name: onward_stop_name_9 Type: TEXT Description: Full text name of onward stop 9. Maps to stop_name in the stops table
Column name: vehicle_location_lon Type: FLOAT Description: The longitude of the vehicle's location at the time when time_recorded indicates
Column name: onward_stop_aimed_arrival_time_6 Type: NUMBER Description: Estimated arrival time at onward stop 6
Column name: onward_stop_id_1 Type: TEXT Description: Unique reference for onward stop 1. Maps to stop_id in the stops table
Column name: onward_stop_id_9 Type: TEXT Description: Unique reference for onward stop 9. Maps to stop_id in the stops table
Column name: next_stop_aimed_arrival_time Type: NUMBER Description: Aimed arrival time at the next stop
Column name: onward_stop_name_2 Type: TEXT Description: Full text name of onward stop 2. Maps to stop_name in the stops table
Column name: onward_stop_aimed_arrival_time_10 Type: NUMBER Description: Estimated arrival time at onward stop 10
Column name: onward_stop_id_5 Type: TEXT Description: Unique reference for onward stop 5. Maps to stop_id in the stops table
Column name: vehicle_location Type: BINARY Description: The geographic representation of the vehicle's location at the time indicated in the time_recorded column
Column name: onward_stop_aimed_departure_time_2 Type: NUMBER Description: Aimed departure time from onward stop 2
Column name: onward_stop_expected_arrival_time_1 Type: NUMBER Description: Estimated arrival time at onward stop 1
Column name: onward_stop_id_8 Type: TEXT Description: Unique reference for onward stop 8. Maps to stop_id in the stops table
Column name: onward_stop_aimed_departure_time_4 Type: NUMBER Description: Aimed departure time from onward stop 4
Column name: vehicle_location_lat Type: FLOAT Description: The latitude of the vehicle's location at the time when time_recorded indicates
Column name: next_stop_expected_departure_time Type: NUMBER Description: Estimated departure time from the next stop
Column name: trip_id Type: TEXT Description: Unique reference for the trip that the vehicle is traveling. Maps to trip_id in the trips table
Column name: onward_stop_expected_arrival_time_3 Type: NUMBER Description: Estimated arrival time at onward stop 3
Column name: onward_stop_name_10 Type: TEXT Description: Full text name of onward stop 10. Maps to stop_name in the stops table
Column name: onward_stop_id_6 Type: TEXT Description: Unique reference for onward stop 6. Maps to stop_id in the stops table
Column name: onward_stop_name_1 Type: TEXT Description: Full text name of onward stop 1. Maps to stop_name in the stops table
Column name: route_long_name Type: TEXT Description: Contains the full name of a route. This name is generally more descriptive than the name from route_short_name and often includes the route's destination or stop. Maps to route_long_name in routes table
Column name: next_stop_expected_arrival_time Type: NUMBER Description: Estimated arrival time at the next stop
Column name: onward_stop_aimed_arrival_time_7 Type: NUMBER Description: Estimated arrival time at onward stop 7
Column name: vehicle_id Type: TEXT Description: The unique identifier of the vehicle to be monitored.
Column name: onward_stop_name_3 Type: TEXT Description: Full text name of onward stop 3. Maps to stop_name in the stops table
Column name: onward_stop_aimed_arrival_time_8 Type: NUMBER Description: Estimated arrival time at onward stop 8
Column name: time_recorded Type: NUMBER Description: The timestamp of the last real-time update from the particular vehicle.
Column name: onward_stop_name_4 Type: TEXT Description: Full text name of onward stop 4. Maps to stop_name in the stops table
Column name: onward_stop_name_5 Type: TEXT Description: Full text name of onward stop 5. Maps to stop_name in the stops table
Column name: onward_stop_aimed_departure_time_1 Type: NUMBER Description: Aimed departure time from onward stop 1
Column name: route_id Type: TEXT Description: Unique reference for the route on which the vehicle is traveling. Maps to route_id in the routes table
Column name: trip_date Type: DATE Description: The service date for the trip the vehicle is serving.
Column name: onward_stop_aimed_arrival_time_3 Type: NUMBER Description: Estimated arrival time at onward stop 3
Column name: onward_stop_expected_arrival_time_2 Type: NUMBER Description: Estimated arrival time at onward stop 2
Column name: onward_stop_id_2 Type: TEXT Description: Unique reference for onward stop 2. Maps to stop_id in the stops table
Column name: onward_stop_aimed_arrival_time_9 Type: NUMBER Description: Estimated arrival time at onward stop 9
Column name: onward_stop_expected_arrival_time_4 Type: NUMBER Description: Estimated arrival time at onward stop 4
Column name: onward_stop_aimed_departure_time_6 Type: NUMBER Description: Aimed departure time from onward stop 6
Column name: onward_stop_expected_arrival_time_9 Type: NUMBER Description: Estimated arrival time at onward stop 9
Column name: next_stop_aimed_departure_time Type: NUMBER Description: Aimed departure time from the next stop
Column name: next_stop_id Type: TEXT Description: Unique reference for the stop being monitored. Maps to stop_id in the stops table
Column name: onward_stop_aimed_arrival_time_2 Type: NUMBER Description: Estimated arrival time at onward stop 2
Column name: onward_stop_expected_arrival_time_8 Type: NUMBER Description: Estimated arrival time at onward stop 8
Column name: onward_stop_name_6 Type: TEXT Description: Full text name of onward stop 6. Maps to stop_name in the stops table
Column name: onward_stop_id_3 Type: TEXT Description: Unique reference for onward stop 3. Maps to stop_id in the stops table
Column name: onward_stop_aimed_departure_time_3 Type: NUMBER Description: Aimed departure time from onward stop 3
Column name: onward_stop_expected_arrival_time_6 Type: NUMBER Description: Estimated arrival time at onward stop 6
Column name: onward_stop_expected_arrival_time_5 Type: NUMBER Description: Estimated arrival time at onward stop 5
Column name: onward_stop_name_7 Type: TEXT Description: Full text name of onward stop 7. Maps to stop_name in the stops table
Column name: onward_stop_aimed_departure_time_9 Type: NUMBER Description: Aimed departure time from onward stop 9
Column name: direction Type: TEXT Description: Indicates the direction of travel for a trip. The following values are valid:   -  O: Outbound travel -  I: Inbound travel  This field is not used in routing, but instead provides a way to separate trips by direction
Column name: onward_stop_aimed_departure_time_5 Type: NUMBER Description: Aimed departure time from onward stop 5
Column name: onward_stop_aimed_departure_time_10 Type: NUMBER Description: Aimed departure time from onward stop 10
Column name: onward_stop_aimed_arrival_time_4 Type: NUMBER Description: Estimated arrival time at onward stop 4
Column name: onward_stop_expected_arrival_time_10 Type: NUMBER Description: Estimated arrival time at onward stop 10
Column name: onward_stop_id_4 Type: TEXT Description: Unique reference for onward stop 4. Maps to stop_id in the stops table
Column name: onward_stop_name_8 Type: TEXT Description: Full text name of onward stop 8. Maps to stop_name in the stops table
Column name: next_stop_name Type: TEXT Description: Full text name of the stop being monitored. Maps to stop_name in the stops table
Sample rows:
[{'time_recorded': 1639295864000000, 'route_id': 'N', 'direction': 'IB', 'trip_date': '2021-12-11', 'trip_id': '10420258', 'route_long_name': 'JUDAH', 'vehicle_location_lat': 37.79409, 'vehicle_location_lon': -122.39519, 'vehicle_location': "bytearray(b'\\x01\\x01\\x00\\x00\\x00|3j\\xbeJ\\x99^\\xc0\\x11I>\\xc0\\xa4\\xe5B@')", 'vehicle_id': '1442', 'next_stop_id': '14509', 'next_stop_name': 'The Embarcadero & Folsom St', 'next_stop_expected_arrival_time': 1639295947000000, 'next_stop_aimed_arrival_time': 1639295880000000, 'next_stop_expected_departure_time': None, 'next_stop_aimed_departure_time': 1639295880000000, 'onward_stop_id_1': 'The Embarcadero & Brannan St', 'onward_stop_name_1': '14506', 'onward_stop_expected_arrival_time_1': 1639296035000000.0, 'onward_stop_aimed_arrival_time_1': 1639296098000000.0, 'onward_stop_aimed_departure_time_1': 1639296098000000.0, 'onward_stop_id_2': 'King St & 2nd St', 'onward_stop_name_2': '15234', 'onward_stop_expected_arrival_time_2': 1639296148000000.0, 'onward_stop_aimed_arrival_time_2': 1639296265000000.0, 'onward_stop_aimed_departure_time_2': 1639296265000000.0, 'onward_stop_id_3': 'King St & 4th St', 'onward_stop_name_3': '15239', 'onward_stop_expected_arrival_time_3': 1639296381000000.0, 'onward_stop_aimed_arrival_time_3': 1639296420000000.0, 'onward_stop_aimed_departure_time_3': 1639296420000000.0, 'onward_stop_id_4': None, 'onward_stop_name_4': None, 'onward_stop_expected_arrival_time_4': nan, 'onward_stop_aimed_arrival_time_4': nan, 'onward_stop_aimed_departure_time_4': nan, 'onward_stop_id_5': None, 'onward_stop_name_5': None, 'onward_stop_expected_arrival_time_5': nan, 'onward_stop_aimed_arrival_time_5': nan, 'onward_stop_aimed_departure_time_5': nan, 'onward_stop_id_6': None, 'onward_stop_name_6': None, 'onward_stop_expected_arrival_time_6': nan, 'onward_stop_aimed_arrival_time_6': nan, 'onward_stop_aimed_departure_time_6': nan, 'onward_stop_id_7': None, 'onward_stop_name_7': None, 'onward_stop_expected_arrival_time_7': None, 'onward_stop_aimed_arrival_time_7': None, 'onward_stop_aimed_departure_time_7': None, 'onward_stop_id_8': None, 'onward_stop_name_8': None, 'onward_stop_expected_arrival_time_8': None, 'onward_stop_aimed_arrival_time_8': None, 'onward_stop_aimed_departure_time_8': None, 'onward_stop_id_9': None, 'onward_stop_name_9': None, 'onward_stop_expected_arrival_time_9': None, 'onward_stop_aimed_arrival_time_9': None, 'onward_stop_aimed_departure_time_9': None, 'onward_stop_id_10': None, 'onward_stop_name_10': None, 'onward_stop_expected_arrival_time_10': None, 'onward_stop_aimed_arrival_time_10': None, 'onward_stop_aimed_departure_time_10': None}, {'time_recorded': 1639295864000000, 'route_id': 'M', 'direction': 'IB', 'trip_date': '2021-12-11', 'trip_id': '10421885', 'route_long_name': 'OCEAN VIEW', 'vehicle_location_lat': 37.78916, 'vehicle_location_lon': -122.40135, 'vehicle_location': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\xca\\x8bL\\xc0\\xaf\\x99^\\xc0\\xbd`&@\\x03\\xe5B@')", 'vehicle_id': '1464', 'next_stop_id': '15731', 'next_stop_name': 'Metro Montgomery Station/Downtown', 'next_stop_expected_arrival_time': 1639295888000000, 'next_stop_aimed_arrival_time': 1639295814000000, 'next_stop_expected_departure_time': None, 'next_stop_aimed_departure_time': 1639295814000000, 'onward_stop_id_1': 'Metro Embarcadero Station', 'onward_stop_name_1': '16992', 'onward_stop_expected_arrival_time_1': 1639296000000000.0, 'onward_stop_aimed_arrival_time_1': 1639295880000000.0, 'onward_stop_aimed_departure_time_1': 1639295880000000.0, 'onward_stop_id_2': 'The Embarcadero & Folsom St', 'onward_stop_name_2': '14509', 'onward_stop_expected_arrival_time_2': 1639296130000000.0, 'onward_stop_aimed_arrival_time_2': 1639296060000000.0, 'onward_stop_aimed_departure_time_2': 1639296060000000.0, 'onward_stop_id_3': None, 'onward_stop_name_3': None, 'onward_stop_expected_arrival_time_3': nan, 'onward_stop_aimed_arrival_time_3': nan, 'onward_stop_aimed_departure_time_3': nan, 'onward_stop_id_4': None, 'onward_stop_name_4': None, 'onward_stop_expected_arrival_time_4': nan, 'onward_stop_aimed_arrival_time_4': nan, 'onward_stop_aimed_departure_time_4': nan, 'onward_stop_id_5': None, 'onward_stop_name_5': None, 'onward_stop_expected_arrival_time_5': nan, 'onward_stop_aimed_arrival_time_5': nan, 'onward_stop_aimed_departure_time_5': nan, 'onward_stop_id_6': None, 'onward_stop_name_6': None, 'onward_stop_expected_arrival_time_6': nan, 'onward_stop_aimed_arrival_time_6': nan, 'onward_stop_aimed_departure_time_6': nan, 'onward_stop_id_7': None, 'onward_stop_name_7': None, 'onward_stop_expected_arrival_time_7': None, 'onward_stop_aimed_arrival_time_7': None, 'onward_stop_aimed_departure_time_7': None, 'onward_stop_id_8': None, 'onward_stop_name_8': None, 'onward_stop_expected_arrival_time_8': None, 'onward_stop_aimed_arrival_time_8': None, 'onward_stop_aimed_departure_time_8': None, 'onward_stop_id_9': None, 'onward_stop_name_9': None, 'onward_stop_expected_arrival_time_9': None, 'onward_stop_aimed_arrival_time_9': None, 'onward_stop_aimed_departure_time_9': None, 'onward_stop_id_10': None, 'onward_stop_name_10': None, 'onward_stop_expected_arrival_time_10': None, 'onward_stop_aimed_arrival_time_10': None, 'onward_stop_aimed_departure_time_10': None}, {'time_recorded': 1639295864000000, 'route_id': 'M', 'direction': 'OB', 'trip_date': '2021-12-11', 'trip_id': '10421801', 'route_long_name': 'OCEAN VIEW', 'vehicle_location_lat': 37.71404, 'vehicle_location_lon': -122.46267, 'vehicle_location': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\xe0\\xf7o^\\x9c\\x9d^\\xc0\\x9c\\t\\x97\\x9fe\\xdbB@')", 'vehicle_id': '1488', 'next_stop_id': '15825', 'next_stop_name': 'Orizaba Ave & Broad St', 'next_stop_expected_arrival_time': 1639295874000000, 'next_stop_aimed_arrival_time': 1639295695000000, 'next_stop_expected_departure_time': None, 'next_stop_aimed_departure_time': 1639295695000000, 'onward_stop_id_1': 'Broad St & Capitol Ave', 'onward_stop_name_1': '13716', 'onward_stop_expected_arrival_time_1': 1639295934000000.0, 'onward_stop_aimed_arrival_time_1': 1639295762000000.0, 'onward_stop_aimed_departure_time_1': 1639295762000000.0, 'onward_stop_id_2': 'Broad St & Plymouth Ave', 'onward_stop_name_2': '13719', 'onward_stop_expected_arrival_time_2': 1639295980000000.0, 'onward_stop_aimed_arrival_time_2': 1639295820000000.0, 'onward_stop_aimed_departure_time_2': 1639295820000000.0, 'onward_stop_id_3': 'San Jose Ave & Farallones St', 'onward_stop_name_3': '16259', 'onward_stop_expected_arrival_time_3': 1639296075000000.0, 'onward_stop_aimed_arrival_time_3': 1639295925000000.0, 'onward_stop_aimed_departure_time_3': 1639295925000000.0, 'onward_stop_id_4': 'San Jose Ave & Lakeview Ave', 'onward_stop_name_4': '16266', 'onward_stop_expected_arrival_time_4': 1639296128000000.0, 'onward_stop_aimed_arrival_time_4': 1639296006000000.0, 'onward_stop_aimed_departure_time_4': 1639296006000000.0, 'onward_stop_id_5': 'San Jose Ave & Mt Vernon Ave', 'onward_stop_name_5': '16268', 'onward_stop_expected_arrival_time_5': 1639296186000000.0, 'onward_stop_aimed_arrival_time_5': 1639296090000000.0, 'onward_stop_aimed_departure_time_5': 1639296090000000.0, 'onward_stop_id_6': 'San Jose Ave & Niagra Ave', 'onward_stop_name_6': '16269', 'onward_stop_expected_arrival_time_6': 1639296272000000.0, 'onward_stop_aimed_arrival_time_6': 1639296137000000.0, 'onward_stop_aimed_departure_time_6': 1639296137000000.0, 'onward_stop_id_7': None, 'onward_stop_name_7': None, 'onward_stop_expected_arrival_time_7': None, 'onward_stop_aimed_arrival_time_7': None, 'onward_stop_aimed_departure_time_7': None, 'onward_stop_id_8': None, 'onward_stop_name_8': None, 'onward_stop_expected_arrival_time_8': None, 'onward_stop_aimed_arrival_time_8': None, 'onward_stop_aimed_departure_time_8': None, 'onward_stop_id_9': None, 'onward_stop_name_9': None, 'onward_stop_expected_arrival_time_9': None, 'onward_stop_aimed_arrival_time_9': None, 'onward_stop_aimed_departure_time_9': None, 'onward_stop_id_10': None, 'onward_stop_name_10': None, 'onward_stop_expected_arrival_time_10': None, 'onward_stop_aimed_arrival_time_10': None, 'onward_stop_aimed_departure_time_10': None}, {'time_recorded': 1639295864000000, 'route_id': '22', 'direction': 'IB', 'trip_date': '2021-12-11', 'trip_id': '10326861', 'route_long_name': 'FILLMORE', 'vehicle_location_lat': 37.79424, 'vehicle_location_lon': -122.43493, 'vehicle_location': "bytearray(b'\\x01\\x01\\x00\\x00\\x00?\\xc5q\\xe0\\xd5\\x9b^\\xc0\\x97\\x1a\\xa1\\x9f\\xa9\\xe5B@')", 'vehicle_id': '5713', 'next_stop_id': '16492', 'next_stop_name': 'Steiner St & Vallejo St', 'next_stop_expected_arrival_time': 1639295849000000, 'next_stop_aimed_arrival_time': 1639295882000000, 'next_stop_expected_departure_time': None, 'next_stop_aimed_departure_time': 1639295882000000, 'onward_stop_id_1': 'Steiner St & Green St', 'onward_stop_name_1': '16487', 'onward_stop_expected_arrival_time_1': 1639295876000000.0, 'onward_stop_aimed_arrival_time_1': 1639295910000000.0, 'onward_stop_aimed_departure_time_1': 1639295910000000.0, 'onward_stop_id_2': 'Steiner St & Union St', 'onward_stop_name_2': '16490', 'onward_stop_expected_arrival_time_2': 1639295901000000.0, 'onward_stop_aimed_arrival_time_2': 1639295940000000.0, 'onward_stop_aimed_departure_time_2': 1639295940000000.0, 'onward_stop_id_3': 'Fillmore St & Union St', 'onward_stop_name_3': '14643', 'onward_stop_expected_arrival_time_3': 1639296001000000.0, 'onward_stop_aimed_arrival_time_3': 1639295997000000.0, 'onward_stop_aimed_departure_time_3': 1639295997000000.0, 'onward_stop_id_4': 'Fillmore St & Lombard St', 'onward_stop_name_4': '14626', 'onward_stop_expected_arrival_time_4': 1639296175000000.0, 'onward_stop_aimed_arrival_time_4': 1639296077000000.0, 'onward_stop_aimed_departure_time_4': 1639296077000000.0, 'onward_stop_id_5': 'Fillmore St & Chestnut St', 'onward_stop_name_5': '14608', 'onward_stop_expected_arrival_time_5': 1639296233000000.0, 'onward_stop_aimed_arrival_time_5': 1639296124000000.0, 'onward_stop_aimed_departure_time_5': 1639296124000000.0, 'onward_stop_id_6': None, 'onward_stop_name_6': None, 'onward_stop_expected_arrival_time_6': nan, 'onward_stop_aimed_arrival_time_6': nan, 'onward_stop_aimed_departure_time_6': nan, 'onward_stop_id_7': None, 'onward_stop_name_7': None, 'onward_stop_expected_arrival_time_7': None, 'onward_stop_aimed_arrival_time_7': None, 'onward_stop_aimed_departure_time_7': None, 'onward_stop_id_8': None, 'onward_stop_name_8': None, 'onward_stop_expected_arrival_time_8': None, 'onward_stop_aimed_arrival_time_8': None, 'onward_stop_aimed_departure_time_8': None, 'onward_stop_id_9': None, 'onward_stop_name_9': None, 'onward_stop_expected_arrival_time_9': None, 'onward_stop_aimed_arrival_time_9': None, 'onward_stop_aimed_departure_time_9': None, 'onward_stop_id_10': None, 'onward_stop_name_10': None, 'onward_stop_expected_arrival_time_10': None, 'onward_stop_aimed_arrival_time_10': None, 'onward_stop_aimed_departure_time_10': None}, {'time_recorded': 1639295864000000, 'route_id': '1', 'direction': 'IB', 'trip_date': '2021-12-11', 'trip_id': '10302269', 'route_long_name': 'CALIFORNIA', 'vehicle_location_lat': 37.79493, 'vehicle_location_lon': -122.40063, 'vehicle_location': "bytearray(b'\\x01\\x01\\x00\\x00\\x00A\\xb9m\\xdf\\xa3\\x99^\\xc0\\x15\\x90\\xf6?\\xc0\\xe5B@')", 'vehicle_id': '5883', 'next_stop_id': '14017', 'next_stop_name': 'Clay St & Front St', 'next_stop_expected_arrival_time': 1639295856000000, 'next_stop_aimed_arrival_time': 1639295105000000, 'next_stop_expected_departure_time': None, 'next_stop_aimed_departure_time': 1639295105000000, 'onward_stop_id_1': None, 'onward_stop_name_1': None, 'onward_stop_expected_arrival_time_1': nan, 'onward_stop_aimed_arrival_time_1': nan, 'onward_stop_aimed_departure_time_1': nan, 'onward_stop_id_2': None, 'onward_stop_name_2': None, 'onward_stop_expected_arrival_time_2': nan, 'onward_stop_aimed_arrival_time_2': nan, 'onward_stop_aimed_departure_time_2': nan, 'onward_stop_id_3': None, 'onward_stop_name_3': None, 'onward_stop_expected_arrival_time_3': nan, 'onward_stop_aimed_arrival_time_3': nan, 'onward_stop_aimed_departure_time_3': nan, 'onward_stop_id_4': None, 'onward_stop_name_4': None, 'onward_stop_expected_arrival_time_4': nan, 'onward_stop_aimed_arrival_time_4': nan, 'onward_stop_aimed_departure_time_4': nan, 'onward_stop_id_5': None, 'onward_stop_name_5': None, 'onward_stop_expected_arrival_time_5': nan, 'onward_stop_aimed_arrival_time_5': nan, 'onward_stop_aimed_departure_time_5': nan, 'onward_stop_id_6': None, 'onward_stop_name_6': None, 'onward_stop_expected_arrival_time_6': nan, 'onward_stop_aimed_arrival_time_6': nan, 'onward_stop_aimed_departure_time_6': nan, 'onward_stop_id_7': None, 'onward_stop_name_7': None, 'onward_stop_expected_arrival_time_7': None, 'onward_stop_aimed_arrival_time_7': None, 'onward_stop_aimed_departure_time_7': None, 'onward_stop_id_8': None, 'onward_stop_name_8': None, 'onward_stop_expected_arrival_time_8': None, 'onward_stop_aimed_arrival_time_8': None, 'onward_stop_aimed_departure_time_8': None, 'onward_stop_id_9': None, 'onward_stop_name_9': None, 'onward_stop_expected_arrival_time_9': None, 'onward_stop_aimed_arrival_time_9': None, 'onward_stop_aimed_departure_time_9': None, 'onward_stop_id_10': None, 'onward_stop_name_10': None, 'onward_stop_expected_arrival_time_10': None, 'onward_stop_aimed_arrival_time_10': None, 'onward_stop_aimed_departure_time_10': None}]

--------------------------------------------------
Table full name: SAN_FRANCISCO_PLUS.SAN_FRANCISCO_TRANSIT_MUNI.STOPS
Column name: stop_lon Type: FLOAT Description: Longitude of the stop
Column name: stop_name Type: TEXT Description: Full text name of the  transit stop
Column name: stop_lat Type: FLOAT Description: Latitude of the stop
Column name: stop_id Type: TEXT Description: Unique identifier for each stop
Column name: stop_geom Type: BINARY Description: Geographic representation of the stop's position
Sample rows:
[{'stop_id': '14343', 'stop_name': '101 Dakota St', 'stop_lat': 37.75374, 'stop_lon': -122.39565, 'stop_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00d\\xaa`TR\\x99^\\xc0\\xf2\\xd7d\\x8dz\\xe0B@')"}, {'stop_id': '14122', 'stop_name': '1095 CONNECTICUT ST', 'stop_lat': 37.753902, 'stop_lon': -122.397341, 'stop_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\x08\\x17\\xf2\\x08n\\x99^\\xc0\\xca1Y\\xdc\\x7f\\xe0B@')"}, {'stop_id': '13231', 'stop_name': '10th Ave & Pacheco St', 'stop_lat': 37.75086, 'stop_lon': -122.466376, 'stop_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\xeb\\xe8\\xb8\\x1a\\xd9\\x9d^\\xc0\\xf2\\xef3.\\x1c\\xe0B@')"}, {'stop_id': '13232', 'stop_name': '10th Ave & Pacheco St', 'stop_lat': 37.750699, 'stop_lon': -122.466547, 'stop_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\x01\\xc3\\xf2\\xe7\\xdb\\x9d^\\xc0\\xe8\\x11\\xa3\\xe7\\x16\\xe0B@')"}, {'stop_id': '13234', 'stop_name': '10th Ave & Quintara St', 'stop_lat': 37.749164, 'stop_lon': -122.466432, 'stop_geom': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\xb4s\\x9a\\x05\\xda\\x9d^\\xc0\\x97\\xab\\x1f\\x9b\\xe4\\xdfB@')"}]

--------------------------------------------------
Table full name: SAN_FRANCISCO_PLUS.SAN_FRANCISCO_TRANSIT_MUNI.STOP_TIMES
Column name: arrival_time Type: TIME Description: Specifies the scheduled arrival time at a specific stop for a specific trip on a route.
Column name: exact_timepoint Type: BOOLEAN Description: Indicates if the specified arrival and departure times for a stop are strictly adhered to by the transit vehicle, or if they're instead approximate or interpolated times.
Column name: stop_sequence Type: NUMBER Description: Identifies the order of the stops for a particular trip. The values for stop_sequence must increase throughout the trip but do not need to be consecutive.
Column name: stop_id Type: NUMBER Description: Identifies the serviced stop. Multiple routes can use the same stop.
Column name: arrives_next_day Type: BOOLEAN Description: Several routes begin before midnight, with service continuing throughout the night. This variable specifies whether arrival_time occurs after midnight the day after the scheduled day.  This is useful for identifying routes that begin one day and end the next day
Column name: trip_id Type: NUMBER Description: Identifies a trip. Multiple trips can have the same stop
Column name: departure_time Type: TIME Description: Specifies the scheduled departure time at a specific stop for a specific trip on a route.
Column name: dropoff_type Type: TEXT Description: "Indicates whether riders are dropped off at a stop as part of the normal schedule or whether a drop off at the stop isn't available. Available options:  -  regular -  none -  phone (indicates must phone agency to arrange drop off) -  driver (indicates must coordinate with driver to arrange drop off)"
Column name: departs_next_day Type: BOOLEAN Description: Several routes begin before midnight, with service continuing throughout the night. This variable specifies whether departure_time occurs after midnight the day after the scheduled day.  This is useful for identifying routes that begin one day and end the next day
Sample rows:
[{'stop_id': 15759, 'trip_id': 8951406, 'stop_sequence': 51, 'arrival_time': '06:54:55', 'arrives_next_day': False, 'departure_time': '06:54:55', 'departs_next_day': False, 'dropoff_type': 'regular', 'exact_timepoint': False}, {'stop_id': 15761, 'trip_id': 8951406, 'stop_sequence': 52, 'arrival_time': '06:55:33', 'arrives_next_day': False, 'departure_time': '06:55:33', 'departs_next_day': False, 'dropoff_type': 'regular', 'exact_timepoint': False}, {'stop_id': 15759, 'trip_id': 8951253, 'stop_sequence': 51, 'arrival_time': '06:54:55', 'arrives_next_day': False, 'departure_time': '06:54:55', 'departs_next_day': False, 'dropoff_type': 'regular', 'exact_timepoint': False}, {'stop_id': 15761, 'trip_id': 8951253, 'stop_sequence': 52, 'arrival_time': '06:55:33', 'arrives_next_day': False, 'departure_time': '06:55:33', 'departs_next_day': False, 'dropoff_type': 'regular', 'exact_timepoint': False}, {'stop_id': 15828, 'trip_id': 8951253, 'stop_sequence': 54, 'arrival_time': '06:57:00', 'arrives_next_day': False, 'departure_time': '06:57:00', 'departs_next_day': False, 'dropoff_type': 'regular', 'exact_timepoint': True}]

--------------------------------------------------
Table full name: SAN_FRANCISCO_PLUS.SAN_FRANCISCO_TRANSIT_MUNI.TRIPS
Column name: trip_headsign Type: TEXT Description: Contains the text that appears on signage that identifies the trip's destination to riders. Use this field to distinguish between different patterns of service on the same route.
Column name: trip_id Type: TEXT Description: Unique identifier for each trip
Column name: block_id Type: TEXT Description: Identifies the block to which the trip belongs. A block consists of a single trip or many sequential trips made with the same vehicle. The trips are grouped into a block by the use of a shared service day andblock_id. A block_id can include trips with different service days, which then makes distinct blocks. For more details, see: https://developers.google.com/transit/gtfs/reference/#example-showing-blocks-and-service-day
Column name: route_id Type: TEXT Description: Unique identifier for each route. A single route will have multiple trips
Column name: shape_id Type: TEXT Description: Unique identifier for the geospatial shape that describes the vehicle travel for a trip along individual points. Use to JOIN with the shapes available in the shapes table
Column name: trip_shape Type: BINARY Description: Geographical representation of the trip's entire route.
Column name: service_category Type: TEXT Description: Indicates the type of service for this trip
Column name: direction Type: TEXT Description: "Indicates the direction of travel for a trip. The following values are valid:   -  O: Outbound travel -  I: Inbound travel  This field is not used in routing, but instead provides a way to separate trips by direction"
Sample rows:
[{'trip_id': '8999873', 'route_id': '83X', 'direction': 'O', 'block_id': '8302', 'service_category': None, 'trip_headsign': 'Caltrain Depot', 'shape_id': '174188', 'trip_shape': None}, {'trip_id': '8999875', 'route_id': '83X', 'direction': 'O', 'block_id': '8301', 'service_category': None, 'trip_headsign': 'Caltrain Depot', 'shape_id': '174188', 'trip_shape': None}, {'trip_id': '8999872', 'route_id': '83X', 'direction': 'O', 'block_id': '8302', 'service_category': None, 'trip_headsign': 'Caltrain Depot', 'shape_id': '174188', 'trip_shape': None}, {'trip_id': '8999871', 'route_id': '83X', 'direction': 'O', 'block_id': '8301', 'service_category': None, 'trip_headsign': 'Caltrain Depot', 'shape_id': '174188', 'trip_shape': None}, {'trip_id': '8999893', 'route_id': '83X', 'direction': 'O', 'block_id': '8302', 'service_category': None, 'trip_headsign': 'Caltrain Depot', 'shape_id': '174188', 'trip_shape': None}]

--------------------------------------------------
Table full name: SAN_FRANCISCO_PLUS.SAN_FRANCISCO_TRANSIT_MUNI.ROUTES
Column name: route_type Type: TEXT Description: "Describes the type of transportation used on a route. The following are valid values for this field:  -  light_rail: Streetcar or light rail. Used for any light rail or street-level system within a metropolitan area. -  subway: Subway or metro. Used for any underground rail system within a metropolitan area. -  rail: Used for intercity or long-distance travel. -  bus: Used for short- and long-distance bus routes. -  ferry: Used for short- and long-distance boat service. -  cable_car: Used for street-level cable cars where the cable runs beneath the car. -  tram: Gondola or suspended cable car. Typically used for aerial cable cars where the car is suspended from the cable. -  funicular: Used for any rail system that moves on steep inclines with a cable traction system."
Column name: route_long_name Type: TEXT Description: Contains the full name of a route. This name is generally more descriptive than the name from route_short_name and often includes the route's destination or stop.
Column name: route_short_name Type: TEXT Description: Contains the short name of a route. This is a short, abstract identifier like 32, 100X, or Green that riders use to identify a route, but which doesn't give any indication of what places the route serves.
Column name: route_id Type: TEXT Description: Unique identifier for each route. A single route will have multiple trips
Sample rows:
[{'route_id': '83X', 'route_short_name': '83X', 'route_long_name': 'MID-MARKET EXPRESS', 'route_type': '3'}, {'route_id': 'E', 'route_short_name': 'E', 'route_long_name': 'EMBARCADERO', 'route_type': '0'}, {'route_id': '3', 'route_short_name': '3', 'route_long_name': 'JACKSON', 'route_type': '3'}, {'route_id': 'M', 'route_short_name': 'M', 'route_long_name': 'OCEAN VIEW', 'route_type': '0'}, {'route_id': '8AX', 'route_short_name': '8AX', 'route_long_name': 'BAYSHORE A EXPRESS', 'route_type': '3'}]

--------------------------------------------------
Table full name: SAN_FRANCISCO_PLUS.SAN_FRANCISCO_TRANSIT_MUNI.STOP_MONITORING
Column name: route_id Type: TEXT Description: Unique reference for the route on which the vehicle is traveling. Maps to route_id in the routes table
Column name: aimed_arrival_time Type: NUMBER Description: Vehicle's expected arrival time
Column name: direction Type: TEXT Description: Indicates the direction of travel for a trip. The following values are valid: - O: Outbound travel - I: Inbound travel  This field is not used in routing, but instead provides a way to separate trips by direction
Column name: trip_id Type: TEXT Description: Unique reference for the trip that the vehicle is traveling. Maps to trip_id in the trips table
Column name: stop_name Type: TEXT Description: Full text name of the stop being monitored. Maps to stop_name in the stops table
Column name: trip_date Type: DATE Description: The service date for the trip the vehicle is serving.
Column name: time_recorded Type: NUMBER Description: The timestamp of the real-time update from the particular vehicle.
Column name: route_long_name Type: TEXT Description: Contains the full name of a route. This name is generally more descriptive than the name from route_short_name and often includes the route's destination or stop. Maps to route_long_name in routes table
Column name: vehicle_id Type: TEXT Description: The unique identifier of the vehicle to be monitored.
Column name: vehicle_at_stop Type: BOOLEAN Description: Determines if the vehicle is at the monitored stop during the time_recorded. TRUE if vehicle is at the stop
Column name: aimed_departure_time Type: NUMBER Description: Vehicle's expected departure time
Column name: vehicle_location_lat Type: FLOAT Description: The latitude of the vehicle's location at the time when time_recorded indicates
Column name: stop_id Type: TEXT Description: Unique reference for the stop being monitored. Maps to stop_id in the stops table
Column name: vehicle_location Type: BINARY Description: The geographic representation of the vehicle's location at the time indicated in the time_recorded column
Column name: vehicle_location_lon Type: FLOAT Description: The longitude of the vehicle's location at the time when time_recorded indicates
Sample rows:
[{'time_recorded': 1620745923000000, 'stop_id': '13136', 'stop_name': '3rd St & Stevenson St', 'route_id': '15', 'direction': 'IB', 'trip_date': '2021-05-11', 'trip_id': '9757413', 'route_long_name': 'BAYVIEW HUNTERS POINT EXPRESS', 'vehicle_location_lat': 37.7802238, 'vehicle_location_lon': -122.394379, 'vehicle_location': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\xab\\xcej\\x81=\\x99^\\xc0\\xcaG\\x9c_\\xde\\xe3B@')", 'vehicle_id': '8887', 'vehicle_at_stop': None, 'aimed_arrival_time': 1620745990000000, 'aimed_departure_time': 1620745990000000}, {'time_recorded': 1620739679000000, 'stop_id': '13136', 'stop_name': '3rd St & Stevenson St', 'route_id': '15', 'direction': 'IB', 'trip_date': '2021-05-11', 'trip_id': '9757433', 'route_long_name': 'BAYVIEW HUNTERS POINT EXPRESS', 'vehicle_location_lat': 37.7784233, 'vehicle_location_lon': -122.392181, 'vehicle_location': "bytearray(b'\\x01\\x01\\x00\\x00\\x004GV~\\x19\\x99^\\xc0\\xe1\\xf8\\xeb_\\xa3\\xe3B@')", 'vehicle_id': '8887', 'vehicle_at_stop': None, 'aimed_arrival_time': 1620739930000000, 'aimed_departure_time': 1620739930000000}, {'time_recorded': 1620752158000000, 'stop_id': '13136', 'stop_name': '3rd St & Stevenson St', 'route_id': '15', 'direction': 'IB', 'trip_date': '2021-05-11', 'trip_id': '9757403', 'route_long_name': 'BAYVIEW HUNTERS POINT EXPRESS', 'vehicle_location_lat': 37.7827721, 'vehicle_location_lon': -122.397629, 'vehicle_location': "bytearray(b'\\x01\\x01\\x00\\x00\\x00=\\xbc\\xe7\\xc0r\\x99^\\xc0R\\xdcL\\xe01\\xe4B@')", 'vehicle_id': '8887', 'vehicle_at_stop': None, 'aimed_arrival_time': 1620752160000000, 'aimed_departure_time': 1620752160000000}, {'time_recorded': 1620737276000000, 'stop_id': '13136', 'stop_name': '3rd St & Stevenson St', 'route_id': '15', 'direction': 'IB', 'trip_date': '2021-05-11', 'trip_id': '9757435', 'route_long_name': 'BAYVIEW HUNTERS POINT EXPRESS', 'vehicle_location_lat': 37.779995, 'vehicle_location_lon': -122.394127, 'vehicle_location': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\x1e\\xdes`9\\x99^\\xc0\\x92\\x05L\\xe0\\xd6\\xe3B@')", 'vehicle_id': '8645', 'vehicle_at_stop': None, 'aimed_arrival_time': 1620737480000000, 'aimed_departure_time': 1620737480000000}, {'time_recorded': 1620737035000000, 'stop_id': '13136', 'stop_name': '3rd St & Stevenson St', 'route_id': '15', 'direction': 'IB', 'trip_date': '2021-05-11', 'trip_id': '9757435', 'route_long_name': 'BAYVIEW HUNTERS POINT EXPRESS', 'vehicle_location_lat': 37.770565, 'vehicle_location_lon': -122.389336, 'vehicle_location': "bytearray(b'\\x01\\x01\\x00\\x00\\x00\\xf2\\xc9\\x8a\\xe1\\xea\\x98^\\xc0\\x9a8\\xb9\\xdf\\xa1\\xe2B@')", 'vehicle_id': '8645', 'vehicle_at_stop': None, 'aimed_arrival_time': 1620737480000000, 'aimed_departure_time': 1620737480000000}]

--------------------------------------------------
Table full name: SAN_FRANCISCO_PLUS.SAN_FRANCISCO_TREES.STREET_TREES
Column name: longitude Type: FLOAT Description: WGS84
Column name: tree_id Type: NUMBER Description: Unique ID for Tree
Column name: species Type: TEXT Description: Species of tree
Column name: site_info Type: TEXT Description: Description of location of tree
Column name: care_assistant Type: TEXT Description: Agency or person that is secondary caregiver to tree
Column name: y_coordinate Type: FLOAT Description: CA State Plane III
Column name: plant_date Type: NUMBER Description: Date tree was planted
Column name: location Type: TEXT Description: Location formatted for mapping
Column name: permit_notes Type: TEXT Description: Tree permit number reference
Column name: dbh Type: TEXT Description: depth height
Column name: latitude Type: FLOAT Description: WGS84
Column name: address Type: TEXT Description: Address of Tree
Column name: care_taker Type: TEXT Description: Agency or person that is primary caregiver to tree. Owner of Tree
Column name: site_order Type: NUMBER Description: Order of tree at address where multiple trees are at same address. Trees are ordered in ascending address order
Column name: legal_status Type: TEXT Description: Legal staus: Permitted or DPW maintained
Column name: plant_type Type: TEXT Description: Landscaping or Tree
Column name: x_coordinate Type: FLOAT Description: CA State Plane III
Column name: plot_size Type: TEXT Description: dimension of tree plot
Sample rows:
[{'tree_id': 45997, 'legal_status': 'Permitted Site', 'species': 'Tree(s) ::', 'address': None, 'site_order': 115, 'site_info': 'Sidewalk: Curb side : Cutout', 'plant_type': 'Tree', 'care_taker': 'Private', 'care_assistant': None, 'plant_date': 1007640000000000, 'dbh': None, 'plot_size': None, 'permit_notes': 'Permit Number 44451', 'x_coordinate': None, 'y_coordinate': None, 'latitude': None, 'longitude': None, 'location': None}, {'tree_id': 48142, 'legal_status': 'Permitted Site', 'species': 'Tree(s) ::', 'address': None, 'site_order': 252, 'site_info': 'Sidewalk: Curb side : Cutout', 'plant_type': 'Tree', 'care_taker': 'Private', 'care_assistant': None, 'plant_date': 1026907200000000, 'dbh': None, 'plot_size': None, 'permit_notes': 'Permit Number 45761', 'x_coordinate': None, 'y_coordinate': None, 'latitude': None, 'longitude': None, 'location': None}, {'tree_id': 48199, 'legal_status': 'Permitted Site', 'species': 'Tree(s) ::', 'address': None, 'site_order': 58, 'site_info': 'Sidewalk: Curb side : Cutout', 'plant_type': 'Tree', 'care_taker': 'Private', 'care_assistant': None, 'plant_date': 1026907200000000, 'dbh': None, 'plot_size': None, 'permit_notes': 'Permit Number 45761', 'x_coordinate': None, 'y_coordinate': None, 'latitude': None, 'longitude': None, 'location': None}, {'tree_id': 48349, 'legal_status': 'Permitted Site', 'species': 'Tree(s) ::', 'address': None, 'site_order': 152, 'site_info': 'Sidewalk: Curb side : Cutout', 'plant_type': 'Tree', 'care_taker': 'Private', 'care_assistant': None, 'plant_date': 1026907200000000, 'dbh': None, 'plot_size': None, 'permit_notes': 'Permit Number 45761', 'x_coordinate': None, 'y_coordinate': None, 'latitude': None, 'longitude': None, 'location': None}, {'tree_id': 45863, 'legal_status': 'Permitted Site', 'species': 'Tree(s) ::', 'address': None, 'site_order': 85, 'site_info': 'Sidewalk: Curb side : Cutout', 'plant_type': 'Tree', 'care_taker': 'Private', 'care_assistant': None, 'plant_date': 1007640000000000, 'dbh': None, 'plot_size': None, 'permit_notes': 'Permit Number 44451', 'x_coordinate': None, 'y_coordinate': None, 'latitude': None, 'longitude': None, 'location': None}]

--------------------------------------------------
External knowledge that might be helpful: 
# Details of bike share trips

- trip ID
- duration (s)
- start date
- start station name
  - Not null
- route : `start_station_name` - `end_station_name` (there is " - " between two strings of names)
- bike number
- subscriber type
- member birth year
  - Not null
- age := current year - birth year
  - Not null
- age class
  - age < 40 : 'Young (<40 Y.O)'
  - 40 <= age <= 60 : 'Adult (40-60 Y.O)'
  - age > 60 : 'Senior Adult (>60 Y.O)'
- member gender
  - Not null
- region name
The table structure information is ({database name: {schema name: [table name]}}): 
{'SAN_FRANCISCO_PLUS': {'SAN_FRANCISCO_311': ['_311_SERVICE_REQUESTS'], 'SAN_FRANCISCO_BIKESHARE': ['BIKESHARE_STATION_STATUS', 'BIKESHARE_REGIONS', 'BIKESHARE_STATION_INFO', 'BIKESHARE_TRIPS'], 'SAN_FRANCISCO_FILM_LOCATIONS': ['FILM_LOCATIONS'], 'SAN_FRANCISCO_NEIGHBORHOODS': ['BOUNDARIES'], 'SAN_FRANCISCO_SFFD_SERVICE_CALLS': ['SFFD_SERVICE_CALLS'], 'SAN_FRANCISCO_SFPD_INCIDENTS': ['SFPD_INCIDENTS'], 'SAN_FRANCISCO_TRANSIT_MUNI': ['CALENDAR', 'FARES', 'SHAPES', 'VEHICLE_MONITORING', 'STOPS', 'STOP_TIMES', 'TRIPS', 'ROUTES', 'STOP_MONITORING'], 'SAN_FRANCISCO_TREES': ['STREET_TREES']}}
Task: Could you provide the details of the top 5 longest bike share trips that started between July 1, 2017, and December 31, 2017, including the trip ID, duration in seconds, start date, start station name, route (derived from start station name to end station name), bike number, subscriber type, member's birth year, the member's current age (calculated using the current year), an age classification based on whether the member is younger than 40, between 40 and 60, or older than 60, the member's gender, and the name of the region of the start station? Please exclude any trips where the start station name, member's birth year, or member's gender is not specified.

Please think step by step and answer only one complete SQL in snowflake dialect in ```sql``` format.
SQL usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'SAN_FRANCISCO_PLUS': {'SAN_FRANCISCO_311': ['_311_SERVICE_REQUESTS'], 'SAN_FRANCISCO_BIKESHARE': ['BIKESHARE_STATION_STATUS', 'BIKESHARE_REGIONS', 'BIKESHARE_STATION_INFO', 'BIKESHARE_TRIPS'], 'SAN_FRANCISCO_FILM_LOCATIONS': ['FILM_LOCATIONS'], 'SAN_FRANCISCO_NEIGHBORHOODS': ['BOUNDARIES'], 'SAN_FRANCISCO_SFFD_SERVICE_CALLS': ['SFFD_SERVICE_CALLS'], 'SAN_FRANCISCO_SFPD_INCIDENTS': ['SFPD_INCIDENTS'], 'SAN_FRANCISCO_TRANSIT_MUNI': ['CALENDAR', 'FARES', 'SHAPES', 'VEHICLE_MONITORING', 'STOPS', 'STOP_TIMES', 'TRIPS', 'ROUTES', 'STOP_MONITORING'], 'SAN_FRANCISCO_TREES': ['STREET_TREES']}}

When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
If the task description does not specify the number of decimal places, retain all decimals to four places.

[Self-refine]
2025-05-06 23:18:22 - Thread-1144 (execute) - INFO - [Try to run SQL in self-refine]
```sql
SELECT
    t."trip_id",
    t."duration_sec",
    TO_TIMESTAMP_NTZ(t."start_date" / 1000000)                         AS "start_datetime",
    t."start_station_name",
    t."start_station_name" || ' - ' || t."end_station_name"            AS "route",
    t."bike_number",
    t."subscriber_type",
    t."member_birth_year",
    (YEAR(CURRENT_DATE) - t."member_birth_year")                       AS "age",
    CASE
        WHEN (YEAR(CURRENT_DATE) - t."member_birth_year") < 40  THEN 'Young (<40 Y.O)'
        WHEN (YEAR(CURRENT_DATE) - t."member_birth_year") <= 60 THEN 'Adult (40-60 Y.O)'
        ELSE 'Senior Adult (>60 Y.O)'
    END                                                                AS "age_class",
    t."member_gender",
    r."name"                                                           AS "region_name"
FROM  SAN_FRANCISCO_PLUS.SAN_FRANCISCO_BIKESHARE.BIKESHARE_TRIPS         t
LEFT JOIN SAN_FRANCISCO_PLUS.SAN_FRANCISCO_BIKESHARE.BIKESHARE_STATION_INFO s
       ON s."station_id" = TO_VARCHAR(t."start_station_id")
LEFT JOIN SAN_FRANCISCO_PLUS.SAN_FRANCISCO_BIKESHARE.BIKESHARE_REGIONS      r
       ON r."region_id" = s."region_id"
WHERE  TO_DATE(TO_TIMESTAMP_NTZ(t."start_date" / 1000000))
          BETWEEN '2017-07-01' AND '2017-12-31'
  AND  t."start_station_name" IS NOT NULL
  AND  t."member_birth_year"   IS NOT NULL
  AND  t."member_gender"       IS NOT NULL
ORDER BY t."duration_sec" DESC NULLS LAST
LIMIT 5;
```
[Try to run SQL in self-refine]
2025-05-06 23:18:24 - Thread-1144 (execute) - INFO - Total iteration counts: 0
